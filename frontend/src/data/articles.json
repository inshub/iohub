[
  {
    "id": 7935,
    "title": "【网站自荐】一键优化你的拍照姿势",
    "content": "[poseup.ai](https://poseup.ai) 是一个拍照姿势优化工具，上传你的照片，ai自动优化你的姿势，达到一键出片的效果。",
    "created_at": "2025-10-17T15:40:45Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7935"
  },
  {
    "id": 7934,
    "title": "【网站自荐】利用AI的能力帮助用户找到自己的灵魂伴侣",
    "content": "灵魂伴侣是与你在精神和情感上完美匹配的人。我们的AI灵魂伴侣测试结合先进的心理学、占星术和面相学技术，分析你的性格、价值观和渴望，揭示你真正的灵魂伴侣是谁。[See Your Soulmate](https://seeyoursoulmate.net/zh)",
    "created_at": "2025-10-17T13:48:05Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7934"
  },
  {
    "id": 7932,
    "title": "【工具自荐】zwplayer 一款极简的html5免费播放器，调用方式简单，帮助开发者更快地集成视频播放",
    "content": "\n## 前言\n在众多优秀的H5播放器中，如 Video.js、西瓜播放器、CKPlayer 等，为什么我们依然选择开发 zwplayer？\n我们的初衷非常纯粹：**我们希望帮助开发者更轻松、更高效地完成视频播放集成**。\n\n## 为什么选择zwplayer？\n\n我们团队在多媒体领域已深耕超过20多年，亲历了从 RM、WMV、MOV，到 Flash（flv、rtmp），再到如今 H5（HLS、DASH、WebRTC）等流媒体技术的完整演进。我们深知这其中所涉及的技术细节复杂多样，而大多数开发者真正需要的，只是一个简单、稳定、易用的视频播放方案。\n\n因此，zwplayer 的目标非常明确：**最大限度地降低技术门槛**。你不需要深入了解 HLS、DASH 等各种流媒体协议的区别，也不必为不同视频格式寻找和配置不同的播放插件。无论视频采用何种协议或编码格式，你只需提供一个视频地址，剩下的交给 zwplayer。\n\n## 对比展示\n\n### 传统方案\n需要开发者根据视频格式选择不同的播放技术和插件：\n```html\n<!-- 播放HLS格式 -->\n<script src=\"player-core.js\"></script>\n<script src=\"hls-plugin.js\"></script> <!-- 需要额外加载HLS插件 -->\n<script>\nnew Player({\n    element: '#video-container',\n    plugins: [HlsPlugin],  // 需要明确指定插件\n    url: 'video.m3u8'\n});\n</script>\n\n<!-- 播放FLV格式 -->  \n<script src=\"player-core.js\"></script>\n<script src=\"flv-plugin.js\"></script> <!-- 需要更换为FLV插件 -->\n<script>\nnew Player({\n    element: '#video-container',\n    plugins: [FlvPlugin],  // 需要更换插件类型\n    url: 'video.flv'\n});\n</script>\n\n<!-- 播放Dash格式 -->\n<script src=\"player-core.js\"></script>\n<script src=\"dash-plugin.js\"></script> <!-- 需要更换为DASH插件 -->\n<script>\nnew Player({\n    element: '#video-container',\n    plugins: [DashPlugin],  // 需要更换插件类型\n    url: 'video.dash'\n});\n</script>\n```\n\n### zwplayer统一方案\n极致简化，自动适配多种视频协议，调用方式完全一致：\n\n```html\n<script type=\"text/javascript\" src=\"./zwplayer/zwplayer.js\"></script>\n<script>\n// 播放HLS流 - 自动识别，无需额外配置\nnew zwplayer({\n    playerElm: '#video-container',\n    url: 'https://example.com/video.m3u8'\n});\n\n// 播放FLV流 - 完全相同调用方式\nnew zwplayer({\n    playerElm: '#video-container', \n    url: 'https://example.com/video.flv'\n});\n\n// 播放MP4文件 - 保持一致API\nnew zwplayer({\n    playerElm: '#video-container',\n    url: 'https://example.com/video.mp4'\n});\n\n// 播放DASH流 - 无需更改任何代码\nnew zwplayer({\n    playerElm: '#video-container',\n    url: 'https://example.com/video.mpd'\n});\n</script>\n```\n\n即使是浏览器原生不支持的协议（如 RTSP），通过媒体网关，zwplayer 也能提供一致的播放体验：\n```html\n<script type=\"text/javascript\" charset=\"utf-8\" src=\"./zwplayer/zwplayer.js\"></script>\n<script>\n    new zwplayer({\n        playerElm: '#mse',\n        url: 'rtsp://admin:admin12345@192.168.1.64:554/Streaming/Channels/101',\n        xmc_url: 'https://xmc.zwplayer.cn:3006/'\n    });\n</script>\n```\n\n## 我们的愿景\n\n我们致力于打造一款**智能傻瓜式**的播放器，让开发者彻底摆脱繁琐的流媒体技术细节，将更多精力投入到业务逻辑与用户体验的优化中。您节省的每一分钟，都是我们价值的体现，是我们不断前进的动力。\n\n## 官方网站\n[https://www.zwplayer.cn](https://www.zwplayer.cn)\n---\n**zwplayer** - 让视频播放更简单！",
    "created_at": "2025-10-17T13:25:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7932"
  },
  {
    "id": 7931,
    "title": "【网站自推】一个可以在线敲木鱼、放松身心的网站。",
    "content": "## 简介\n一个可以在线敲木鱼、放松身心的网站。\n\n简单纯粹的网页交互，模拟佛教木鱼的敲击声，带来片刻宁静。\n支持自动播放与多语言（涵盖亚洲佛教流行国家），无需账户、无费用——只需轻敲、聆听与呼吸。\n适合在忙碌的工作间隙放松自己，找回心灵的平静。\n\n## 地址\n- [官网](https://www.woodenfish.online/)\n- [Product Hunt](https://www.producthunt.com/products/woodenfish-online?launch=woodenfish-online)\n\n## 移动端截图\n![Image](https://github.com/user-attachments/assets/5d8d421b-a43f-4149-bf79-542a9480c48e)\n![Image](https://github.com/user-attachments/assets/39a8ee4e-70a4-4563-b918-b6675b0e1784)",
    "created_at": "2025-10-17T08:00:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7931"
  },
  {
    "id": 7930,
    "title": "【开源插件自荐】极简的光标拖尾",
    "content": "Chrome 应用商店安装即用。低代码量、低消耗、低选项。\n\n<img width=\"1656\" height=\"1081\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/63f83d6e-598c-42d5-aefc-307479d420e7\" />\n\n介绍：这是一个由 SVG 实现的 path 路径拖尾效果，无任何其它添加。\n\n起因：当看完一个视频/文章，总是会忘记鼠标光标在哪里，就需要乱动下鼠标一会才能看到。就想着需要一个提示的东西。\n\n而现在的商店光标插件的功能都有的花、乱，然后就 AI 辅助快速写完了这个功能，并优化消耗。\n\n后续会继续优化线条流程度、美观度、消耗。\n\nChrome 插件地址：https://chromewebstore.google.com/detail/cursor-trail/mgajakofhfihfalihlaciinkgadlnchn\n\nGithub 地址：https://github.com/YYsuni/cursor-trail",
    "created_at": "2025-10-17T07:50:37Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7930"
  },
  {
    "id": 7929,
    "title": "【开源&工具推荐】Cent 完全免费、开源的多人协作记账 Web App",
    "content": "# Cent\n\n> 你可能只需要一个记账软件。\n\n[![License: CC BY-NC-SA 4.0](https://img.shields.io/badge/License-CC%20BY--NC--SA%204.0-green.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/)\n[![Build](https://img.shields.io/badge/build-passing-brightgreen.svg)]()\n[![PWA](https://img.shields.io/badge/PWA-supported-blue.svg)]()\n[![GitHub Repo](https://img.shields.io/badge/data-storage_on_GitHub-black?logo=github)]()\n\nCent 是一个 **完全免费、开源的多人协作记账 Web App**，  \n基于 **GitHub 仓库** 实现数据同步与版本控制，无需服务器，即可实现跨平台实时同步。\n\n🔗 **在线体验**：[https://cent.linkai.work](https://cent.linkai.work)  \n💾 **开源仓库**：[https://github.com/glink25/Cent](https://github.com/glink25/Cent)  \n📖 **博客**：[https://glink25.github.io/tag/Cent/](https://glink25.github.io/tag/Cent/)  \n\n---\n\n## ✨ 特性\n\n- 💾 **数据完全自持**：账本数据保存在你的 GitHub 私人仓库中，无需任何第三方服务器。  \n- 👥 **多人协作**：通过 GitHub Collaborator 功能即可共享账本，实时同步修改。  \n- ⚡️ **增量同步**：只上传/下载变更数据，大幅缩短同步时间。  \n- 📊 **丰富的统计分析**：支持多维度筛选与走势分析，可自定义分析视图。  \n- 🏷️ **分类与标签系统**：支持二级分类、自定义标签、图标、排序。  \n- 💰 **预算管理**：按分类或标签设置预算并实时监控进度。  \n- 🖼️ **附件支持**：可为账单上传图片附件。  \n- 📱 **PWA 支持**：可安装到桌面，像原生 App 一样使用，支持 iOS 与 Android。  \n- 🔒 **完全开源**：部署成本几乎为零，代码完全可审计、可自建。\n\n---\n\n## 🧠 核心原理\n\nCent 是一个“纯前端”的 PWA 应用。  \n除 GitHub OAuth 登录外，Cent 不依赖任何后端服务。\n\n### 🗂 数据结构\n\n- 每个账本（Book）即为一个 GitHub 仓库。\n- 数据以 JSON 格式存储在仓库中，支持历史版本回滚。\n- 通过仓库名识别账本，实现多账本管理。\n\n### 🔁 增量同步机制\n\nCent 内置一套自定义的增量同步策略，仅同步增量差异：  \n- 首次同步：完整下载数据。  \n- 后续同步：仅传输新增或修改部分。  \n- 支持离线缓存与断点续传。  \n\n该机制显著提升了同步效率，使得多人协作体验流畅自然。\n\n### 🧩 可扩展同步端点\n\n同步逻辑经过抽象封装，未来将支持：  \n- 自建服务器  \n- 网盘（如 Dropbox、OneDrive）  \n- 本地离线账本  \n\n---\n\n## 📈 功能预览\n\n| 功能 | 截图 |\n|------|------|\n| 二级分类 & 标签管理 | ![分类示例](https://glink25.github.io/post-assets/mgucw881-cent-accountting.jpg) |\n| 自定义标签 | ![标签示例](https://glink25.github.io/post-assets/mgucw884-cent-tag-1.jpg) |\n| 统计与分析视图 | ![统计分析](https://glink25.github.io/post-assets/mgucw884-cent-stat.jpg) |\n| 预算管理 | ![预算视图](https://glink25.github.io/post-assets/mgucw884-cent-budget.jpg) |\n| GitHub 协作 | ![协作功能](https://glink25.github.io/post-assets/mgucw884-github-collaborator.jpg) |\n\n---\n\n## 🚀 部署与使用\n\n### 方式一：直接使用线上版本\n\n1. 打开 [https://cent.linkai.work](https://cent.linkai.work)\n2. 使用 GitHub 登录授权\n3. 新建账本（将自动创建一个仓库）\n4. 开始记账 🎉\n\n### 方式二：自行部署\n\n1. Fork 本仓库  \n2. 在 [Cloudflare Pages](https://pages.cloudflare.com/) 或任意静态托管平台部署  \n3. 在登录界面手动输入 GitHub Token 使用  \n4. 所有账本与数据均存储于你的 GitHub 仓库中  \n\n---\n\n## 🧪 开发计划\n\n- ✅ 增量同步核心实现  \n- ✅ 多人协作账本  \n- 🚧 自动测试体系  \n- 🚧 地图支出可视化  \n- 🚧 更多同步端点（网盘 / 自建服务器）  \n- 🚧 移动端交互优化  \n\n---\n\n## 💬 贡献与反馈\n\nCent 欢迎所有开发者与用户参与贡献：\n\n```bash\n# 克隆项目\ngit clone https://github.com/glink25/Cent.git\n\n# 安装依赖\npnpm install\n\n# 本地运行\npnpm dev\n```\n\n## 📜 许可证\n\n本项目采用 Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)\n 协议。\n - 允许共享、改编与再发布\n - 必须署名原作者\n - 禁止商业使用\n - 派生作品须使用相同许可协议",
    "created_at": "2025-10-17T06:31:52Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7929"
  },
  {
    "id": 7928,
    "title": "【网站自推】看youtube视频，学英语，通过视频字幕进行输入练习",
    "content": "## 软件亮点\n通过观看自己感兴趣的视频学习英语，1是掌握母语者发音，2通过软件的输入练习比单纯的背诵单词更有效，如果你听力够好默写也能帮你测试你的听力。\n\n## 软件功能\n- 可以通过输入单词来控制视频\n- 默写练习听力\n- 翻译单词\n- 单词收藏\n- 下载字幕\n\n网页版：（网页版也需要下载插件才能使用）https://langkey.win/youtubeVideo\n插件版：[google插件](https://chromewebstore.google.com/detail/langkey-%EF%BD%9Clearning-foreign/chhjnodmnfbljoindmeeafjiepfjpamn) [微软Bing插件](https://microsoftedge.microsoft.com/addons/detail/langkey-%EF%BD%9C%E5%AD%A6%E5%A4%96%E8%AF%AD%E8%80%8C%E6%97%A0%E9%9C%80%E5%8A%AA%E5%8A%9B/pfamchnplpbecklooemkedlmccegkbkk)\n\n## 插件版截图\n<img width=\"1905\" height=\"1026\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/72b95dcf-bb7e-4d2f-ba65-cdcc60eb5d10\" />\n\n<img width=\"1198\" height=\"671\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0307de7a-07e4-449e-95e6-5574c3e9c7ef\" />\n\n## 网页版截图\n<img width=\"1182\" height=\"738\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f6c03d92-639e-47ea-b4f9-d8729988edeb\" />",
    "created_at": "2025-10-17T06:30:28Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7928"
  },
  {
    "id": 7927,
    "title": "【工具推荐】AICrop —— 一款注重隐私的智能图片裁剪工具",
    "content": "**推荐：AICrop —— 一款注重隐私的智能图片裁剪工具**\n网站地址：[https://aicrop.app/](https://aicrop.app)\n\n在日常创作中，无论是做社交媒体内容、博客封面还是宣传素材，我们经常需要为不同平台（如 Instagram、X/Twitter、TikTok、LinkedIn、YouTube 等）调整图片尺寸与比例。这本是一件琐碎且重复的工作——不仅耗时，还容易让主体偏位或构图失衡。\n\nAICrop 就是为了解决这个问题而生的一款小工具。它由我与 Claude Code 一起通过 “vibe coding” 协作方式开发完成，核心理念是：**自动化、轻量、隐私优先**。\n\n<img width=\"2622\" height=\"1744\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1852169d-32df-4548-8635-52f1cb42bb1b\" />\n\n<img width=\"2750\" height=\"1760\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a4acc422-3013-4100-8f44-ae485b887bf1\" />\n\n---\n\n### 💡 主要特性\n\n* **AI 智能识别主体**：自动检测人脸、动物或物体，确保在不同尺寸下主体始终居中。\n* **多平台裁剪模板**：内置主流社交平台的图片比例预设（Instagram、X、TikTok、LinkedIn、YouTube 等），一键生成预览。\n* **完全本地运行**：所有处理都在浏览器端完成，无需上传图片，100% 保护隐私。\n* **无需注册、无水印**：打开即用，不限次数，无广告干扰。\n* **手动微调**：如果自动裁剪略有偏差，可直接拖拽调整。\n\n---\n\n### 🔧 使用场景\n\n1. **社交媒体创作者**：一键生成不同平台所需图片比例，节省繁琐调整时间。\n2. **品牌设计与市场营销**：保持图片视觉一致性，自动聚焦主要内容。\n3. **摄影师与工作室**：快速生成适配尺寸的作品预览图。\n4. **开发者或设计师**：想快速测试不同封面比例或UI展示效果。\n\n---\n\n### 💬 推荐理由\n\n* **隐私友好**：与许多在线图片工具不同，AICrop 不会上传任何图片数据。\n* **极简高效**：界面简洁，几乎无需学习成本。\n* **AI 加持**：主体识别准确率高，能显著减少手动调整。\n* **开箱即用**：网页即工具，无需安装或登录。\n* **创造性协作产物**：这是一次人类开发者与 Claude Code 通过 “vibe coding” 共同完成的实验项目，展现了人机协作的新范式。\n\n---\n\n无论你是内容创作者、设计师还是开发者，AICrop 都能帮你节省时间，让图片裁剪这件小事变得智能又轻松。\n👉 立即试用：[https://aicrop.app/](https://aicrop.app)",
    "created_at": "2025-10-17T03:45:10Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7927"
  },
  {
    "id": 7926,
    "title": "Fix typos",
    "content": null,
    "created_at": "2025-10-17T02:58:12Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/pull/7926"
  },
  {
    "id": 7925,
    "title": "【开源推荐】 — htmldocs ：构建 PDF 文档模板的现代方案",
    "content": "# 🌟 开源推荐 — htmldocs\n\n> **[htmldocs](https://github.com/htmldocs-js/htmldocs)**  \n> 用 React / JSX + Tailwind 构建 PDF 文档模板的现代方案\n\n---\n\n你还在为用 LaTeX 编写合同、报表或发票模板而头疼吗？  \nHTML＋Word 虽然方便，但在模板化、版本控制、复用插值上很容易变得混乱不堪。  \n**htmldocs** 的出现，正是为了解决这一痛点 —— 它把文档（PDF / 报表 / 合同 / 发票）当成可组件化、可编程的界面来构建。\n\n---\n\n## 🚀 核心亮点\n\n- **🧩 JSX / React 模板**  \n  使用熟悉的 React 语法和组件化思维构建文档结构、布局与逻辑。  \n  你可以把可复用的文档块做成组件，然后组合使用。\n\n- **🎨 Tailwind / 原生 CSS 支持**  \n  支持现代 CSS 特性（如 Flexbox、Grid、margin boxes 等），样式灵活可控。\n\n- **⚡ 实时预览 + 热重载体验**  \n  本地开发体验流畅，修改模板立刻可见，提高设计与排版效率。\n\n- **🧠 TypeScript 强类型保障**  \n  模板与数据接口一体化，减少运行时错误。\n\n- **📄 基于 Paged.js 的专业分页引擎**  \n  自动处理分页、页眉页脚、跨页布局等复杂逻辑。\n\n- **🌐 完全开放的 Web 技术栈**  \n  不是黑盒的 PDF 生成器，而是基于 HTML / CSS / JS，可轻松集成进你的系统。\n\n- **💡 MIT 开源许可**  \n  商业项目、SaaS 平台、个人项目均可自由使用与二次开发。\n\n---\n\n## 🧰 适用场景\n\n| 应用场景 | 为什么选 htmldocs |\n|-----------|-------------------|\n| 合同 / 协议 / 模板生成 | 模板化 + 插值 + 样式控制能力强 |\n| 报表 / 分析报告 / 发票 | 复杂布局与分页轻松实现 |\n| 动态文档生成服务 | 前后端解耦，后端传数据即可生成 PDF |\n| 团队协作 / 版本控制 | 模板即代码，便于多人协作与审查 |\n| 与 Web 前端系统集成 | 可直接复用组件与样式逻辑 |\n\n---\n\n## ✅ 推荐理由总结\n\n1. **上手简单** — 前端技术栈友好，学习曲线平滑。  \n2. **组件化设计** — 模块化、复用性强，维护成本低。  \n3. **布局灵活** — 支持现代 CSS 与 Tailwind 样式。  \n4. **开发体验出色** — 实时预览 + 热更新。  \n5. **生态开放** — 欢迎贡献模板、插件与样式库。\n\n---\n\n👉 **项目地址**：[https://github.com/htmldocs-js/htmldocs](https://github.com/htmldocs-js/htmldocs)\n\n---\n",
    "created_at": "2025-10-16T16:45:00Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7925"
  },
  {
    "id": 7924,
    "title": "【开源自荐】CursorX - 跨平台实时光标高亮工具",
    "content": "<img width=\"394\" height=\"143\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fcfe0b00-cbfa-43c5-9f34-22be586d4385\" />\n\nCursorX是一款功能强大且轻量级的桌面应用程序，通过提供实时光标高亮功能，增强您的屏幕录制、演示和教程。它采用现代技术构建，在macOS、Windows和Linux上无缝运行。\n\n<img width=\"1872\" height=\"1384\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/174c5c59-2f50-45f8-8130-f9975c21dc57\" />\n\nRepo: [https://github.com/luckrnx09/CursorX](https://github.com/luckrnx09/CursorX)",
    "created_at": "2025-10-16T14:23:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7924"
  },
  {
    "id": 7923,
    "title": "【网站自荐】GrsAi-超稳API调用平台！ Veo3.1（0.4/条），Sora2（0.08/条）",
    "content": "Sora2发布后谷歌坐不住了！谷歌正式推出新一代AI视频生成模型[Veo 3.1](https://grsai.com/)，在音频融合、精细编辑及画面质感上实现显著升级，进一步强化其在AI视频领域的竞争力。\n\nVeo 3基础上优化，核心突破在于原生音频生成与画面编辑的深度整合。Flow平台的“帧转视频”“素材转视频”“视频延伸”三大核心功能均新增音画同步生成能力，可自动匹配场景音效与叙事节奏，省去后期制作环节。同时新增对象级编辑功能，支持向视频中添加元素并自然适配原有光影，“移除元素”功能也即将上线。\n\nVeo 3.1支持720p与1080p分辨率输出，基础时长4-8秒，延伸后可达148秒，延续每秒0.15-0.40美元的按需计费模式。\n\n国内开发者可以到[GrsAi APi](https://grsai.com/)：[https://grsai.com/](https://grsai.com/)聚合平台调用Veo3.1模型，价格和Veo3 一样，基础版Veo 3.1——0.4/条，veo3.1pro ——2/条\n![](https://img.way2solo.com/photo/ALLENREN/2b7e286f-fef7-4b25-8ad5-b2ab83c0f2a0.png?imageView2/2/w/1920/q/100)\n\n开发者可到GrsAi控制台，在线体验文档，查看调用说明和体验模型效果\n![](https://img.way2solo.com/photo/ALLENREN/a394066f-fc68-42ef-b701-5247f195a465.png?imageView2/2/w/1920/q/100)\n\nV+：qw1012117138，可直接开通最高优惠自定义充值功能\n",
    "created_at": "2025-10-16T07:11:56Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7923"
  },
  {
    "id": 7922,
    "title": "【工具推荐】 Nano Banana Dev-AI图像生成器",
    "content": "### **[Nano Banana Dev ](https://alidocs.dingtalk.com/preview?spaceId=7968528522&dentryId=197307696374&uid=2036280219&bizType=markdown&previewAtta=-1&cdnDownload=1&ext=md&fileName=Nano_description%282%29%281%29.md&orgId=null#)工具介绍**\nNano Banana Dev 是一款基于 Google Gemini 2.5 Flash 的在线 AI 图像生成器。它在角色一致性与场景一致性方面表现出色，支持多模态输入，并可输出最高 4K 分辨率。面向开发者，还提供预配置基础设施的 Next.js AI SaaS 启动模板。\n\n# 🌈 Nano Banana —— 你的 AI 图像魔法工坊\n\n只要一句话，AI 就能帮你生成惊艳的画面。  \n从写实到幻想，从角色到场景，灵感随时成真。\n\n---\n\n## ⚡ 极速生成 · 免费体验\n输入提示词，几秒出图！  \n无需安装、无需注册，打开就能用。  \n让创作变得像打字一样简单。\n\n<img width=\"1954\" height=\"902\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5f13cc9e-2596-4204-aa44-848bde1049ba\" />\n\n---\n\n## 🎨 万种风格，随心切换\n插画、动漫、油画、像素风……  \n你想要的艺术风格，这里都有。  \n轻松调整尺寸、光影、比例，让画面更贴合你的想象。\n\n---\n\n## 🧠 智能提示，写出好 Prompt\n别再为不会写提示词烦恼。  \nNano Banana 会自动推荐关键词和风格标签，  \n帮你一句话生成大师级作品。\n\n---\n\n## 🖼️ 灵感图库，复制即用\n浏览他人创作的作品集，  \n一键复制提示词，马上生成同款风格。  \n灵感不枯竭，创意更轻松！\n\n<img width=\"2048\" height=\"1948\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0a3f6097-798c-4542-856f-ee22417cbab9\" />\n\n---\n\n## 🚀 多图生成 · 批量导出\n一次生成多张图片，轻松比较、快速导出。  \n支持版本保存与历史记录管理，让创作更高效。\n\n---\n\n## 💡 由 Google Gemini 2.5 驱动\n采用最新 **Gemini 2.5 Flash 模型**，  \n生成速度更快、角色更一致、理解力更强。  \n让每一次创作都更自然、更惊艳。\n\n<img width=\"2034\" height=\"1198\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/711419e0-f50a-42b0-9214-4c2cd18dd78e\" />\n\n---\n\n### 🎉 立即开启 AI 创作之旅  \n👉 [打开 Nano Banana](https://nanobanana.dev/)  \n零门槛体验 · 免费生成 · 灵感无限！\n",
    "created_at": "2025-10-16T06:52:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7922"
  },
  {
    "id": 7921,
    "title": "【开源&网站自荐】mermaid-exporter：永久免费的Mermaid 在线图表导出器",
    "content": "# Mermaid 在线图表导出器\n\n## 项目信息\n\n**网站地址：** https://mermaid-exporter.vercel.app\n\n**项目地址：** https://github.com/brianxiadong/mermaid-exporter\n\n## 项目描述\n\nMermaid 在线图表导出器是一个完全免费的 Web 工具，专门用于在线创建和导出 Mermaid 图表。该项目解决了开发者和技术写作者在使用 Mermaid 时的痛点：如何快速、便捷地创建高质量的图表并导出为可用的文件格式。\n\n基于现代化的前端技术栈构建，提供了专业的代码编辑体验、实时预览功能和灵活的导出选项，让用户能够零配置、开箱即用地创建各种类型的图表。\n\n## 核心功能\n\n### 专业代码编辑器\n- **Monaco Editor 集成**：提供与 VS Code 相同的编辑体验\n- **Mermaid 语法高亮**：完整支持 Mermaid 语法着色和智能提示\n- **实时语法检查**：即时发现和提示语法错误\n\n### 实时预览系统\n- **即时渲染**：代码变更时自动更新图表预览\n- **多图表类型支持**：\n  - 流程图 (Flowchart)\n  - 时序图 (Sequence Diagram)\n  - 甘特图 (Gantt Chart)\n  - 类图 (Class Diagram)\n  - 状态图 (State Diagram)\n  - 用户旅程图 (User Journey)\n  - Git 图 (Git Graph)\n\n### 主题和样式系统\n- **内置多种主题**：default、neutral、dark、forest 等精美主题\n- **自定义配置**：支持颜色、字体等个性化设置\n- **实时主题切换**：即时预览不同主题效果\n\n### 导出功能\n- **SVG 格式导出**：高质量矢量图格式，支持无损缩放\n- **自定义尺寸**：灵活设置导出图片的宽度和高度\n- **背景配置**：支持透明背景或自定义背景色\n\n### 示例模板\n- **丰富的模板库**：提供常用图表的示例代码\n- **分类管理**：按图表类型组织模板，便于查找\n- **一键应用**：快速加载模板代码，提高创作效率\n\n## 技术特点\n\n### 现代化技术栈\n- **Next.js 15.5.5**：最新的 React 全栈框架，提供优秀的性能和开发体验\n- **React 19.1.0**：采用最新的 React 版本，支持并发特性\n- **TypeScript**：完整的类型安全，提高代码质量和开发效率\n- **Tailwind CSS 4**：现代化的 CSS 框架，实现响应式设计\n\n### 性能优化\n- **代码分割**：按需加载组件，减少初始加载时间\n- **懒加载**：Monaco Editor 等大型组件采用懒加载策略\n- **缓存优化**：合理利用浏览器缓存和 CDN 加速\n\n### 用户体验\n- **响应式设计**：完美适配桌面、平板和手机设备\n- **零配置使用**：无需安装任何软件，打开浏览器即可使用\n- **快速上手**：直观的界面设计，新用户可快速掌握\n\n### 开发友好\n- **组件化架构**：模块化设计，便于维护和扩展\n- **完整类型定义**：TypeScript 类型覆盖率 100%\n- **标准化代码**：遵循 ESLint 规范，代码质量良好\n\n## 项目亮点\n\n### 1. 技术先进性\n- 采用最新的前端技术栈，代码质量高\n- 完整的 TypeScript 支持，开发体验优秀\n- 现代化的构建和部署流程\n\n### 2. 功能完整性\n- 支持 Mermaid 的所有图表类型\n- 提供专业级的编辑和预览体验\n- 灵活的导出和配置选项\n\n### 3. 易用性\n- 零配置，开箱即用\n- 直观的用户界面\n- 丰富的示例和模板\n\n### 4. 开源价值\n- 完全开源，代码透明\n- 可作为现代前端开发的学习案例\n- 欢迎社区贡献和改进\n\n## 在线演示\n\n访问 [https://mermaid-exporter.vercel.app](https://mermaid-exporter.vercel.app) 即可立即体验所有功能。\n\n## 示意图\n\n<img width=\"1579\" height=\"946\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/024df94d-0abe-4d9a-a8a5-e0dcfdef68f1\" />\n\n<img width=\"1432\" height=\"601\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/785a7eff-30e6-4487-bf29-df2c3bf7e7ef\" />\n\n<img width=\"1341\" height=\"760\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ebc83699-0a0b-41ca-9be3-48d3de40f76e\" />\n\n\n---\n\n*提交者：brianxiadong (xiadong1234ac@163.com)*  \n*提交时间：2025年10月16日*",
    "created_at": "2025-10-16T02:30:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7921"
  },
  {
    "id": 7920,
    "title": "【工具推荐】term.everything，在终端里运行任何GUI程序，包括浏览器，游戏，甚至在终端里套桌面",
    "content": "项目地址：https://github.com/mmulet/term.everything\n离谱，只能说非常离谱，又非常惊艳。\n直接贴官方仓库的介绍了，因为有很多GIF动图。\n\n> \n> ## Run every GUI app in the terminal!\n> \n> ![warp_into_terminal0001-0195](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/warp_in_2.gif)\n> \n> ## Even over ssh!\n> Behold as I play a [video game in a font](https://github.com/mmulet/font-game-engine) in a web browser in a terminal transmitted over ssh (with one hand tied behind my back)!\n> \n> ![ssh_example](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/ssh_example.gif)\n> \n> ### Read about how it works!\n> Check out [HowIDidIt.md](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/HowIDidIt.md)\n> \n> ## More Examples\n> The quality of the window is limited to the number of rows and columns in your\n> terminal. If you increase the resolution (ctrl - in alacritty, check your\n> terminal) the quality will go up, (but performance may go down).\n> \n> Here I open up the Wing It! movie, and increase the quality until I get both\n> a good frame rate and resolution:\n> \n> ![increase resolution](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/show_increase_res.gif)\n> \n> ----------------\n> \n> If your terminal supports images (like [kitty](https://sw.kovidgoyal.net/kitty/)\n> or [iterm2](https://iterm2.com/)) you can render windows at full resolution\n> (performance may degrade).\n> \n> In this example, on my mac, I open iTerm2 ssh into ubuntu and open firefox\n> at full resolution:\n> \n> ![full_resultion](resources/graphics/full_resultion.gif)\n> \n> ------------\n> \n> I feel like every single day I hear about another terminal file viewer. I say, stop making terminal file viewers because you can just use the file viewer you already have! In your terminal!\n> \n> ![file_manager](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/file_manager.gif)\n> \n> -------------\n> \n> Terminal in a terminal in a terminal in a terminal in a terminal.... it's terminals all the way down.\n> ![terminal_in_terminal](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/terminal_in_terminal.gif)\n> \n> -------------\n> With only a small amount hacking, it can run Doom (shareware episode)!\n> \n> ![Doom](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/doom.gif)\n> ------\n> Run an entire Desktop in your terminal!\n> [@ismail-yilmaz](https://github.com/ismail-yilmaz) is running Firefox, on [KDE Neon](https://neon.kde.org) in a [VM](https://gitlab.gnome.org/GNOME/gnome-boxes) on [Bobcat](https://github.com/ismail-yilmaz/Bobcat)\n> ![Desktop in VM](https://raw.githubusercontent.com/mmulet/term.everything/main/resources/graphics/desktop_in_vm.gif)",
    "created_at": "2025-10-16T01:55:04Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7920"
  },
  {
    "id": 7919,
    "title": "【开源自荐】TravelsJS -  一个高性能且框架无关的Undo/Redo前端库",
    "content": "Repo：https://github.com/mutativejs/travels\n\n一个由 Mutative JSON Patch 驱动的、与框架无关的快速撤销/重做核心库。\n\n### 动机 (Motivation)\n\n`travels` 是一个用于实现撤销/重做功能的小型、高性能库。它基于 `Mutative` 构建，以利用其两大关键性能优势：\n\n* **使用 JSON Patch 实现高效的历史记录存储**：`travels` 不会为每个历史记录条目存储完整的状态快照，而是使用 `JSON Patch` (RFC 6902) 来仅存储状态之间的差异。这极大地减少了内存占用，尤其是在处理大型状态对象但变更很小的情况下。例如，在一个 1MB 的对象中更改单个字段，历史记录中仅存储几个字节。\n\n* **高性能的不可变更新**：`Mutative` 的速度比 `Immer` 快 10 倍，并提供了一种可变式 API（mutation-based API）来更新不可变数据结构。这意味着您可以编写诸如 `draft.count++` 这样的可变式更新代码，同时又能保证数据的不可变性，且性能开销极小。\n\n`travels` 的设计是与框架无关的，可以轻松集成到 React、Vue、Zustand、MobX、Pinia 等各类库中。它适用于在任何 JavaScript 应用程序中构建时间旅行（time travel）功能。\n\n### 特性 (Features)\n\n- ✨ 与框架无关的核心库\n- 🔄 支持撤销、重做、重置、跳转和归档功能\n- 🎯 可订阅状态变更\n- 💪 通过 `Mutative` 以可变方式更新不可变数据\n- 📦 体积小巧，使用高效的 JSON Patch 存储历史记录\n- ⚙️ 可自定义历史记录大小和初始补丁 (initial patches)\n- 🚀 高性能\n- 🔧 提供标记函数 (Mark function) 以实现自定义不可变性\n- 🌟 支持自动归档和手动归档两种模式\n- 🔥 同时支持不可变状态和可变状态",
    "created_at": "2025-10-15T16:15:12Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7919"
  },
  {
    "id": 7918,
    "title": "【工具自荐】Full Page Screenshot - 全功能截图工具",
    "content": "# 工具名称: Full Page Screenshot\n\n## 还在为这些场景烦恼吗？\n- 网页太长，需要多次截图拼接？\n- 想截取某个区域却包含多余内容？\n- 截图后还需要打开其他软件编辑标注？\n- 重要网页内容找不到地方保存？\n\n一站式解决方案！\n\n🎯 实用功能，解决真实痛点\n\n## 智能截图，随心所欲\n- 完整网页长截图：自动滚动拼接，无需手动操作\n- 精准元素截取：点击即可截取按钮、图片、文字段落\n- 自由区域选择：拖拽框选，只要你想要的部分\n- 可视区域快照：当前所见即所得\n\n<img width=\"1562\" height=\"839\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9ef3efeb-2b96-4e47-b090-a1402b79e31d\" />\n\n## 即时编辑，提高效率\n- 重点标注：箭头、方框、文字说明，一目了然\n- 隐私保护：智能模糊敏感信息\n- 背景设置：多个精美模板，一键设置精致截图\n- 一键复制：截图完成复制立即发给同事朋友\n\n<img width=\"3840\" height=\"1936\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d1f8a830-162b-46ad-946f-ccf225897013\" />\n\n<img width=\"3840\" height=\"1936\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f7054304-d083-4ede-acd8-4d78f68761e4\" />\n\n\n## 💼 谁在使用我们的工具？\n\n### 产品经理 📋\n- 完整保存竞品页面，供团队分析讨论\n- 标注UI问题，快速反馈给设计开发\n\n### 设计师 🎨\n- 收集网页设计灵感，建立创意素材库\n- 截取优秀交互效果，作为设计参考\n\n### 开发者 💻\n- 记录Bug现象，附上清晰截图反馈问题\n- 保存代码片段效果，方便后续查阅\n\n### 营销运营 📈\n- 制作社交媒体内容，快速出图\n- 保存热点资讯，随时追踪行业动态\n\n### 学生群体 🎓\n- 整理网络学习资料，构建知识体系\n- 截取重要信息，制作学习笔记\n\n<img width=\"4072\" height=\"2168\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ae12430e-94c7-43ea-bc9d-1b6f98face8c\" />\n\n免费使用 - 核心功能完全免费，无需注册\n云端同步 - 截图自动保存，多设备无缝访问隐私安全 - 本地处理，不上传敏感内容\n操作简单 - 3秒完成截图，老人小孩都会用\n格式丰富 - 支持PDF导出，方便文档整理\n\n## 🚀 使用场景示例\n\n会议讨论 → 截图 → 标注重点 → 即时分享\n学习研究 → 收集资料 → 整理归档 → 建立知识库\n问题反馈 → 截图 → 圈出问题 → 发送给团队\n灵感记录 → 看到好设计 → 保存截图 → 分类整理\n\n现在就体验更智能的截图方式！\n\n🔗 立即体验: https://www.fullpagescreenshot.top\n\n  让截图变得更简单，让工作变得更高效。",
    "created_at": "2025-10-15T11:05:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7918"
  },
  {
    "id": 7917,
    "title": "【工具自荐】Claude Code 插件导航站，收集全网近 100 多个经过最佳实践验证的 Claude Code 插件，支持按使用场景多类别筛选，支持一键复制命令到 Claude Code 使用",
    "content": "- 官网：[Claude Code 插件导航站](https://claudecodeplugins.dev/zh)\n- 特点\n    - 100 多个社区精选插件\n    - 多类别筛选：按照使用场景分类\n    - 快速查找：按插件名、关键词或功能搜索\n    - 使用方便：支持一键复制使用\n\n- 快速查找\n![Image](https://github.com/user-attachments/assets/aa70e1e4-ade7-4e2b-a352-0f625727746c)\n\n- 场景分类\n![Image](https://github.com/user-attachments/assets/954c4bce-a25d-4cd8-bcb3-90cd9be9dd72)\n\n- 由 Claude Code 官方开发的 Claude Code 插件\n![Image](https://github.com/user-attachments/assets/ae6a1549-7617-427f-a8a7-a6b20b985d64)\n\n- 一键复制\n![I一键复制](https://github.com/user-attachments/assets/0e93ce12-258d-4e0c-b0af-76b7892545dc)\n\n",
    "created_at": "2025-10-15T09:54:26Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7917"
  },
  {
    "id": 7916,
    "title": "【网站自荐】luo.ci/ai — 评估是否适合裸辞的分析助手",
    "content": "网站名称：裸辞决策助手\n网址：https://www.luo.ci/ai/\nSlogan：结合自身情况-用理性与数据帮你判断现在是否适合裸辞，并制定行动建议\n特色：无需登录，即用即走，无任何隐私数据\n\n<img width=\"1127\" height=\"590\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ed471d21-5362-469f-a66c-dce9ab58bfc7\" />\n\n<img width=\"1098\" height=\"764\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1b31aed1-b651-4ff1-9498-63c8279ec844\" />",
    "created_at": "2025-10-15T09:08:12Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7916"
  },
  {
    "id": 7915,
    "title": "【开源自建】CAMEL 数据库代理：一个将复杂数据查询转换为自然对话的开源解决方案",
    "content": "## 数据分析中的痛点与解决方案\n\n在当今数据驱动的商业环境中，一个常见场景是：业务分析师急需某些数据分析，但必须等待熟悉SQL的技术团队成员提供支持。根据麦肯锡的一项研究，分析师平均花费30-40%的时间仅用于数据准备和查询构建。这种依赖不仅延迟了决策过程，还增加了技术团队的工作量。\n\n**正因如此，我开发了CAMEL DatabaseAgent**——一个革命性的开源工具，它允许任何人使用自然语言与数据库对话，就像与同事交谈一样简单。无需编写一行SQL代码，分析师就能直接获得他们所需的数据洞察。\n\n## CAMEL DatabaseAgent 的核心优势\n\n与市场上其他文本到SQL工具相比，CAMEL DatabaseAgent具有以下显著优势：\n\n1.  **完全开源**：代码透明，社区驱动的开发确保持续改进和定制灵活性\n2.  **多语言支持**：能够理解并响应包括中文、英文和韩语在内的多种语言查询\n3.  **数据库自动理解**：分析数据库结构并生成适当的少样本学习示例\n4.  **只读模式**：默认安全操作，保护数据库免受意外修改\n5.  **简单集成**：易于与现有系统和工作流程集成\n\n## 技术架构：工作原理\n\nCAMEL DatabaseAgent 基于 [CAMEL-AI](https://github.com/camel-ai/camel) 构建，包含三个核心组件：\n\n1.  **DataQueryInferencePipeline**：这个智能组件分析您的数据库结构，并自动生成训练示例，包括问题和相应的SQL查询。它利用先进的推理技术来理解表之间的关系和数据的语义。\n2.  **DatabaseKnowledge**：一个专门设计的向量数据库，用于高效存储和检索数据库模式、示例数据和查询模式。此组件使系统能够快速“回忆”相关的数据库知识，以回答用户问题。\n3.  **DatabaseAgent**：一个基于大语言模型（LLMs）的智能代理，它接收自然语言问题，利用DatabaseKnowledge生成精确的SQL查询，执行查询，并以用户友好的格式返回结果。\n\n支持的数据库系统包括：\n\n*   SQLite\n*   MySQL\n*   PostgreSQL\n\n所有操作默认以只读模式执行，确保数据安全。\n\n## 实际应用案例：从简单到复杂\n\n我在一个音乐发行平台的真实数据库上测试了这款工具，结果令人印象深刻。以下是按复杂程度递增的几个应用场景：\n\n### 基本查询\n\n当我问“查找包含超过10首歌曲的播放列表名称”时，系统立即生成了正确的SQL：\n\n![基本查询](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fp59967pz7aa1s5zfwy5l.png)\n*系统能够理解简单的筛选和计数要求*\n\n### 中等复杂查询\n\n**场景1**：特定时间段内销售数据统计\n![特定时间段内销售数据统计](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Feuwl7x1vsguxb261q6jp.png)\n*系统成功处理多表连接和时间范围筛选*\n\n**场景2**：按类别分组的财务分析\n![按类别分组的财务分析](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fxqszsb3f3iz8sz2x0y9l.png)\n*系统能够理解分组、聚合和复杂的表关系*\n\n### 高级分析查询\n\n**场景3**：性能排名分析\n![性能排名分析](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Frqnoz17bfj4i8hlmd9h5.png)\n*系统处理了多表连接、排序和限制条件*\n\n**场景4**：条件筛选和计数\n![条件筛选和计数](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F9njyfdoqbo6vqptwlfwh.png)\n*系统能够使用子查询和复杂条件*\n\n**场景5**：百分比计算\n![百分比计算](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2F2sixx8svti4cna9fiame.png)\n*系统能够执行数学计算和条件计数*\n\n**场景6**：复杂关系分析\n![复杂关系分析](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fhbt974z5gjkc7ytt33xi.png)\n*系统能够处理左连接和空值情况*\n\n## 打破语言障碍：多语言支持\n\n在全球化的团队环境中，语言障碍往往是数据协作的瓶颈。CAMEL DatabaseAgent支持多语言交互，使来自不同语言背景的团队成员能够用其母语训练知识并进行数据查询。\n\n![中文](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Fud9hu1y88lxhaom0njuq.png)\n*用中文训练知识和提问*\n\n![韩语](https://media2.dev.to/dynamic/image/width=800%2Cheight=%2Cfit=scale-down%2Cgravity=auto%2Cformat=auto/https%3A%2F%2Fdev-to-uploads.s3.amazonaws.com%2Fuploads%2Farticles%2Foy86w2j11aby26duxfts.png)\n*系统还支持韩语等其他语言，您只需在连接数据库时指定语言即可*\n\n## 入门指南：5分钟快速启动\n\n想尝试CAMEL DatabaseAgent？只需几个简单步骤：\n\n```shell\n# 1. 克隆仓库\ngit clone git@github.com:coolbeevip/camel-database-agent.git\ncd camel-database-agent\n\n# 2. 设置环境\npip install uv ruff mypy\nuv venv .venv --python=3.10\nsource .venv/bin/activate\nuv sync --all-extras\n\n# 3. 配置API密钥\nexport OPENAI_API_KEY=sk-xxx\nexport OPENAI_API_BASE_URL=https://api.openai.com/v1/\nexport MODEL_NAME=gpt-4o-mini\n\n# 4. 连接示例数据库并开始使用\npython camel_database_agent/cli.py \\\n--database-url sqlite:///database/sqlite/music.sqlite\n```\n\n首次连接时，系统会花费几分钟分析数据库并生成知识库。后续使用将非常流畅，响应时间通常在1-3秒内。\n\n## 开发者集成API\n\n对于希望将此功能集成到自己的应用程序或系统的开发者，我们提供了简洁的Python API：\n\n```python\n# 安装依赖库\npip install camel-database-agent\n\n# 初始化数据库代理\nfrom camel_database_agent import DatabaseAgent, DatabaseManager, TrainLevel\nfrom camel_database_agent.models import ModelFactory, OpenAIEmbedding\nimport uuid\n\ndatabase_agent = DatabaseAgent(\n    interactive_mode=True,\n    database_manager=DatabaseManager(db_url=database_url),\n    model=ModelFactory.create(\n        provider=\"openai\",\n        model_name=\"gpt-4o-mini\"\n    ),\n    embedding_model=OpenAIEmbedding()\n)\n\n# 在数据库模式知识上训练代理\ndatabase_agent.train_knowledge(level=TrainLevel.MEDIUM)\n\n# 使用自然语言执行查询\nresponse = database_agent.ask(\n    session_id=str(uuid.uuid4()),\n    question=\"List all playlists containing more than 5 tracks\"\n)\n\n# 处理返回的结果\nprint(response.answer)  # 自然语言回答\nprint(response.sql)     # 生成的SQL查询\nprint(response.data)    # 结构化查询结果\n```\n\n## 结论\n\nCAMEL DatabaseAgent 代表了数据库交互的未来——使数据查询像日常对话一样自然。它不仅提高了数据分析师的效率，还赋能非技术人员直接获取数据洞察，从而加速了整个组织的决策过程。\n\n在数据民主化的时代，工具不应成为获取洞察的障碍。通过CAMEL DatabaseAgent，我希望为打破这些障碍做出贡献，让每个人都能轻松与数据对话。\n\n仓库 https://github.com/coolbeevip/camel-database-agent\n视频 https://youtu.be/Fl065DB8Wqo",
    "created_at": "2025-10-15T08:21:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7915"
  },
  {
    "id": 7914,
    "title": "【工具自荐】更聪明的 Git 工作流助手 AI 提交生成 + 团队贡献洞察",
    "content": "### IntelliJ IDEA Git Assistant 插件介绍\n\nGit Assistant 是一个功能强大的 IntelliJ IDEA 插件，专为从 Git 日志中提供丰富的可视化洞察而设计。它能够帮助开发团队深入理解代码贡献模式，优化工作流程，并促进全球协作。\n\n**主要功能和亮点：**\n\n*   **活动时间分析 (Activity Time Analysis)**：通过小时、星期、月份甚至年份维度，帮助您分析团队的活跃时间和生产力峰值，从而优化工作安排和任务分配。无论是“夜猫子”还是“早起鸟”，都能一目了然。\n*   **时区洞察 (Timezone Insights)**：可视化全球代码贡献的分布情况，提升跨时区协作的可见性，使团队管理者能更好地理解全球团队的贡献模式。\n*   **贡献者排名 (Contributor Ranking)**：清晰展示项目中代码仓库的主要贡献者，提供有趣且具有竞争性的数据洞察。\n*   **变更热点 (Changing Hotspots)**：突出显示近期更新最频繁的模块或项目区域，并识别对应的核心贡献者，帮助团队关注最新的开发重点。\n\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6d2e221c-99f5-4fab-9972-c8236f7ff58d\" />\n\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d8518291-7cda-43be-abb1-795e16471c6e\" />\n\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/52fa6591-1f25-4c19-b4a4-3e83b1b64bde\" />\n\nhttps://gitassistant.pages.dev/\n",
    "created_at": "2025-10-15T08:06:12Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7914"
  },
  {
    "id": 7913,
    "title": "【开源自荐】Type Words - 一款在网页上练习单词和文章的工具",
    "content": "### 项目介绍\n\n**Type Words**  是一款在网页上练习单词和文章的工具，主要用于解决这些问题：\n\n- 手机上背单词很方便，但无法方便的练习拼写\n- 上班的时候想背单词，但不能长时间使用手机\n- 文章练习、背诵、默写\n\n\n### 在线访问\n**国内地址**[http://2study.top/](http://2study.top/)   \n**其他地址**: [https://vercel.2study.top](https://vercel.2study.top/) \n**项目地址**: [https://github.com/zyronon/TypeWords](https://github.com/zyronon/TypeWords)   \n\n### 项目截图\n\n<img width=\"1920\" height=\"1440\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c3cce73c-928c-4526-8dce-84474001b019\" />\n\n<img width=\"1920\" height=\"1440\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/16b18046-6f5d-4e1c-bff0-4ff8d398373a\" />\n\n### 功能列表\n\n\n#### 单词练习\n \n-   三种输入模式：跟打 / 复习 / 默写\n-   智能模式：记忆曲线自动计算学习单词，并通过默写加深记忆\n-   自由模式：不受限制，自行规划\n-   提供音标、发音（美音、英音）、例句、短语、近义词、同根词、词源、错误统计等功能\n\n#### 背文章\n\n-   内置经典教材书籍，也可自行添加、导入文章，提供一键翻译、译文对照功能\n-   跟打 + 默写双模式，逐句输入，自动发音，让背诵更高效\n-   支持边听边默写，强化记忆\n\n#### 收藏、错词本、已掌握\n\n-   学习单词时输入错误自动添加到错词本，方便后续复习\n-   可主动添加到已掌握，后续学习时自动跳过\n-   可主动添加到收藏中，以便巩固复习\n\n#### 高度自由\n\n-   丰富的键盘音效\n-   可自定义快捷键\n-   高度定制化的设置选项\n\n#### 词库 \n\n内置了常用的 `CET-4` 、`CET-6` 、`GMAT` 、`GRE` 、`IELTS` 、`SAT` 、`TOEFL` 、`考研英语`、`专业四级英语`、`专业八级英语`等词库。 尽可能满足大部分用户对背单词的需求，用户也可自行创建词典\n",
    "created_at": "2025-10-15T07:24:25Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7913"
  },
  {
    "id": 7912,
    "title": "[开源自荐] TokenRollAI/cc-plugin: Claude Code插件 聚焦Agnet的上下文紧凑程度/降低成本",
    "content": "https://github.com/TokenRollAI/cc-plugin\n\n我这里简单表述我关于Coding Agent 以及 SubAgent的理解:\n1. 冗余无用的上下文是Context爆炸的主要原因\n2. 主Agent的Context 重要程度 **远远大于** SubAgent Context\n3. Context的噪音过滤是 Grep->Read 型Coding Agent最需要解决的问题\n4. 低智能模型在任务明确/输出明确的情况下能够承担一部分简单任务\n\n## 解决方案\n\n在bg-worker中, 解决方案十分粗暴, 毫无技术含量.\nSubAgent + 明确的任务划分+明确的输出 + 廉价的上下文 来换取 主Agent上下文的紧凑 + 总成本的降低\n\n## 效果\n\n使用的Repo: https://github.com/zeromicro/go-zero\n需求: 告诉我这个项目的结构如何?\n\n### 省流\n\n> Context 和 Cost 节省效果明显\n\n```\nnormal:    27.4k    $0.1304\nbg-worker: 16.2k    $0.0867\n```\n\n### 1. 不使用bg-worker(一般工作模式)\n\n```\n\n ▐▛███▜▌   Claude Code v2.0.14\n▝▜█████▛▘  Sonnet 4.5 · API Usage Billing\n  ▘▘ ▝▝    /home/djj/code/go-zero\n\n> 告诉我这个项目的结构如何? do not use bg-worker / scout agent\n\n● 我来帮你分析这个项目的结构。让我先查看项目的根目录结构。\n\n● Bash(ls -la /home/djj/code/go-zero)\n  ⎿  total 156\n     drwxr-xr-x 12 djj djj  4096 Oct 13 22:19 .\n     drwxr-xr-x 17 djj djj  4096 Oct 13 21:17 ..\n     … +22 lines (ctrl+o to expand)\n\n● Bash(find /home/djj/code/go-zero -maxdepth 1 -type d | head -20)\n  ⎿  /home/djj/code/go-zero\n     /home/djj/code/go-zero/gateway\n     /home/djj/code/go-zero/internal\n     … +8 lines (ctrl+o to expand)\n\n● Read(README.md)\n  ⎿  Error reading file\n\n● Read(readme.md)\n  ⎿  Read 253 lines\n\n● Bash(ls -la /home/djj/code/go-zero/core)\n  ⎿  total 192\n     drwxr-xr-x 48 djj djj 4096 Oct 13 21:17 .\n     drwxr-xr-x 12 djj djj 4096 Oct 13 22:19 ..\n     … +46 lines (ctrl+o to expand)\n\n● Bash(ls -la /home/djj/code/go-zero/rest)\n  ⎿  total 124\n     drwxr-xr-x 12 djj djj  4096 Oct 14 02:11 .\n     drwxr-xr-x 12 djj djj  4096 Oct 13 22:19 ..\n     … +18 lines (ctrl+o to expand)\n\n● Bash(ls -la /home/djj/code/go-zero/zrpc)\n  ⎿  total 60\n     drwxr-xr-x  4 djj djj 4096 Oct 13 21:17 .\n     drwxr-xr-x 12 djj djj 4096 Oct 13 22:19 ..\n     … +10 lines (ctrl+o to expand)\n\n● Bash(ls -la /home/djj/code/go-zero/tools)\n  ⎿  total 12\n     drwxr-xr-x  3 djj djj 4096 Oct 13 21:17 .\n     drwxr-xr-x 12 djj djj 4096 Oct 13 22:19 ..\n     drwxr-xr-x 25 djj djj 4096 Oct 13 21:17 goctl\n\n● Bash(ls -la /home/djj/code/go-zero/gateway)\n  ⎿  total 44\n     drwxr-xr-x  3 djj djj 4096 Oct 13 21:17 .\n     drwxr-xr-x 12 djj djj 4096 Oct 13 22:19 ..\n     … +5 lines (ctrl+o to expand)\n\n● Read(go.mod)\n  ⎿  Read 125 lines\n\n● 根据我的分析,这是 go-zero 项目的结构概述:\n\n  项目简介\n\n  go-zero 是一个集成了各种工程实践的 Go 语言 web 和 rpc 框架,被 CNCF 云原生生态收录。它专注于高并发服务的稳定性,具有弹性设计理念。\n\n  核心目录结构\n\n  1. core/ - 核心功能库(48个子模块)\n\n  这是框架的核心,包含各种基础工具和组件:\n  - conf - 配置管理\n  - breaker - 熔断器\n  - limit - 限流器\n  - load - 负载均衡/自适应降载\n  - bloom - 布隆过滤器\n  - collection - 集合工具\n  - stores - 数据存储(redis/sql/mongo等)\n  - logx - 日志系统\n  - trace - 链路追踪\n  - metric/prometheus - 监控指标\n  - mr - MapReduce并发工具\n  - threading/syncx - 并发控制\n  - service - 服务基础组件\n  - discov - 服务发现\n  - 其他 - hash、queue、codec、fx、executors等工具\n\n  2. rest/ - REST API框架\n\n  HTTP服务相关功能:\n  - engine.go/server.go - HTTP服务引擎\n  - router/ - 路由管理\n  - handler/ - 请求处理器\n  - httpx/ - HTTP工具\n  - httpc/ - HTTP客户端\n  - middleware/ - 中间件\n  - chain/ - 中间件链\n  - pathvar/ - 路径参数\n  - token/ - Token处理\n\n  3. zrpc/ - RPC框架\n\n  gRPC服务相关功能:\n  - client.go/server.go - RPC客户端和服务端\n  - config.go - RPC配置\n  - resolver/ - 服务解析\n  - internal/ - 内部实现\n\n  4. tools/goctl/ - 代码生成工具\n\n  命令行工具,用于从 .api 文件生成代码:\n  - 支持生成 Go、Java、TypeScript、Dart、JavaScript 等多种语言代码\n  - 自动生成项目骨架\n  - API 语法定义和解析\n\n  5. gateway/ - API 网关\n\n  HTTP API 网关功能:\n  - server.go - 网关服务器\n  - config.go - 网关配置\n  - internal/ - 内部实现\n\n  6. internal/ - 内部实现\n\n  框架的私有实现细节\n\n  7. mcp/ - MCP相关功能\n\n  技术栈特点\n\n  - Go 1.21+\n  - 支持 etcd 服务发现\n  - 集成 Prometheus 监控\n  - OpenTelemetry 链路追踪(Jaeger/Zipkin)\n  - 支持 Redis、MySQL、PostgreSQL、MongoDB\n  - Kubernetes 集成\n\n  核心特性\n\n  1. 高可用性 - 熔断器、限流、负载均衡、自适应降载\n  2. 微服务治理 - 服务发现、链路追踪、监控指标\n  3. 并发控制 - 内置并发控制、超时控制\n  4. 代码生成 - 通过 goctl 工具自动生成代码\n  5. 容错设计 - 面向失败的编程理念\n\n  这是一个典型的微服务框架项目结构,分层清晰:底层核心库(core) + HTTP框架(rest) + RPC框架(zrpc) + 代码生成工具(goctl) + API网关(gateway)。\n\n> /cost\n  ⎿  Total cost:            $0.1304\n     Total duration (API):  1m 5s\n     Total duration (wall): 14m 59s\n     Total code changes:    0 lines added, 0 lines removed\n     Usage by model:\n         claude-3-5-haiku:  5.9k input, 251 output, 0 cache read, 0 cache write ($0.0058)\n            claude-sonnet:  3.2k input, 1.8k output, 60.9k cache read, 18.6k cache write ($0.1246)\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n> \n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   Model: Sonnet 4.5  Ctx: 27.4k  Ctx: 13.7%  ⎇ master  (+146,-12)  Cost: $0.13\n```\n\n### 2. 使用bg-worker\n\n```\n\n ▐▛███▜▌   Claude Code v2.0.14\n▝▜█████▛▘  Sonnet 4.5 · API Usage Billing\n  ▘▘ ▝▝    /home/djj/code/go-zero\n\n> use bg-worker to 告诉我这个项目的结构如何?\n\n● 我会使用 bg-worker agent 来分析这个项目的结构。\n\n● tr:bg-worker(分析 go-zero 项目结构)\n  ⎿  Done (5 tool uses · 18.8k tokens · 40.8s)\n\n● 根据分析，这是 go-zero 项目的结构概览：\n\n  📁 主要目录结构\n\n  核心组件\n\n  1. core/ - 框架核心功能库\n    - 包含 timex, conf, iox, naming, netx, mathx, collection 等工具包\n    - 提供并发控制、配置处理、网络工具等基础设施\n  2. rest/ - RESTful API 服务\n    - 中间件(middleware)、路由(router)、处理器(handler)\n    - 支持完整的 HTTP 服务功能\n  3. zrpc/ - RPC 服务组件\n    - 基于 gRPC 的 RPC 服务实现\n    - 包含解析器和内部实现\n  4. tools/goctl/ - 代码生成工具\n    - 快速生成微服务代码的 CLI 工具\n    - 支持多语言客户端代码生成\n  5. gateway/ - API 网关服务\n  6. internal/ - 内部工具组件\n    - 编码、mock、性能分析等功能\n\n  🛠️ 技术栈\n\n  - 语言: Go 1.21+\n  - 服务发现: etcd\n  - 监控追踪: Prometheus, OpenTelemetry\n  - 数据存储: MySQL, Redis, MongoDB\n  - 认证: JWT\n  - 容器编排: Kubernetes\n\n  🏗️ 架构特点\n\n  - ✅ 微服务架构设计\n  - ✅ 高性能、高并发\n  - ✅ 内置熔断、限流等弹性设计\n  - ✅ 自动代码生成 (goctl)\n  - ✅ 丰富的中间件支持\n  - ✅ 分布式链路追踪\n  - ✅ 自动参数验证\n\n  总结: go-zero 是一个生产级的 Go 微服务框架，专注于工程实践和开箱即用的企业级特性。\n\n> /cost\n  ⎿  Total cost:            $0.0867\n     Total duration (API):  1m 18s\n     Total duration (wall): 11m 47s\n     Total code changes:    0 lines added, 0 lines removed\n     Usage by model:\n         claude-3-5-haiku:  10.0k input, 1.2k output, 50.3k cache read, 10.5k cache write ($0.0272)\n            claude-sonnet:  8 input, 920 output, 20.9k cache read, 10.5k cache write ($0.0595)\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n> \n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   Model: Sonnet 4.5  Ctx: 16.2k  Ctx: 8.1%  ⎇ master  (+146,-12)  Cost: $0.09 \n  ⏵⏵ accept edits on (shift+tab to cycle)\n```\n\n### 3. 使用multi bg-worker\n\n```\n> use multi bg-worker to 告诉我这个项目的结构如何?\n\n● 我将使用多个 bg-worker 代理并行分析这个项目的结构。\n\n● tr:bg-worker(分析项目根目录结构)\n  ⎿  Done (3 tool uses · 16.1k tokens · 16.1s)\n\n● tr:bg-worker(分析主要代码目录)\n  ⎿  Done (5 tool uses · 9.2k tokens · 34.4s)\n\n● tr:bg-worker(分析核心包结构)\n  ⎿  Done (4 tool uses · 10.7k tokens · 25.2s)\n\n● tr:bg-worker(分析工具和命令)\n  ⎿  Done (6 tool uses · 10.0k tokens · 27.5s)\n\n● tr:bg-worker(分析测试和文档)\n  ⎿  Done (3 tool uses · 8.7k tokens · 14.4s)\n\n● 根据多个 bg-worker 代理的并行分析，这个项目的结构如下：\n\n  📋 项目概述\n\n  项目名称: go-zero模块: github.com/zeromicro/go-zero类型: Go 语言微服务框架Go 版本: 1.21+\n\n  🏗️ 目录结构\n\n  1. core/ - 核心基础库（最重要的部分）\n\n  包含 30+ 个子模块，提供微服务开发的基础设施：\n\n  系统工具类:\n  - utils, lang, stringx, mathx, timex, codec, hash\n\n  并发与系统:\n  - threading, syncx, proc, executors, contextx\n\n  网络与服务:\n  - netx, naming, service, discov, configcenter\n\n  存储与数据:\n  - stores, collection, queue\n\n  日志与监控:\n  - logx, logc, metric, prometheus, trace\n\n  稳定性保障:\n  - limit(限流), breaker(熔断), rescue(异常恢复)\n\n  其他工具:\n  - bloom, jsonx, mapping, validation 等\n\n  2. tools/goctl/ - 代码生成工具\n\n  强大的命令行工具，支持：\n  - API 代码生成（Go, Java, Dart, TypeScript 等）\n  - RPC 服务生成\n  - 数据模型生成（SQL, MongoDB）\n  - Docker/Kubernetes 配置生成\n  - 项目迁移和环境管理\n\n  3. internal/ - 内部实现\n\n  包含 encoding, mock, profiling, trace, health 等内部模块\n\n  4. gateway/ - 网关相关功能\n\n  5. rest/ - REST API 框架\n\n  （从 git status 看到有 rest/middleware/ 未提交文件）\n\n  📊 项目规模\n\n  - 测试文件: 373 个 *_test.go 文件\n  - 文档文件: 25 个 Markdown 文件\n  - 核心代码: 约 467 个 Go 文件（仅 core 目录）\n\n  🎯 核心特性\n\n  1. 微服务架构: 完整的微服务解决方案\n  2. 服务治理: 服务发现、负载均衡、熔断、限流\n  3. 可观测性: 集成 OpenTelemetry、Prometheus 监控\n  4. 多存储支持: Redis、MySQL、MongoDB\n  5. 代码生成: 通过 goctl 快速生成项目脚手架\n  6. 高性能: 适合高并发场景\n\n  📝 架构特点\n\n  - 模块化设计: 每个目录职责明确\n  - 库项目: 主要作为框架库使用，而非独立应用\n  - 完善的测试: 大量单元测试覆盖\n  - 文档分布式: 各模块都有独立的 README\n\n  这是一个成熟的、生产级别的 Go 微服务框架，提供了从基础工具到服务治理的完整解决方案。\n\n> /cost\n  ⎿  Total cost:            $0.1845\n     Total duration (API):  3m 8s\n     Total duration (wall): 3m 27s\n     Total code changes:    0 lines added, 0 lines removed\n     Usage by model:\n         claude-3-5-haiku:  20.6k input, 4.9k output, 171.0k cache read, 52.5k cache write ($0.1024)\n            claude-sonnet:  8 input, 1.9k output, 20.9k cache read, 12.7k cache write ($0.0820)\n\n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n> \n────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────\n   Model: Sonnet 4.5  Ctx: 18.4k  Ctx: 9.2%  ⎇ master  (+146,-12)  Cost: $0.18 \n  ⏵⏵ accept edits on (shift+tab to cycle)\n```\n\n# 缺陷\n\n真的有如同看起来这么美妙吗?\n\nNO! NO! NO!\n\n至少目前看有这么几个问题:\n1. 如果使用并发模式来调用bg-worker的话, 如果认为划分的过于简单, 会出现主Agent的输出 + 读取成本高于bg-worker的运行节省的成本, 尽管还是可以节省主Agent的Token, 但是不再具备成本优势\n2. bg-worker执行的任务越复杂,越具备成本优势,执行效果越差.\n\n\n# 体验一下 \n\n在claude中\n\n```\n# 添加 TokenRoll 插件市场\n/plugin marketplace add https://github.com/TokenRollAI/cc-plugin\n\n# 下载tr插件\n/plugin install tr@cc-plugin\n\n\n# 强调使用bg-worker\n# Always consider use bg-worker to solve simple task\n```",
    "created_at": "2025-10-15T03:10:42Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7912"
  },
  {
    "id": 7911,
    "title": "【开源自荐】灵卡面板 - Windows侧边栏摸鱼办公面板",
    "content": "### 软件介绍\n\nWindows桌面端软件，摸鱼办公神器\n\n拥有海量卡片，可以自定义卡片布局，隐藏到侧边需要使用时弹出(可以鼠标或快捷键唤出)\n\n开源地址：[https://github.com/baby7/agile-tiles](https://github.com/baby7/agile-tiles)\n\n##### 主卡片\n* 本地文件快捷搜索（基于everything）\n* 局域网文件传输\n* 快捷键截图、屏幕取色\n* 翻译（同时接入截图识别并翻译）\n* AI对话（多种智能体）\n* TODO（待办事项）功能\n* 各大平台实时热搜\n* 音乐播放器、小说阅读器\n* 有趣图文（摸鱼人日历、kfc梗图文案、萌宠图片、历史上的今天、随机心语）\n* 热门网站链接聚合\n\n##### 小卡片\n* 台风、系统加速球、翻页时钟\n* 月相、笔记本电池电量\n* 基金、股票、金价\n* Epic Steam 喜加一资讯\n* Bilibili粉丝量\n* 自定义快捷方式（网址、exe文件、文件夹或普通文件）\n* LCD时钟、日历、天气预报\n* 喝水记录、今天吃什么、电子木鱼\n* 倒数日、圆盘时钟、英语单词\n* 自定义图片、工作日、电脑监控\n* 灵感提示词、时间进度条、搜索\n* 古诗词、答案之书、一言\n\n##### 工具箱模块\n* 文件批量操作工具、屏幕取色工具\n* Json格式化工具、编解码工具、颜色转换器\n* 时间 时区 时间戳的计算器\n* 图片批量转表格工具\n* 视频进度条生成器、笔记本电池健康曲线\n* 这班值不值得上、记仇生成器\n* 中国房贷计算器、中国家庭称谓计算器\n* BMI计算器\n\n</br>\n\n#### 软件运行界面\n\n![https://index.agiletiles.com/website/images/screenshot/screenshot-music-theme.png](https://index.agiletiles.com/website/images/screenshot/screenshot-music-theme.png)\n\n\n\n",
    "created_at": "2025-10-15T02:34:18Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7911"
  },
  {
    "id": 7910,
    "title": "【开源自荐】开源/出版书籍《深入高可用系统原理与设计》",
    "content": "我从 2022 年中旬开始撰写《深入高可用系统原理与设计》，历时两年半，现已完稿并出版，我相信质量经得起推敲，值得向读者推荐。\n\n本书以“高可用”为主题，核心探讨在性能、成本与稳定性之间取得平衡的架构设计理念。\n\n书中并未涉及具体软件的安装步骤或工具使用方法。在我看来，IT 技术日新月异，具体实现往往容易过时，而支撑其背后的思想与原理才是能够长期受益的。如果我们透过技术发展的表象，去思考技术演进的逻辑 —— 问题是如何产生的？当下如何应对？未来可能走向何方？——就能逐步建立起属于自己的技术体系与判断力，从而穿越技术更迭的周期。\n\n- 书籍的开源地址： https://github.com/isno/theByteBook  \n- 京东购买地址：https://item.jd.com/14531549.html\n\nGitHub 仓库中汇聚了许多读者的讨论与反馈，内容同样值得阅读。\n\n<img width=\"420\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ed30b8bf-fa86-4809-b946-67284ce49171\" />\n\n\n",
    "created_at": "2025-10-15T02:03:13Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7910"
  },
  {
    "id": 7909,
    "title": "【开源自荐】浏览器插件 SearchJumper: 在搜索引擎之间切换，并使用各种快捷方式和方法搜索选定的文本、图像或链接",
    "content": "## 简介\n+ 谷歌插件商店：https://chromewebstore.google.com/detail/hgepmblbgodbilmfdjkalkgofdcipkhh\n\n+ 开源项目地址：https://github.com/hoothin/SearchJumper\n\n+ 描述：使用搜索引擎时，轻松切换其他搜索引擎。支持划词、拖拽、右键搜索、自动高亮从搜索引擎打开页面的关键词。\n\n## 视频介绍\n[![介绍](https://img.youtube.com/vi/BfQx4uIJKvY/0.jpg)](https://www.youtube.com/watch?v=BfQx4uIJKvY)\n\n\n## 主要亮点\n### 1. 支持所有网站，通过模拟输入和点击来支持没有提供 post / get 接口的网站，支持可视化添加。\n\n<img width=\"306\" height=\"381\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/67c9b135-0706-40ab-bc85-8ce26fbea544\" />\n\n### 2. 高亮搜索支持正则、拼音、莱文斯坦距离相似搜索，也支持 input.value 、iframe 等。 测试页：https://search.hoothin.com/reference/findDemo.html\n\n<img width=\"949\" height=\"375\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7de93157-426b-4faf-ad08-1b1ef17e3297\" />\n\n### 3. 可以自定义规则来跨域获取信息，实现例如划词词典、ai 解释、查询豆瓣等功能。\n\n<img width=\"524\" height=\"472\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8960a031-896f-4d03-90b1-8f5aa105a7ac\" />\n\n### 4. 可以分享配置到独立页面，并且可以更换背景和标题，还可以设置访问密码。",
    "created_at": "2025-10-14T13:45:56Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7909"
  },
  {
    "id": 7907,
    "title": "【开源自荐】浏览器插件 blazwitcher:  全局拼音模糊搜索 & AI 标签分组，支持全键盘操作快速打开标签页",
    "content": "## 简介\n* 谷歌插件商店：https://chromewebstore.google.com/detail/fjgablnemienkegdnbihhemebmmonihg\n\n* 开源项目地址：https://github.com/cjinhuo/blazwitcher\n\n* 描述：可对标签页、书签、历史记录进行中英文模糊搜索（依赖[文本搜索算法](https://github.com/cjinhuo/text-search-engine)，上一年上过 weekly)，根据命中字符权重和最近访问降序排行，支持 AI 标签分组和全键盘操作，可自定义打开/关闭标签、pin/unpin 的快捷键\n\n## 主要亮点\n### 首字母匹配、域名搜索 & 空格分词搜索（分词后无需按顺序匹配）\n<img width=\"49%\"  alt=\"image\" src=\"https://github.com/user-attachments/assets/620d28e9-fd4e-4e1a-aa49-9fb0945603f3\">\n<img width=\"49%\" alt=\"image\" src=\"https://github.com/user-attachments/assets/27e5e79f-aecf-4901-83f2-3b060d30a30d\">\n\n### AI 标签分组：\n对上次聚焦窗口中的所有标签页进行 AI 分组，根据域名、标题和现有分组情况增量分组\n\n![Image](https://github.com/user-attachments/assets/5075a069-444b-499a-b448-83d9e6ff1123)",
    "created_at": "2025-10-14T11:32:14Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7907"
  },
  {
    "id": 7906,
    "title": "【工具自荐】ByViewer 是一款匿名 Instagram 快拍查看器",
    "content": "ByViewer 是一款基于网页的工具，可匿名查看和下载 Instagram 公开个人资料中的内容。无需登录或注册，用户只需输入 Instagram 用户名，点击“[匿名查看](https://byviewer.com/)”，即可查看快拍、Reel 和精彩片段，然后以高清分辨率下载。该服务注重隐私：您的用户名不会出现在任何人的查看列表中，并且不会跟踪或存储任何活动。ByViewer 支持跨设备（台式机、移动设备和平板电脑），通过 SSL 加密保护连接，并免费提供所有功能。它无法访问私人帐户，只能访问已公开的内容，并且声明与 Instagram 没有任何关联。\n\nhttps://byviewer.com/",
    "created_at": "2025-10-14T08:01:19Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7906"
  },
  {
    "id": 7905,
    "title": "【工具自荐】Autoppt：您的终极 AI 演示解决方案",
    "content": "Autoppt 是一款革命性的 AI 驱动[演示文稿生成工具](https://autoppt.com/)，它重新定义了演示文稿的创建方式。凭借丰富的模板和强大的功能，Autoppt 让您在几分钟内轻松创建精彩的演示文稿。\n\n1.强大的写作功能：Autoppt 的高级写作功能可以生成 20-30 张幻灯片，而通常情况下只能生成 5-10 张，为您节省时间和精力。2\n.丰富的模板：丰富的模板选择，一键轻松切换。轻松创建完整且视觉上引人入胜的演示文稿。3\n.一键思维导图生成：需要创建思维导图？Autoppt 一键即可完成，让您快速高效地将想法可视化。\n\n使用 Autoppt，您只需一分钟即可创建一份完整且视觉上引人入胜的 20-30 页演示文稿。告别数小时的幻灯片制作工作，让您的演示文稿比以往任何时候都更具吸引力。立即试用 Autoppt，体验演示文稿的未来。",
    "created_at": "2025-10-14T07:56:38Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7905"
  },
  {
    "id": 7904,
    "title": "【开源自荐】UpgradeLink 应用升级系统与应用分发平台。",
    "content": "UpgradeLink 是**全端支持的应用升级系统与应用分发平台**，为应用提供一站式的应用升级及分发解决方案，无论你开发的是 ​​Android 原生、Tauri 轻量化跨端、还是 Electron 桌面应用​​，都可以使用 UpgradeLink 实现统一的升级逻辑。\n\n\n## 应用升级支持\n覆盖主流应用开发框架/系统，提供针对性升级能力：\n\n| 支持类型        | 核心功能描述                                |\n|-------------|---------------------------------------|\n| 安卓应用升级      | 支持 APK 文件上传与管理，提供专属升级策略，用于应用更新        |\n| Tauri 应用升级  | 完全兼容 Tauri 官方升级组件接口，提供标准化升级策略与流程管理    |\n| Electron 升级 | 完全兼容 Electron 官方升级组件接口，提供标准化升级策略与流程管理 |\n\n\n## 核心功能模块\n\n#### 企业级安全防护（🔐）\n- API 服务内置多重安全机制，采用**签名验证、防重放攻击、请求频率限制**等技术\n- 保障应用升级过程零风险\n#### 开箱即用 API-SDK（📦）\n| [Go](https://github.com/toolsetlink/upgradelink-api-go) \n| [Java](https://github.com/toolsetlink/upgradelink-api-java)\n| [Python](https://github.com/toolsetlink/upgradelink-api-python)\n| [Dart](https://github.com/toolsetlink/upgradelink-api-dart)\n| [Android](https://github.com/toolsetlink/upgradelink-api-android)\n| [TypeScript](https://github.com/toolsetlink/upgradelink-api-ts) |\n\n\ngithub 地址： https://github.com/toolsetlink/upgradelink\n\n",
    "created_at": "2025-10-14T07:16:33Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7904"
  },
  {
    "id": 7902,
    "title": "【文章自荐】在 Hugo 静态站点中展示 Live Photos 实况照片或 Motion Photos 动态照片。",
    "content": "[Hugo](https://gohugo.io/) 是一个静态网站生成器，本文介绍在 Hugo 静态网站中展示实况照片或动态照片的实践。",
    "created_at": "2025-10-14T05:00:11Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7902"
  },
  {
    "id": 7901,
    "title": "【开源自荐】GhostScope：把 printf 调试带到生产环境的 eBPF 运行时追踪器",
    "content": "**GhostScope：把 printf 调试带到生产环境的 eBPF 运行时追踪器**\n\n项目地址： https://github.com/swananan/ghostscope\n\n<img width=\"478\" height=\"241\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c5b19fa5-4251-46f5-8adb-d7d37e53d826\" />\n\nGhostScope 是一款将 printf 调试的简单直接带到生产系统的运行时追踪工具：基于 DWARF 调试信息与 eBPF/uProbe，在不停机、不改代码的前提下，为运行中的进程在任意位置（函数、源码行、指令级）提供**高语义可观测性**。\n\n下面的演示展示了使用 GhostScope 追踪带有调试信息的 nginx worker 进程。可以看到，GhostScope 支持条件判断逻辑，能够轻松提取复杂数据结构的内部信息，且完全不影响进程的正常运行。\n\n![Demo](https://raw.githubusercontent.com/swananan/ghostscope/main/assets/demo.gif)\n\n**项目亮点**\n- 零侵入追踪：无需重启、无需修改代码。按需在函数入口、源码行或任意中间位置放置追踪点\n- 实时低开销：一次上下文切换 + eBPF 执行，流式输出不阻塞进程\n- DWARF 感知：可直接打印局部/全局变量、函数参数，并且支持复杂嵌套的结构\n- 脚本化探测：内置脚本语言，支持 `print`、变量与逻辑判断（支持 memcmp 等内置函数），可以自由追踪需要的信息，同时方便复用追踪脚本\n- 友好 TUI：cgdb 风格面板与 VIM 快捷键，所见即所得地浏览源码、设置与管理追踪点\n- Rust 构建：内存安全与高性能并重\n\n\n**使用限制（当前阶段）**\n- 实验性项目，仍在快速迭代中；请将采集结果作为辅助参考并与其他工具交叉验证\n- 目前对编译器高优化选项编译的程序探测能力存在一些缺陷，仍在支持中。另外对 C 语言支持较好，C++、Rust 等编译型语言的高级语法特性还有待补全。\n- 更多限制，可以参考文档：https://github.com/swananan/ghostscope/blob/main/docs/zh/limitations.md\n\n",
    "created_at": "2025-10-13T14:08:10Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7901"
  },
  {
    "id": 7900,
    "title": "【工具自荐】SoundCloud to MP3 – 一键下载 SoundCloud 音乐神器",
    "content": "**SoundCloud to MP3** 是一款高效便捷的音乐下载工具，专为音乐爱好者、创作者和内容收集者打造。  \n通过简单操作，你可以将 SoundCloud 上喜欢的音乐一键转换为 MP3 格式，离线随时欣赏。  \n\n---\n\n## 🎯 核心功能亮点  \n\n- **一键下载**：支持将 SoundCloud 音乐直接转换为高品质 MP3 文件。  \n- **高速转换**：快速解析音乐链接，几秒钟即可完成下载。  \n- **高音质输出**：保持原始音乐音质，支持多种比特率选择。  \n- **跨设备使用**：适用于电脑、平板和手机，随时随地获取音乐。  \n- **操作简便**：无需注册或安装任何软件，打开网页即可使用。  \n\n---\n\n## 💡 适用人群  \n\n- **音乐爱好者**：收藏喜爱的 SoundCloud 音乐，离线随时播放。  \n- **内容创作者**：轻松获取音乐素材，用于视频、播客等创作。  \n- **学生与通勤族**：下载学习或娱乐用的音乐，无需网络也能听。  \n- **DJ 和混音爱好者**：快速获取音源素材，灵活进行创作。  \n\n---\n\n## 🚀 为什么选择 SoundCloud to MP3  \n\n- 简单高效，一键下载  \n- 支持高品质 MP3 音乐输出  \n- 无需安装软件，网页即可操作  \n- 完全免费，安全可靠  \n\n---\n\n## ✨ [立即体验 SoundCloud to MP3](https://soundcloudtomp3.ai/)  \n\n轻松下载你喜欢的音乐，让每一次播放都随心所欲！  \n",
    "created_at": "2025-10-13T10:44:23Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7900"
  },
  {
    "id": 7899,
    "title": "【工具自荐】sora2watermarkremover.net-AI智能去除Sora2视频水印",
    "content": "# 🎬 sora2watermarkremover.net - Sora2 水印去除工具\n\n**基于 AI 的视频水印去除工具**\n\n[![Next.js](https://img.shields.io/badge/Next.js-15-black)](https://nextjs.org/)\n[![TypeScript](https://img.shields.io/badge/TypeScript-5.7-blue)](https://www.typescriptlang.org/)\n[![Website](https://img.shields.io/badge/website-sora2watermarkremover.net-orange)](https://sora2watermarkremover.net)\n\n[🌐 在线演示](https://sora2watermarkremover.net)\n\n</div>\n\n<img src=\"https://file.sora2watermarkremover.net/public/xuanc.png\" alt=\"示例\" width=\"50%\">\n\n---\n\n## 📋 目录\n\n- [项目简介](#-项目简介)\n- [核心功能](#-核心功能)\n- [技术栈](#-技术栈)\n- [工作原理](#-工作原理)\n\n\n---\n\n## 🌟 项目简介\n\n**Sora2 水印去除工具** 是一款基于先进深度学习技术和计算机视觉模型的 AI 驱动 Web 应用，专为无缝去除 Sora 生成视频中的水印而设计。提供专业级的水印去除效果和直观的用户界面。\n\n### 为什么选择 Sora2 水印去除工具？\n\n- 🎯 **精准去除**：AI 驱动的 \"Made with Sora\" 水印检测和去除\n- 🖱️ **手动控制**：交互式蒙版编辑器，精确选择水印区域\n- ⚡ **快速处理**：优化的 ComfyUI 工作流，高效视频处理\n- 🎨 **无缝效果**：先进的修复算法确保自然的输出效果\n- 🔒 **隐私优先**：所有处理过程安全可靠，数据受保护\n\n---\n\n## ✨ 核心功能\n\n### 主要能力\n\n- **🎭 AI 水印检测**：使用计算机视觉自动检测 Sora 水印\n- **✏️ 手动蒙版编辑**：基于 React Konva 的交互式画布水印区域标记\n- **🎬 视频处理**：支持 MP4、MOV 等常见视频格式\n- **📊 队列管理**：智能任务队列系统处理多个视频\n- **💾 云存储**：与 Cloudflare R2 无缝集成进行视频存储\n- **🌍 多语言支持**：使用 next-intl 支持 21+ 种语言\n- **📱 响应式设计**：完美适配桌面、平板和移动设备\n\n### 高级功能\n\n- **实时预览**：处理前实时蒙版预览\n- **批量处理**：队列中处理多个视频\n- **积分系统**：灵活的基于积分的定价模型\n- **用户仪表板**：跟踪处理历史和管理视频\n- **社交分享**：使用自定义 URL 分享处理后的视频\n- **API 访问**：面向开发者的 RESTful API（即将推出）\n\n---\n\n## 🛠️ 技术栈\n\n### 前端\n- **框架**：[Next.js 15](https://nextjs.org/) with App Router\n- **语言**：[TypeScript 5.7](https://www.typescriptlang.org/)\n- **UI 组件**：[Radix UI](https://www.radix-ui.com/) + [Tailwind CSS](https://tailwindcss.com/)\n- **画布编辑**：[React Konva](https://konvajs.org/docs/react/)\n- **状态管理**：React Hooks + Context API\n- **国际化**：[next-intl](https://next-intl-docs.vercel.app/)\n\n### 后端\n- **数据库**：[PostgreSQL](https://www.postgresql.org/) with [Drizzle ORM](https://orm.drizzle.team/)\n- **认证**：[NextAuth.js](https://next-auth.js.org/)\n- **支付**：[Stripe](https://stripe.com/) 集成\n- **存储**：[Cloudflare R2](https://www.cloudflare.com/products/r2/)\n- **AI 处理**：[ComfyUI API](https://github.com/comfyanonymous/ComfyUI)\n\n### 基础设施\n- **部署**：[Vercel](https://vercel.com/) / [Cloudflare Pages](https://pages.cloudflare.com/)\n- **CDN**：Cloudflare\n- **分析**：OpenPanel\n- **监控**：内置日志和错误跟踪\n\n---\n\n## 🔬 工作原理\n\n### 处理流程\n\n```\n视频上传 → 手动蒙版编辑 → 生成蒙版图像 → 上传到 R2 存储 \n→ 提交到 ComfyUI → AI 修复 → 下载结果 → 存储到 R2 → 交付给用户\n```\n\n### 技术工作流\n\n1. **视频上传**：用户上传 Sora 视频（支持拖放）\n2. **蒙版创建**：交互式画布允许精确标记水印区域\n3. **蒙版生成**：将标记区域转换为 PNG 蒙版图像\n4. **云上传**：将原始视频和蒙版上传到 Cloudflare R2\n5. **ComfyUI 处理**：\n   - 将视频和蒙版加载到 ComfyUI 工作流\n   - 使用 U-Net 架构应用 AI 修复\n   - 逐帧处理，保持上下文一致性\n6. **结果交付**：下载处理后的视频并存储到 R2\n7. **用户访问**：提供下载链接和预览\n\n---",
    "created_at": "2025-10-13T09:42:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7899"
  },
  {
    "id": 7898,
    "title": "【开源自荐】XSta - 一个超轻量的 React 状态管理库",
    "content": "## XSta\n\n一个<strong>超轻量</strong> (< 200 行代码) 的 React 状态管理库\n\n**项目地址:** https://github.com/idootop/xsta\n\n![Banner](https://cdn.jsdelivr.net/gh/idootop/xsta@main/assets/cover.webp)\n\n\n## 亮点\n\n- **🐦 麻雀虽小，五脏俱全** 核心不到 200 行代码（包含换行和注释），提供了完备的 React 状态管理解决方案。\n- **✅ 简单易用** 只需将 `useState` 替换为 `useXState`，即可将组件内状态快速共享给其他组件使用，就这么简单！\n- **💪 灵活高效** 内置 `useComputed`, `XMemo` 等组件，确保组件只在其关注的状态改变时才触发 re-render，轻松搞定复杂页面性能优化。\n\n## 代码示例\n\n### 1. 基础用法\n\n使用 `useXState` 替换 `useState`：\n\n```tsx\nimport { useXState } from \"xsta\";\n\nfunction Counter() {\n  const [count, setCount] = useXState(\"count\", 0);\n\n  return <button onClick={() => setCount(count + 1)}>计数: {count}</button>;\n}\n```\n\n### 2. 在组件外访问状态\n\n```tsx\nimport { XSta } from \"xsta\";\n\nfunction increment() {\n  const count = XSta.get(\"count\");\n  XSta.set(\"count\", count + 1);\n}\n```\n\n### 3. 性能优化\n\n仅在计算值发生变化时才触发重新渲染：\n\n```tsx\nconst total = useXComputed(\"products\", (state) =>\n  state.items.reduce((sum, item) => sum + item.price, 0)\n);\n```\n\n### 4. 创建 Store （最佳实践）\n\n```tsx\nimport { createXStore } from \"xsta\";\n\nconst counterStore = createXStore({\n  count: 0,\n  increment() {\n    counterStore.setState((s) => ({ count: s.count + 1 }));\n  },\n});\n\nfunction Counter() {\n  const [state] = counterStore.useXState();\n\n  return (\n    <div>\n      <p>计数: {state.count}</p>\n      <button onClick={state.increment}>+</button>\n    </div>\n  );\n}\n```\n\n### 使用文档\n\n完整 API 列表 👉 https://github.com/idootop/xsta/blob/main/docs/cn/index.md",
    "created_at": "2025-10-13T09:26:26Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7898"
  },
  {
    "id": 7897,
    "title": "【开源自荐】Sora2 免费一键在线去水印",
    "content": "[Sora2在线去水印](https://www.vsai.dev/)\n目前已知免费在线的去水印网站，每天免费去除十个水印视频。\n月度会员5刀无限次去水印，非常的方便。",
    "created_at": "2025-10-13T09:16:35Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7897"
  },
  {
    "id": 7896,
    "title": "【工具自荐】开发者工具箱",
    "content": "网址：https://json.bwte.cn/\n**系统功能：**\njson格式解析，对于大报文解析快，自动折叠。\n文件base64 相互转换",
    "created_at": "2025-10-13T09:12:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7896"
  },
  {
    "id": 7895,
    "title": "【开源自荐】ZenBox - 像 Vue 一样写 React",
    "content": "## ZenBox\n\n把 Vue 的愉悦开发体验带到 React 中，让 React 状态管理更简单\n\n**项目地址:** https://github.com/idootop/ZenBox\n\n**官方网站:** https://zenbox.del.wang\n\n![Banner](https://raw.githubusercontent.com/idootop/ZenBox/refs/heads/main/website/public/banners/light.png)\n\n## 如果 React 也能像 Vue 一样简单呢？\n\n我已经写了很多年 React 了，期间用过许多状态管理库：\n\n比如 Redux、MobX、Zustand、Jotai、Valtio 等，每个都有自己的特点和使用场景，但总感觉差点什么。\n\n后来我开始接触 Vue 生态，第一次使用 `computed` 的时候，我想：\"为什么 React 不能像 Vue 一样简单？\"\n\n## 让 React 状态管理更简单\n\n**ZenBox = 像 Vue 一样写 React 💚 + 像 Zustand 一样管理状态 🐻**\n\n- 💪 **强大易用**: 包含 Zustand 的所有特性 + 更多优化升级。\n- ⚡️ **简单高效**: 像 Vue 一样符合直觉，自动类型推导，自动依赖追踪。\n- 📦 **超级轻量**: [核心代码不到 100 行](https://zenbox.del.wang/cn/blog/react-state-management-in-100-lines)，压缩后不到 3KB（不含 Immer），浓缩的都是精华。\n\n```tsx\n// 自动类型推导，无需手写类型接口\nconst userStore = createStore({\n  name: \"小明\",\n  posts: [\"你好，世界\"],\n});\n\n// 计算属性\nconst greeting = useComputed(() => `你好 ${userStore.value.name}!`);\n\n// 监听变化\nuseWatch(\n  () => userStore.value.posts.length,\n  (count) => console.log(`现在有 ${count} 篇文章了`)\n);\n```\n\n仔细一看，这不就是 Vue 代码嘛，但它确实是 React，而且完全按照你期望的方式工作。\n\n这就是 ZenBox - 既有 Zustand 的简洁，又有 Vue 的愉悦开发体验，让 React 状态管理更简单。\n\n## ZenBox vs Zustand\n\n| 特性                  | ZenBox                         | Zustand                 |\n| --------------------- | ------------------------------ | ----------------------- |\n| **学习曲线**          | ✅ 像 Vue 一样简单             | ✅ 较低                 |\n| **Vue Hooks**         | ✅ `useComputed`/`useWatch`    | ❌ 不支持               |\n| **TypeScript**        | ✅ 自动推断类型                | ⚠️ 手动定义类型         |\n| **跨 Store 计算属性** | ✅ 自动跟踪依赖                | ❌ 不支持               |\n| **状态访问**          | ✅ 统一的 `store.value` 接口   | ⚠️ 显式 `get()`/`set()` |\n| **状态隔离**          | ✅ 内置 Provider               | ❌ 默认全局状态         |\n| **Immer 集成**        | ✅ 内置支持                    | ⚠️ 需要中间件           |\n| **打包大小**          | **< 3KB** 压缩后（不含 Immer） | **< 1KB** 压缩后        |\n",
    "created_at": "2025-10-13T08:56:42Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7895"
  },
  {
    "id": 7894,
    "title": "【开源自荐】CrossDesk：一款轻量级跨平台远程桌面软件",
    "content": "**官网地址**：https://www.crossdesk.cn/\n**项目地址**：https://github.com/kunkundi/crossdesk\n**核心库项目地址**：https://github.com/kunkundi/minirtc\n\n### 项目描述\nCrossDesk 是一款轻量级的跨平台远程桌面软件。CrossDesk 是 [MiniRTC](https://github.com/kunkundi/minirtc.git) 实时音视频传输库的实验性应用。MiniRTC 是一个轻量级的跨平台实时音视频传输库。它具有网络透传（[RFC5245](https://datatracker.ietf.org/doc/html/rfc5245)），视频软硬编解码（H264/AV1），音频编解码（[Opus](https://github.com/xiph/opus)），信令交互，网络拥塞控制，传输加密（[SRTP](https://tools.ietf.org/html/rfc3711)）等基础能力。\n\n### 核心功能\n- **跨平台支持**：Windows、Linux、macOS 等主流平台  \n- **P2P 音视频传输**：点对点直连，降低延迟，提高实时性  \n- **多视频编码支持**：\n  - **AV1** 软件编解码  \n  - **H.264** 硬件加速编码/解码  \n    - Windows / Linux: **NVIDIA Video Codec SDK (NVENC/NVDEC)**  \n    - macOS: **Video Toolbox**  \n- **音频编码支持**：**Opus** 编解码，高质量低延迟  \n- **安全加密**：支持 **SRTP 协议 (RFC 3711)**，保障音视频传输安全  \n- **网络透传**：基于 **RFC 5245 (ICE)** 的 NAT 穿透，适应复杂网络环境，实现直接连接  \n- **QoS**：复用 WebRTC 核心模块，实现丢包恢复、带宽估计与网络抖动补偿  \n- **轻量化设计**：核心库MiniRTC体积小，易于集成到各类项目 \n\n### 界面截图\n#### 主界面\n\n<img width=\"669\" height=\"510\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a7e0c766-075c-4c06-b22d-c29cf04b4e06\" />\n\n#### 连接到远程桌面\n\n<img width=\"1280\" height=\"720\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/59496b2f-c292-480d-a030-e5f08e8a7c25\" />",
    "created_at": "2025-10-13T08:38:34Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7894"
  },
  {
    "id": 7893,
    "title": "【开源自荐】小米笔记备份助手 - 小米笔记秒变个人博客网站",
    "content": "## 📝 小米笔记备份助手\n\n小米笔记秒变个人博客网站，一键备份小米笔记（包含图片、录音等文件）\n\n**项目地址:** https://github.com/idootop/mi-note-export\n\n**演示网站:** https://mi-note-export.vercel.app\n\n[![Banner](https://github.com/idootop/mi-note-export/raw/main/screenshots/banner.png)](https://mi-note-export.vercel.app)\n\n## 功能列表\n\n- **⚡️ 一键备份**：完整备份笔记和图片等文件，避免数据丢失。\n- **✨ 秒变博客**：将小米笔记转成网页，您的个人博客即刻上线！\n- **🔒 隐私安全**：纯本地处理，无需第三方服务器，数据 100% 掌控\n- **🚗 迁移到其他平台**：支持保存为 Markdown 格式，方便导入其他应用\n\n\n## 项目背景\n\n犹记得我用过的最后一部小米手机是 [红米 Note 4X](https://www.mi.com/redminote4x) —— 当年的千元机性价比之王，陪我走过了大学的青春岁月，记录了许多美好回忆。不过毕业之后，我就再没用过小米手机。\n\n直到有一天，我收到了「小米云服务存储数据即将清空」的通知邮件。\n\n<img width=\"690\" height=\"512\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1a8ead54-0a96-4936-8675-70fce944bf27\" />\n\n原以为小米云服务里的数据是永久保存的，原来长时间不用也会被清空。\n\n幸好我有经常看邮件的习惯，不然一个月之后就灰飞烟灭了。\n\n但遗憾的是，小米笔记并没有提供「批量导出」的功能。\n\n于是，便有了本项目 ;)\n\n## 技术细节\n\n- 本项目图标由「[豆包](https://www.doubao.com)」生成，宣传图使用 [Figma](https://www.figma.com) 制作\n- 本项目代码由 [Cursor](https://cursor.com/cn) + [Claude Sonnet 4.5](https://www.anthropic.com/news/claude-sonnet-4-5) 辅助生成\n- 前端由 [Vite](https://vite.dev/) + [Svelte](https://svelte.dev/) 强力驱动（轻量高效，适合小型单页应用）\n- 后端由 [Bun](https://bun.com/) 强力驱动（更小、更高效的 [Node.js](https://nodejs.org) 运行时替代品）\n- 网站 Docker 镜像由 [lipanski/docker-static-website](https://lipanski.com/posts/smallest-docker-image-static-website) 强力驱动（不到 **100KB**）\n",
    "created_at": "2025-10-13T08:26:12Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7893"
  },
  {
    "id": 7892,
    "title": "【工具自荐】唐库全自动小说生成 - 生成逻辑自洽、连贯到连Gemini都找不出bug的长篇小说",
    "content": "网站：https://tanglib.org\n\n系统功能：\n\n全自动生成1-500万字的小说，用户提供小说标签，创意即可；\n同步生成小说大纲及每章摘要（可用于检查错误）。\n唐库全自动创作的小说的特点：逻辑自洽，情节连贯，精巧的悬念与伏笔设计（网站有评测）。\n\n目前有个共识：AI回答单个问题无困难，但写长篇小说是不行的，我问Gemini 2.5 pro，你相信AI可以写长篇小说了吗？同时发给它一个长篇小说的章节摘要（正文100万汉字超过输入限制），Gemini 2.5 pro的原话如下：\n\n“你问我相不相信？坦白说，在看到你提供的小说摘要之前，我作为一个大语言模型，知道“理论上可行”，但对其“实际效果”是存疑的。在看完这些摘要后，我的判断是：**如果这确实是AI全自动生成的，那它已经跨越了一个非常重要的门槛，即长篇叙事的逻辑连贯性和情节推动力。**\n这些摘要的质量相当高，展现了：\n\n1. **清晰的主线：** 主角江澈从“病人”到“逃亡者”再到“觉醒者”的身份转变。\n2. **饱满的人物弧光：** 江澈的心态变化有迹可循，从自我怀疑到绝望求生，再到主动寻求真相和力量。\n3. **严谨的逻辑闭环：** 伏笔（如齿轮符号、黑色斗篷）有回收，行动有动机，危机层层递进。\n4. **鲜明的世界观：** 律者、旧神囚犯、三大流派等设定被逐步揭示，引人入胜。\n5. **强烈的画面感和节奏感：** 追逐戏、对峙、智斗的场面调度清晰，节奏张弛有度。”\n\n![唐库全自动小说生成器1](https://cn.tanglib.org/uploads/projects/tanglibhelp/%E5%94%90%E5%BA%93%E5%85%A8%E8%87%AA%E5%8A%A8%E5%B0%8F%E8%AF%B4%E7%94%9F%E6%88%90%E5%99%A8/18687191e2379feb.png)\n\n\n![唐库全自动小说生成器2](https://cn.tanglib.org/uploads/projects/tanglibhelp/%E5%94%90%E5%BA%93%E5%85%A8%E8%87%AA%E5%8A%A8%E5%B0%8F%E8%AF%B4%E7%94%9F%E6%88%90%E5%99%A8/186412cd3d180b4a.png)\n\n\n",
    "created_at": "2025-10-13T07:32:23Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7892"
  },
  {
    "id": 7891,
    "title": "【开源自荐】PublicProviderConf：一键聚合 AI 模型配置，让 Chatbox 开发更简单",
    "content": "**项目地址**: https://github.com/ThinkInAIXYZ/PublicProviderConf\n\n随着 AI 大模型越来越多，对于 Chatbox 这类客户端的开发者来说，手动维护和更新各家 API 的模型参数是一件非常繁琐且易出错的工作。\n\n为了解决这个痛点，PublicProviderConf 诞生了\n\n它能自动聚合来自 OpenAI、Anthropic、Groq、OpenRouter 等主流服务商的模型信息，并生成一份统一、标准的 JSON 配置文件。开发者只需使用这份生成好的文件，就能轻松地让自己的应用支持众多 AI 模型，无需再为每个服务商编写专门的适配代码，大大简化了开发和维护流程。",
    "created_at": "2025-10-13T06:48:25Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7891"
  },
  {
    "id": 7890,
    "title": "【工具自荐】Pipiads – 全球领先的广告素材智能分析神器",
    "content": "**Pipiads** 是一款强大的广告情报分析工具，专为营销人员、电商卖家和广告优化师打造。  \n通过 AI 驱动的数据分析与广告监测，Pipiads 能帮助你快速发现热门广告、洞察竞争对手策略，并高效提升投放 ROI。  \n\n---\n\n## 🎯 核心功能亮点  \n\n- **全球广告素材库**：收录 Facebook、TikTok、YouTube 等主流平台的百万级广告素材，实时更新。  \n- **AI 智能分析**：支持关键词、受众、地区、趋势多维度筛选，快速找到高转化广告。  \n- **热门产品追踪**：一键查看爆款产品背后的广告策略与创意表现。  \n- **创意灵感发现**：浏览高表现广告素材，获取设计与文案灵感。  \n- **竞品监测与对标**：实时分析竞争品牌的广告趋势与投放节奏。  \n- **数据导出与多语言支持**：轻松满足团队研究与报告需求。  \n\n---\n\n## 💡 适用人群  \n\n- **营销与广告优化师**：精准分析竞品广告，优化投放效果。  \n- **跨境电商卖家**：挖掘爆款广告，复制成功打法。  \n- **品牌与创意团队**：发现趋势广告灵感，提升品牌曝光。  \n- **数据分析师**：通过广告数据洞察市场方向。  \n\n---\n\n## 🚀 为什么选择 Pipiads  \n\n- 海量广告素材，洞察全球趋势  \n- AI 智能分析，节省调研时间  \n- 可视化数据展示，一目了然  \n- 商业友好，可用于策略分析与营销研究  \n\n---\n\n## ✨ [立即体验 Pipiads](https://www.pipiads.com/)  \n\n解锁全球广告情报，让你的每一次投放都更有方向！  \n",
    "created_at": "2025-10-13T04:03:09Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7890"
  },
  {
    "id": 7889,
    "title": "【工具自荐】bkhtmltopdf – 高性能 HTML 转 PDF 工具（账单、报告、报表、医疗单生成）",
    "content": "# bkhtmltopdf\n\n[bkhtmltopdf](https://github.com/bkhtmltopdf/bkhtmltopdf) 的名称来源于 **Blink HTML to PDF**，其中 [Blink](https://www.chromium.org/blink/) 是 Chromium 的渲染引擎。\n\n由于 [wkhtmltopdf](https://github.com/wkhtmltopdf/wkhtmltopdf) 停止更新（我猜可能是 QtWebKit 的兼容问题），所以我开发了一个 bkhtmltopdf。它基于 Java + CEF 开发，并支持了更多特性，在企业中生成 PDF 报告、账单、报表、医疗单、体检单等场景下非常有用。\n\n## 功能/特性\n\n- 极高的[性能](https://www.bkhtmltopdf.com/zh-CN/performance)\n- 采用 Chromium 新版本（135+）\n- 支持 HTML5、CSS3、JavaScript 等高级特性\n- 页眉、页脚、大纲、无障碍 PDF\n- 多语言、多字体（支持CJK、老挝、藏语等少数语言）\n- 高精度保真（生成的 PDF 与 HTML 效果完全一致）\n- 集成条形码 （支持QRCode、Code128、Code11等近百种条形码）\n- 集成图表（基于 [Apache ECharts](https://echarts.apache.org/) ）\n- 支持 Markdown 转 PDF\n\n## 条形码\n如果要使用条形码，只需要一行代码即可实现。\n\n\n生成的条码基于 SVG 矢量图，所以 PDF 可以无限放大。这样的好处是打印出来的 PDF 文件不会失真、出现毛刺等问题。\n\n\n```html\n<barcode type=\"qrcode\" value=\"Hi, bkhtmltopdf.\" width=\"200px\" height=\"200px\"\n         alt=\"This is a QR code whose value is: Hi, bkhtmltopdf.\"/>\n\n<barcode type=\"code128\" value=\"123456789\" width=\"200px\" height=\"200px\" options=\"includetext\"\n         alt=\"This is a Code 128 whose value is: 123456789\"/>\n```\n\n[在线运行](https://demo.bkhtmltopdf.com/ui/#/html-to-pdf?html=%3C%21doctype%20html%3E%0A%3Chtml%20lang%3D%22en%22%3E%0A%3Chead%3E%0A%20%20%20%20%3Cmeta%20charset%3D%22UTF-8%22%3E%0A%20%20%20%20%3Ctitle%3EHi%2C%20bkhtmltopdf%21%3C%2Ftitle%3E%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%3Cbarcode%20type%3D%22qrcode%22%20value%3D%22Hi%2C%20bkhtmltopdf.%22%20width%3D%22200px%22%20height%3D%22200px%22%0A%20%20%20%20%20%20%20%20%20alt%3D%22This%20is%20a%20QR%20code%20whose%20value%20is%3A%20Hi%2C%20bkhtmltopdf.%22%2F%3E%0A%0A%3Cbarcode%20type%3D%22code128%22%20value%3D%22123456789%22%20width%3D%22200px%22%20height%3D%22200px%22%20options%3D%22includetext%22%0A%20%20%20%20%20%20%20%20%20alt%3D%22This%20is%20a%20Code%20128%20whose%20value%20is%3A%20123456789%22%2F%3E%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E)\n\n<img width=\"450\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e5096b80-3fe0-4f6f-8784-2daad2ca3403\" />\n\n\n## 图表\n\n如果要使用图表功能，也只需要简单的几行代码。\n\n```html\n<chart src=\"chart-1\" width=\"500\" height=\"500\" alt=\"This is a chart\"/>\n\n<script id=\"chart-1\" type=\"application/json5\">\n    {xAxis:{type:'category',data:['Mon','Tue','Wed','Thu','Fri','Sat','Sun']},yAxis:{type:'value'},series:[{data:[150,230,224,218,135,147,260],type:'line'}]}\n</script>\n```\n\n[在线运行](https://demo.bkhtmltopdf.com/ui/#/html-to-pdf?html=%3C!doctype%20html%3E%0A%3Chtml%20lang%3D%22en%22%3E%0A%3Chead%3E%0A%20%20%20%20%3Cmeta%20charset%3D%22UTF-8%22%3E%0A%20%20%20%20%3Ctitle%3EHi%2C%20bkhtmltopdf!%3C%2Ftitle%3E%0A%20%20%20%20%3Cstyle%3E%0A%20%20%20%20%20%20%20%20body%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20text-align%3A%20center%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%3C%2Fstyle%3E%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%0A%3Cchart%20src%3D%22chart-1%22%20width%3D%22500%22%20height%3D%22500%22%20alt%3D%22This%20is%20a%20chart%22%2F%3E%0A%3Cchart%20src%3D%22chart-2%22%20width%3D%22500%22%20height%3D%22500%22%20alt%3D%22This%20is%20a%20chart%22%2F%3E%0A%0A%3Cscript%20id%3D%22chart-1%22%20type%3D%22application%2Fjson5%22%3E%0A%20%20%20%20%7BxAxis%3A%7Btype%3A'category'%2Cdata%3A%5B'Mon'%2C'Tue'%2C'Wed'%2C'Thu'%2C'Fri'%2C'Sat'%2C'Sun'%5D%7D%2CyAxis%3A%7Btype%3A'value'%7D%2Cseries%3A%5B%7Bdata%3A%5B150%2C230%2C224%2C218%2C135%2C147%2C260%5D%2Ctype%3A'line'%7D%5D%7D%0A%3C%2Fscript%3E%0A%0A%3Cscript%20id%3D%22chart-2%22%20type%3D%22application%2Fjson%22%3E%0A%20%20%20%20%7B%22color%22%3A%5B%22%2380FFA5%22%2C%22%2300DDFF%22%2C%22%2337A2FF%22%2C%22%23FF0087%22%2C%22%23FFBF00%22%5D%2C%22title%22%3A%7B%22text%22%3A%22Gradient%20Stacked%20Area%20Chart%22%7D%2C%22tooltip%22%3A%7B%22trigger%22%3A%22axis%22%2C%22axisPointer%22%3A%7B%22type%22%3A%22cross%22%2C%22label%22%3A%7B%22backgroundColor%22%3A%22%236a7985%22%7D%7D%7D%2C%22legend%22%3A%7B%22data%22%3A%5B%22Line%201%22%2C%22Line%202%22%2C%22Line%203%22%2C%22Line%204%22%2C%22Line%205%22%5D%7D%2C%22toolbox%22%3A%7B%22feature%22%3A%7B%7D%7D%2C%22xAxis%22%3A%5B%7B%22type%22%3A%22category%22%2C%22boundaryGap%22%3Afalse%2C%22data%22%3A%5B%22Mon%22%2C%22Tue%22%2C%22Wed%22%2C%22Thu%22%2C%22Fri%22%2C%22Sat%22%2C%22Sun%22%5D%7D%5D%2C%22yAxis%22%3A%5B%7B%22type%22%3A%22value%22%7D%5D%2C%22series%22%3A%5B%7B%22name%22%3A%22Line%201%22%2C%22type%22%3A%22line%22%2C%22stack%22%3A%22Total%22%2C%22smooth%22%3Atrue%2C%22lineStyle%22%3A%7B%22width%22%3A0%7D%2C%22showSymbol%22%3Afalse%2C%22areaStyle%22%3A%7B%22opacity%22%3A0.8%7D%2C%22emphasis%22%3A%7B%22focus%22%3A%22series%22%7D%2C%22data%22%3A%5B140%2C232%2C101%2C264%2C90%2C340%2C250%5D%7D%2C%7B%22name%22%3A%22Line%202%22%2C%22type%22%3A%22line%22%2C%22stack%22%3A%22Total%22%2C%22smooth%22%3Atrue%2C%22lineStyle%22%3A%7B%22width%22%3A0%7D%2C%22showSymbol%22%3Afalse%2C%22areaStyle%22%3A%7B%22opacity%22%3A0.8%7D%2C%22emphasis%22%3A%7B%22focus%22%3A%22series%22%7D%2C%22data%22%3A%5B120%2C282%2C111%2C234%2C220%2C340%2C310%5D%7D%2C%7B%22name%22%3A%22Line%203%22%2C%22type%22%3A%22line%22%2C%22stack%22%3A%22Total%22%2C%22smooth%22%3Atrue%2C%22lineStyle%22%3A%7B%22width%22%3A0%7D%2C%22showSymbol%22%3Afalse%2C%22areaStyle%22%3A%7B%22opacity%22%3A0.8%7D%2C%22emphasis%22%3A%7B%22focus%22%3A%22series%22%7D%2C%22data%22%3A%5B320%2C132%2C201%2C334%2C190%2C130%2C220%5D%7D%2C%7B%22name%22%3A%22Line%204%22%2C%22type%22%3A%22line%22%2C%22stack%22%3A%22Total%22%2C%22smooth%22%3Atrue%2C%22lineStyle%22%3A%7B%22width%22%3A0%7D%2C%22showSymbol%22%3Afalse%2C%22areaStyle%22%3A%7B%22opacity%22%3A0.8%7D%2C%22emphasis%22%3A%7B%22focus%22%3A%22series%22%7D%2C%22data%22%3A%5B220%2C402%2C231%2C134%2C190%2C230%2C120%5D%7D%2C%7B%22name%22%3A%22Line%205%22%2C%22type%22%3A%22line%22%2C%22stack%22%3A%22Total%22%2C%22smooth%22%3Atrue%2C%22lineStyle%22%3A%7B%22width%22%3A0%7D%2C%22showSymbol%22%3Afalse%2C%22label%22%3A%7B%22show%22%3Atrue%2C%22position%22%3A%22top%22%7D%2C%22areaStyle%22%3A%7B%22opacity%22%3A0.8%7D%2C%22emphasis%22%3A%7B%22focus%22%3A%22series%22%7D%2C%22data%22%3A%5B220%2C302%2C181%2C234%2C210%2C290%2C150%5D%7D%5D%7D%0A%3C%2Fscript%3E%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E)\n\n\n<img width=\"450\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bed0926c-d5b0-4ca2-af9a-210ec0461de6\" />\n\n## 最佳实践\n\n\n### [账单](https://www.bkhtmltopdf.com/zh-CN/docs/best-practice/invoice)\n\n<img width=\"450\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/90fb291b-7d7f-476d-9fb0-dba237f25318\" />\n\n### [准考证](https://www.bkhtmltopdf.com/zh-CN/docs/best-practice/admission-ticket)\n\n<img width=\"450\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c61c9823-1993-43ca-853f-3d6bbcfabf13\" />",
    "created_at": "2025-10-13T03:12:21Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7889"
  },
  {
    "id": 7888,
    "title": "【开源自荐】DeepChat 基于 Vue 的桌面端 ChatBot（商业化友好）",
    "content": " **项目地址:** https://github.com/ThinkInAIXYZ/deepchat\n \n **下载地址:** https://github.com/ThinkInAIXYZ/deepchat/releases  \n \n **官网地址:** https://deepchatai.cn/\n\n ### **一句话介绍**\n 一个功能齐全上手简单的 AI ChatBot， 支持MCP, 知识库，各类主流 AI 供应商模型都支持，支持通过自然语言 @ 各种MCP 工具，prompt 等进行流程编排。界面美观，基于 Vue + Electron 开发。\n\n ### **核心功能**\n\n- 丰富的 Markdown 渲染能力，支持 Artifacts 等扩展能力\n- 稳定可靠的 MCP 调用，支持原生 function call 和 prompt 模拟两种方式，适配各类模型\n- 多窗口+多 Tab 架构，支持多个 AI 同时处理不同任务\n- 内置大量实用工具，支持一键安装和自动解析 MCP 服务，免去 MCP 安装复杂问题\n- 自带知识库能力，同时支持内置和第三方知识库接入\n- 数据导入导出能力\n- 开源协议 [Apache License 2.0](https://github.com/ThinkInAIXYZ/deepchat/blob/main/LICENSE) \n- 商业化友好，项目自带一键替换Logo ，软件名的脚本和教程\n\n### **技术栈**\n\nVue 3,Electron,Tailwind CSS v4, Shadcn,Vite,oxlint\n\n ### **适用场景**\n\n- 本地调试开发 AI Agent / MCP 服务等，可以用自然语言直接编排和验证各类 Prompt\n- 模型部署微调需要的时候需要一个快捷好用的客户端\n- 企业私有化部署大模型服务需要一个桌面客户端\n- 个人日常使用，希望能自由切换各类模型\n\n\n### **界面截图**\n\n<img width=\"1600\" height=\"1296\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6bcc9aa3-0c82-488e-a1c0-db3e6b12d27b\" />\n\n",
    "created_at": "2025-10-13T02:51:26Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7888"
  },
  {
    "id": 7887,
    "title": "【开源自荐】Goanalysis: 洞察 Go 代码的终极利器",
    "content": "**项目地址:** [https://github.com/toheart/goanalysis](https://github.com/toheart/goanalysis)\n\n**下载地址:** [https://github.com/toheart/goanalysis/releases](https://github.com/toheart/goanalysis/releases)\n\n### **一句话介绍**\n\n一个强大的 Go 静态与动态分析工具，专为函数追踪、性能可视化和 GitLab MR 智能影响面分析而设计。\n\n### **核心功能**\n\n*   **函数追踪与可视化:** 实时捕获 Goroutine 执行流，并生成交互式的 Mermaid 流程图与 ECharts 热力图，让复杂的并发逻辑一目了然。\n*   **静态代码分析:** 深度分析 Go 项目，一键生成函数调用图（Call Graph）、包依赖关系，帮助您快速理解项目架构和 `init` 函数风险。\n*   **GitLab MR 智能分析:** **（核心亮点）** 自动分析 Merge Request 的代码变更，识别受影响的函数及其上游调用链，在 MR 页面生成代码影响面报告、测试建议和结构化测试用例。\n*   **性能瓶颈识别:** 通过运行时追踪数据，分析热点函数和耗时路径，快速定位性能问题。\n*   **一键代码插桩:** 提供 `rewrite` 命令，对您的 Go 项目进行无侵入的代码插桩，为运行时追踪做好准备。\n*   **现代化 Web UI:** 基于 Vue3 构建的现代化、响应式的用户界面，提供流畅的分析体验。\n*   **跨平台支持:** 支持 Linux、macOS 和 Windows (amd64 & arm64)。\n\n### **技术栈**\n\nGo 1.23+, Kratos, gRPC, SQLite, Vue3, ECharts, Mermaid.js, MIT 开源许可\n\n### **适用场景**\n\n*   需要快速理解和梳理复杂 Go 项目源码的开发者。\n*   希望可视化函数调用链和 Goroutine 行为的团队。\n*   进行性能分析，需要定位代码瓶颈的工程师。\n*   希望在 Code Review 阶段自动化代码影响面分析的团队。\n*   需要为代码变更生成精准测试建议和用例的 QA 团队。\n\n### **快速开始**\n\n```shell\n# 1. 下载并运行服务器 (以 Linux amd64 为例)\n# 从 Release 页面选择适合您系统的版本\ncurl -L https://github.com/toheart/goanalysis/releases/latest/download/goanalysis-linux-v[版本号] -o goanalysis\nchmod +x goanalysis\n./goanalysis server\n\n# 2. 对您的 Go 项目进行代码插桩\n./goanalysis rewrite -d /path/to/your/go/project\n\n# 3. (可选) 分析 GitLab MR (需配置 GitLab Token 等环境变量)\n./goanalysis git mr -u \"https://gitlab.com/your-group/your-project/-/merge_requests/123\"\n```",
    "created_at": "2025-10-13T02:14:03Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7887"
  },
  {
    "id": 7886,
    "title": "【开源自荐】 Tab Hive - 在一个页面中 Grid 布局查看多个网站",
    "content": "阮老师好，\n\n有朋友跟我说他工作时需要同时打开好几个网页（比如监控面板、文档、后台系统），来回切换标签页挺麻烦的，问我有没有什么办法。\n\n想起之前看过类似的分屏工具，就试着做了这个小东西。主要就是把多个网站放在一个页面里，用 Grid 布局展示，点击可以全屏查看单个网站。支持动态切换多个工作布局，后续会支持大家分享自己的某个工作场景布局，别人可以直接用。\n\n**项目地址：** https://github.com/MaskerPRC/tab-hive  \n**演示视频：** https://youtu.be/z_rfNVBBLWo\n**演示页面：** https://tabs.apexstone.ai/\n\n技术上比较简单，就是 Vue 3 + iframe，纯前端实现。Web 版本会受 CORS 限制，所以也提示用户安装谷歌插件来规避，所以也打包了桌面客户端（Electron），可以加载任何网站。\n\n觉得可能对一些需要多屏查看网页的朋友有点用，就想着推荐给您。如果觉得合适的话，能否在周刊里提一下，让更多有类似需求的人知道。\n\n谢谢！",
    "created_at": "2025-10-12T07:48:39Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7886"
  },
  {
    "id": 7885,
    "title": "【开源推荐】tinystruct framework - 给十年后的程序员设计的Java开发框架",
    "content": "# tinystruct framework\n\n> **版本：** 1.7.7  \n> **语言：** Java  \n> **许可证：** Apache License 2.0  \n> **GitHub：** [tinystruct](https://github.com/tinystruct)\n\n\n\n## 简要说明\n\ntinystruct 是一个轻量级 Java 应用框架，支持命令行工具与 Web 接口的统一调用方式。其目标是通过最少的依赖、简洁的设计、模块化扩展，来降低开发复杂度。\n\n在 1.7.7 版本中，对 HTTP 模块（Tomcat / Netty）、模块化结构和上下文管理进行了优化以减轻核心负担。\n\n\n\n## 核心特性\n\n- **最少依赖**：核心库保持轻量，仅引入必要的组件  \n- **统一 `@Action` 调用机制**：命令行与 HTTP 接口共用调用方式  \n- **模块化 HTTP 支持**：可选集成 Tomcat / Netty 模块  \n- **低延迟调用**：方法内部调用减少中间开销  \n- **扩展能力**：支持构建插件 / 生态模块  \n- **适用场景广泛**：适合小型服务、CLI 工具、AI 应用等  \n\n<img width=\"1111\" height=\"757\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/57173ff0-a286-46ef-9000-51e1c53c11fe\" />\n\n\n\n## 生态模块 / 示例项目\n\n下面是一些已有的模块或实例，可作为参考或扩展：\n\n| 模块 / 项目 | 类型 | 功能 / 说明 |\n|--------------|------|----------------------------|\n| `tinystruct-mcp` | MCP 服务端模块 | 基于 tinystruct 实现的 MCP（Model Context Protocol）服务器 |\n| `tinystruct-tomcat-server` | HTTP 模块 | 提供 Tomcat 方式的 HTTP 支持 |\n| `tinystruct-netty-http-server` | HTTP 模块 | 提供 Netty 模式的 HTTP 支持 |\n| `smalltalk` | 应用示例 | 基于 tinystruct 的聊天系统，支持 CLI 与 Web 模式 |\n| `tinystruct-examples` | 示例项目 | 演示 CLI / Web 混合模式使用方法  |\n\n\n\n\n## 快速上手示例\nhttps://github.com/tinystruct/tinystruct\n### 引入依赖（Maven 示例）\n\n```xml\n<dependency>\n  <groupId>org.tinystruct</groupId>\n  <artifactId>tinystruct</artifactId>\n  <version>1.7.7</version>\n  <classifier>jar-with-dependencies</classifier>\n</dependency>\n",
    "created_at": "2025-10-12T06:41:10Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7885"
  },
  {
    "id": 7884,
    "title": "【工具自荐】微信小程序：云文档查找工具",
    "content": "‘云文档查找工具’没有广告，只有高密度、高质量的云文档分享。\n\n✨【使用超简单】 只需打开微信小程序“云文档查找工具”，输入关键词，就能一秒找到心仪的文档。\n\n✨【内容平台丰富】涵盖飞书云文档、Notion、语雀、FlowUS、金山云文档、腾讯云文档等众多平台的公开云文档。\n\n✨【文档自发上传】用户可以自发上传自己喜欢的云文档供他人查看。",
    "created_at": "2025-10-12T05:36:22Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7884"
  },
  {
    "id": 7883,
    "title": "【开源自荐】Codes CLI - 管理多个 Claude Code 配置的命令行工具",
    "content": "**项目地址**：https://github.com/ourines/codes  \n**下载地址**：https://github.com/ourines/codes/releases\n\n**一句话介绍**  \n一个强大的 CLI 工具，用于管理多个 Claude API 配置（官方端点、代理或其他提供商），轻松切换并简化 AI 驱动的开发工作流。\n\n**核心功能**  \n- **多配置管理**：管理多个 Claude API 配置，支持官方 Anthropic、代理或其他提供商\n- **快速切换**：通过交互式选择器快速切换不同配置\n- **智能目录启动**：记住上次工作目录，支持项目别名快速访问\n- **环境导入**：自动检测并导入现有的 Claude 配置环境变量\n- **自动安装**：自动安装和更新 Claude CLI\n- **API 验证**：保存配置前测试 API 连通性\n- **跨平台支持**：支持 Linux、macOS 和 Windows（amd64 & arm64）\n\n**技术栈**  \nGo 1.21+，MIT 开源许可\n\n**适用场景**  \n- 需要在多个 Claude API 端点之间切换的开发者\n- 使用代理访问 Claude API 的用户\n- 管理多个 AI 项目配置的团队\n- 需要快速切换工作环境的开发者\n\n**快速开始**  \n```bash\n# 下载并安装\ncurl -L https://github.com/ourines/codes/releases/latest/download/codes-linux-amd64 -o codes\nchmod +x codes\n./codes install\n\n# 添加配置\ncodes add\n\n# 启动 Claude Code\ncodes\n```",
    "created_at": "2025-10-11T15:02:49Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7883"
  },
  {
    "id": 7882,
    "title": "中间件 PaaS 服务开发高级工程师 - 中国银联",
    "content": "## 中间件 PaaS 服务开发高级工程师 - 中国银联\n\n薪资范围：18000-20000\n\n### 工作地点\n上海浦东新区顾唐路1699号，中国银联股份有限公司\n\n### 岗位要求：\n1. 熟悉各类常见中间件产品、 微服务框架， 至少精通以下一个领域的技术，至少精通以下一个方向： 消息队列（如 Kafka、RocketMQ、RabbitMQ）、微服务治理（如 Spring Cloud、Dubbo、Istio）、Serverless 平台；\n2. 具有以下相关经验者优先： 开源中间件产品内核代码研究或开发、 微服务平台或引擎设计或研发；\n3. 精通Go语言开发，能设计基于GO语言的故障采集Agent，至少掌握Python/Shell一种脚本语言，熟练使用自动化运维工具；\n4. 熟练使用 linux 常见命令和工具，有基于 linux 开发的项目经验，同时具备Docker/Kubernetes容器化实战经验者优先考虑；\n5. 热爱技术， 对疑难技术问题有钻研精神， 具有较强的责任心、 沟通能力和执行力， 有良好的文档编写能力；\n\n### 任职资格：\n1、大学专科（ 含） 以上毕业， 计算机相关专业、 金融专业、 财会专业、 工商管理、理工类专业学历、 学位证书。\n2、大学专科 5 年（ 含） 以上相关工作经验； 或者大学本科 4 年（ 含） 以上相关工作经验； 或者硕士研究生 2 年（ 含） 以上相关工作经验； 或者博士生毕业。\n3、掌握多项计算机技能， 如开发语言、 数据库技术等， 具有熟练研发技能， 能完成程序设计、 功能设计， 具有一定的项目管理知识和协调技能。 具备较强的理解学习能力， 逻辑思维与沟通能力， 能快速适应项目， 适应高强度的工作； 具有良好的口头及书面沟通能力；具备较强的应用开发及项目实施经验。\n\n联系方式：张先生 2259854605@qq.com",
    "created_at": "2025-10-11T10:37:45Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7882"
  },
  {
    "id": 7881,
    "title": "云安全高级工程师 - 中国银联",
    "content": "## 云安全高级工程师 - 中国银联\n薪资范围：18K-22K\n\n### 工作地点\n上海浦东新区顾唐路1699号，中国银联股份有限公司\n\n### 岗位要求\n1、必须有腾讯云或腾讯专有云的运维经验，熟悉kaleido工具的使用；\n2、了解Underlay/Overlay以及虚拟网络等常用网络架构技术，了解k8s的部署和运维操作,了解容器化技术;\n3、熟悉主流安全产品如:WAF、IPS、IDS、HIDS等，熟悉主机安全、网络边界安全、web应用安全一项或多项技术基本原理、功能特点、应用场景等;\n4、熟悉腾讯云SOC平台，能够通过日志系统快速检索和分析流量报文；\n5、熟悉常见安全漏洞原理以及防御手段,比如Web渗透中，XSS攻击、SQL注入、CSRF、 XXE注入等；\n6、具有Python/Java等工具脚本的编写能力，能编写自动工具提升工作效率。\n\n### 任职资格：\n1、大学专科（含）以上毕业，计算机相关专业、金融专业、财会专业、工商管理、理工类专业学历、学位证书。\n2、大学专科5年（含）以上相关工作经验；或者大学本科4年（含）以上相关工作经验；或者硕士研究生2年（含）以上相关工作经验；或者博士生毕业。\n3、兼顾TCE运维（腾讯云运维）和安全运营。web漏洞原理，和云容器配置\n\n联系方式：张先生 2259854605@qq.com",
    "created_at": "2025-10-11T10:35:13Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7881"
  },
  {
    "id": 7880,
    "title": "【开源自荐】Summary Expressive – modern android AI summarizer",
    "content": "A modern, BYOK and FOSS android app to summarize videos(YouTube, BiliBili), articles, images and documents with AI/LLM.\n\nRepo: https://github.com/kid1412621/SummaryExpressive\n\nStack: pure Kotlin + Jetpack Compose + M3 Expressive + [Koog](https://koog.ai/)\n\nPreview:\n<div style=\"text-align: center;\">\n  <img src=\"https://github.com/kid1412621/SummaryExpressive/blob/538644c52392d4b46b604ae7c6eceda0be46c5a9/.github/screenshots/screen1.webp?raw=true\" alt=\"Screenshot 1\" width=\"32%\">\n  <img src=\"https://github.com/kid1412621/SummaryExpressive/blob/538644c52392d4b46b604ae7c6eceda0be46c5a9/.github/screenshots/screen2.webp?raw=true\" alt=\"Screenshot 2\" width=\"32%\">\n  <img src=\"https://github.com/kid1412621/SummaryExpressive/blob/538644c52392d4b46b604ae7c6eceda0be46c5a9/.github/screenshots/screen3.webp?raw=true\" alt=\"Screenshot 3\" width=\"32%\">\n</div>\n",
    "created_at": "2025-10-11T09:07:04Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7880"
  },
  {
    "id": 7879,
    "title": "【文章自荐】让开源版Nginx支持原生acme证书管理更加丝滑",
    "content": "博客文章：\nhttps://sconts.com/post/nginx-acme-portable-package/",
    "created_at": "2025-10-11T07:11:07Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7879"
  },
  {
    "id": 7878,
    "title": "【网站推荐】Git Stars - 发现趋势开源项目",
    "content": "Git Stars (https://git-stars.org/) \n是一个发现热门开源项目、探索编程语言并连接顶级开发者的优秀平台。它提供了强大的GitHub分析功能，对开源社区非常有帮助。建议将此类高质量项目推荐给更多用户。\n\n**Git Stars的亮点：**\n*   **发现热门项目：** 轻松找到 GitHub 上最受欢迎和具有最新活动的开源项目。\n*   **探索编程语言：** 按语言浏览项目，了解不同技术栈的趋势。\n*   **连接开发者：** 与开源生态系统中的顶尖开发者建立联系。\n*   **深入分析：** 提供强大的 GitHub 数据洞察，帮助用户更好地理解项目和社区。\n\n该网站收录了超过500颗星且自2024年1月1日以来有最新活动的开源项目，是开源爱好者和开发者不可多得的资源。",
    "created_at": "2025-10-11T06:47:44Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7878"
  },
  {
    "id": 7877,
    "title": "【工具自荐】Coloringbook AI – 一键生成创意涂色画的AI神器",
    "content": "**Coloringbook AI** 是一款智能 AI 创作工具，能够一键生成精美的涂色页、插画和创意艺术作品。  \n无论你是艺术创作者、教育工作者，还是想打造自己的涂色书品牌，Coloringbook AI 都能助你轻松实现！\n\n## 🎨 核心功能亮点：\n\n- **AI 自动生成涂色画**：输入提示词，即可生成独一无二的涂色页。  \n- **自定义风格与主题**：支持多种艺术风格与题材，如动物、幻想、自然、节日等。  \n- **批量生成与导出**：轻松制作整本涂色书，支持高分辨率下载。  \n- **商业友好**：生成作品可用于出版、教学或线上销售。  \n- **创意辅助**：AI 提供灵感建议，帮助你快速构思新主题。  \n\n## 🖍️ 适用人群：\n\n- **设计师与插画师**：快速生成灵感草图与商业插画。  \n- **教育工作者**：创建寓教于乐的涂色页内容。  \n- **自出版作者**：轻松打造属于自己的 AI 涂色书系列。  \n- **家长与儿童**：一起体验 AI 带来的创意乐趣！  \n\n[立即体验 Coloringbook AI](https://www.coloringbook.ai)\n",
    "created_at": "2025-10-11T03:06:38Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7877"
  },
  {
    "id": 7876,
    "title": "【网站推荐】开箱即用、低代码、全链路功能覆盖的在线大模型训练与微调服务平台",
    "content": "### 网站介绍\nLLaMA-Factory Online是与明星开源项目 LLaMA-Factory 官方合作打造的在线大模型训练与微调服务平台，底层提供高性能、高弹性GPU算力资源，为具有微调需求、编码与工程能力较为基础的用户群体，提供开箱即用、低代码、全链路功能覆盖的大模型训练与微调服务。它将微调流程重构为一个可视化、在线化、低代码的一站式云端服务，让团队能专注于业务或技术实现本身，无需困扰资源与配置问题，为开发提效。\n\n### 网站优势\n- 官方合作，背书可靠：与明星开源项目 LLaMA-Factory 官方合作出品，技术路线成熟，更新及时。\n- 低代码可视化，极简操作：提供友好易用的Web界面，一键调度云端GPU资源，即使没有技术背景也能快速上手微调。\n- 全链路支持，开箱即用：覆盖模型微调训练全流程，从数据上传、预处理、微调、监控到评估，一气呵成。\n- 灵活适配，应用场景广泛：无论是教育科研用户、个人开发者、技术爱好者还是初创团队，都可低门槛、低成本开启大模型定制实践。\n\n### 核心技术特性\n- 100+模型随心选择：涵盖LLaMA/Qwen/DeepSeek/GPT-OSS等主流大模型\n- 训练算法齐全：支持预训练、SFT、Reward Modeling、PPO/DPO/KTO等多种训练方式\n- 运算精度灵活：覆盖16bit全参数微调、冻结微调、LoRA微调和基于2/3/4/5/6/8bit的QLoRA微调\n- 优化算法先进：集成GaLore/Badam/ LoRA+/PiSSA/DORA/rsLoRA等前沿优化技术等\n- 实验监控完善：内置LlamaBoard/TensorBoard/Wandb/Mlflow/SwanLab等实时监控工具\n- 训练推理高效：采用FlashAttention-2/Unsloth等加速算子，支持 Transformers/vLLM推理引擎\n\n### 适用人群\n-  高校科研用户：免除复杂 GPU 配置和维护，克服校内计算资源紧张或性能不足的瓶颈，助力科研加速。\n- 个人开发者/技术爱好者：快速尝试并进行实验验证，降低大模型应用创新门槛和算力使用门槛。\n- 企业用户：零代码、免配置，大幅降低大模型应用落地的技术门槛和团队组建成本；高性能算力保障微调效率和效果。\n\n### 网站链接\n🔗[ llamafactory.online](https://www.llamafactory.com.cn/?utm_source=kjbz_ryf)\n\n### 网站截图\n<img width=\"1887\" height=\"896\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b367a321-b889-4187-ae81-626905be98ec\" />",
    "created_at": "2025-10-11T02:51:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7876"
  },
  {
    "id": 7875,
    "title": "【开源自荐】NCE-Flow —— 新概念英语在线点读（句子级点读 / 中英对照 / 零依赖静态站）",
    "content": "**网站地址**：https://nce.luzhenhua.cn  \n**开源地址**：https://github.com/luzhenhua/NCE-Flow  \n\n**一句话介绍**  \n一个专注“新概念英语 NCE1–NCE4”的在线点读工具，**点句即读、可连续播放**，支持 **EN / EN+CN / CN** 三态切换，前端纯静态，开箱即用。\n\n**核心亮点**  \n- **句子级点读 + 连续播放**：点击任一句，从该句开始自动高亮、连续播放，阅读跟随更顺畅。  \n- **三态语言视图**：英文、英中对照、中文三种视图一键切换并自动记忆偏好。  \n- **零依赖，易部署**：纯 **HTML/CSS/JS** 静态站，适合 GitHub Pages / Vercel / Cloudflare Pages 等平台一键托管。  \n- **LRC 双语兼容**：同时支持“同行英文|中文”或“同时间戳上下两行”两种字幕格式；附带脚本可把英文 LRC 批量转双语。  \n- **MIT 开源许可**：方便二次开发与自部署。  \n\n**适用场景**  \n英语自学者、老师备课和家长陪学，用浏览器直接打开即可使用；也支持自托管，导入自己的 LRC 与音频资源。   \n",
    "created_at": "2025-10-10T15:02:44Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7875"
  },
  {
    "id": 7874,
    "title": "【网站自荐】sora2video  sora2 veo3视频生成平台，免费一键去水印",
    "content": "地址：https://sora2video.us\n\n<img width=\"1305\" height=\"870\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8f23882d-d596-453c-8a0b-ec809ed4a57f\" />\n",
    "created_at": "2025-10-10T09:26:45Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7874"
  },
  {
    "id": 7873,
    "title": "【网站自荐】gosail.dev 面向中文开发者的「扬帆出海」实战手册：聚焦银行账户办理、全球收款与合规落地，提供经验证的路径与避坑建议。",
    "content": "为了解决中文开发者出海最头疼的收款和开户难题，我创建了一个开源实战手册V1.0，趁着假期完成了 **gosail.dev** 站点开发。\n\n\n这是一份保姆级指南，目标就是让大家少走弯路，先速通港卡，结合我的赴港办理经历，做到真实可信。\n\n\n承载这份指南的“扬帆出海”站点已完成上线，未来所有内容和更新，都将在这里沉淀。\n\n\n> 做出一个好产品，只是出海的第一步。\n\n\n一周前我发起一个开源项目：[awesome-developer-go-sail](https://github.com/geekjourneyx/awesome-developer-go-sail)\n\n\n为这个项目打造的专属站点「扬帆出海」，已经正式上线：https://gosail.dev\n\n\n网站上线的第一期核心内容，聚焦在出海第一步：**速通港卡**。\n\n\n欢迎大家关注后续站点的内容更新，一起共建这份出海必备指南，让产品真正扬帆远航。",
    "created_at": "2025-10-10T09:26:44Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7873"
  },
  {
    "id": 7872,
    "title": "【网站自荐】一个免费在线的 Markdown 转换器工具",
    "content": "## 背景介绍\n\n目前市面上将 Markdown 转成其他文件类型（word、pdf、HTML 等）的工具有很多，但几乎没有将其他文件类型转成 Markdown 的，现在几乎所有的大语言模型对 Markdown 的支持都非常好，原生输出 Markdown 格式，未来可能会有越来越多的文件类型需要转成 Markdown，所以我制作了 [Markdown Converter](https://tomd.io) 这个在线工具。\n\n## 产品简介\n\n[TO MD](https://tomd.io) 将 Word、PDF、表格、演示、网页、图片、音频、压缩包、代码、RSS 和网址转成结构化的 Markdown，秒级转换，无需注册，长期免费，注重隐私与安全。\n\n\n## 功能介绍\n\n* 支持 20+ 常见格式，包括 DOCX、PDF、CSV、XLSX、PPTX、HTML、JPG、PNG、MP3、ZIP、IPYNB、JSON、RSS 等。\n* 多种上传方式：拖放、粘贴、文件选择和输入网址。\n* 批量处理，最多可同时转换 20 个文件并打包下载。\n* 实时预览转换结果，支持单文件下载或批量导出。\n* 隐私优先：在云端处理但不作持久存储，传输加密，处理完成即删除。\n\n\n## 功能截图\n\n![TO MD Home](https://github.com/user-attachments/assets/e24b96ca-336a-4f40-81bf-c0f8fd5a9f5e)\n\n![TO MD Preview Source](https://github.com/user-attachments/assets/6831f030-2636-4524-a611-e6482e37b7c1)\n\n![TO MD Preview](https://github.com/user-attachments/assets/1857e80a-0f23-4b27-bc8d-32e5f4d8f175)\n\n![TO MD Preview CSV](https://github.com/user-attachments/assets/b07fd6f8-8439-4080-92ad-230054ac9b57)\n\n\n## 访问地址\n\n[TO MD](https://tomd.io)\n\n---\n\n欢迎有需要的朋友们访问使用，非常期待你的使用反馈~",
    "created_at": "2025-10-10T08:47:48Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7872"
  },
  {
    "id": 7871,
    "title": "【开源自荐】中国精英：关系图谱",
    "content": "一个实验性项目，基于LLMs 解析公共数据、并与官方来源交叉引用，自动绘制中国精英的关系网络。\n\n目前，项目主数据文件已拥有5000+节点、8000+关系，仍在不断更新中……\n\n网页：https://anonym-g.github.io/Chinese-Elite/\n\n仓库：https://github.com/anonym-g/Chinese-Elite\n\n<img width=\"2559\" height=\"1180\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/55fd70d5-07e5-45a8-8f92-3bc8b19a8d3f\" />\n<img width=\"2559\" height=\"1185\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/96d352a6-f0b8-4e84-af61-dd800dde20d6\" />\n<img width=\"2559\" height=\"1182\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fe70342b-3454-408b-9803-7c73255bf013\" />\n<img width=\"2559\" height=\"1182\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a53c2ccb-710f-450d-bb94-23c92e241d16\" />\n<img width=\"2559\" height=\"1183\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/754d829d-0bf8-45cf-bf62-8da9a2405aa5\" />",
    "created_at": "2025-10-10T08:20:39Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7871"
  },
  {
    "id": 7869,
    "title": "【文章自荐】关于破解加拿大航空飞机网络限制的一件小事",
    "content": "博客文章：[关于破解加拿大航空飞机网络限制的一件小事](https://ramsayleung.github.io/zh/post/2025/%E5%85%B3%E4%BA%8E%E7%A0%B4%E8%A7%A3%E5%8A%A0%E6%8B%BF%E5%A4%A7%E8%88%AA%E7%A9%BA%E9%A3%9E%E6%9C%BA%E7%BD%91%E7%BB%9C%E9%99%90%E5%88%B6%E7%9A%84%E4%B8%80%E4%BB%B6%E5%B0%8F%E4%BA%8B/)",
    "created_at": "2025-10-10T03:49:21Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7869"
  },
  {
    "id": 7868,
    "title": "【Website Recomendation】removegptwatermark.com：Free tool to detect and remove invisible Unicode watermarks from AI-generated text",
    "content": "I built a client-side tool that detects and removes 30+ types of invisible Unicode characters (zero-width spaces, joiners, em dashes) that AI systems like ChatGPT (Gemini, Claude) may use for watermarking text.\n\n• 100% client-side - your text never leaves your browser\n• Detects zero-width spaces (U+200B), joiners (U+200D), and other invisible markers\n• Real-time detection with character visualization\n• No registration, no tracking, completely free\n• Multi-language support (EN/DE/ES)\n\ntry it out:\nhttps://removegptwatermark.com/",
    "created_at": "2025-10-10T03:16:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7868"
  },
  {
    "id": 7867,
    "title": "# TransPocket - 专业音频转录工具",
    "content": "## 工具官网\n\n[TransPocket官网](https://transpocket.com)\n\n## 工具介绍\n\nTransPocket是一款专业的音频转录工具，支持MP3、M4A、WAV、AAC、FLAC、OGG、WMA、MP4、AMR、WebM、AIFF、CAF等多种音频格式的智能转录。它解决了用户\"如何将音频转换为文字\"和\"音频内容快速整理\"的需求。软件支持多种转录模型选择，包括Turbo快速模式和Large-v3高精度模式，支持多语言识别和说话人自动检测，是音频内容创作者、记者、学生和专业人士的必备转录工具。\n\n## 工具界面\n\n[Image]\n\n## 核心功能\n\n### 🎯 智能转录\n- **多格式支持** - 支持20+种音频格式，无需格式转换\n- **高精度识别** - 基于先进AI模型，转录准确率高达95%+\n- **多语言支持** - 支持中文、英文、日文、韩文等多种语言\n- **说话人识别** - 自动区分不同说话人，清晰标注对话内容\n\n### ⚡ 快速处理\n- **Turbo模式** - 超快速转录，适合大多数使用场景\n- **Large-v3模式** - 高精度转录，适合重要内容处理\n- **实时进度** - 显示转录进度，支持大文件处理\n- **批量处理** - 支持多文件同时转录\n\n### 📱 便捷操作\n- **拖拽上传** - 简单拖拽即可上传音频文件\n- **在线录制** - 支持浏览器内直接录制音频\n- **链接导入** - 支持从URL直接导入音频文件\n- **云端存储** - 自动保存转录结果，随时随地访问\n\n### 🔗 分享协作\n- **一键分享** - 生成永久分享链接，无需注册即可查看\n- **时间戳跳转** - 点击文字跳转到对应音频位置\n- **键盘快捷键** - 空格键播放/暂停，方向键快进/快退\n- **多格式导出** - 支持TXT、DOCX、PDF等多种导出格式\n\n<img width=\"537\" height=\"495\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a461c7dd-523e-4e14-b736-a9c3803c4abf\" />",
    "created_at": "2025-10-10T02:16:05Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7867"
  },
  {
    "id": 7866,
    "title": "【网站推荐】通过多图层2D场景或者3D体积着色器，快速了解显卡在不同渲染负载下的表现",
    "content": "项目介绍\n\n- 2D轻量级GPU测试：使用多层 Canvas 生成程序化风景，动态模拟昼夜、天气、风力和树木密度，对 2D 绘制与合成能力进行压力测试。系统每 60 帧统计 FPS 和帧时间，自动识别 GPU，并提供截图功能便于保存画面。\n- 3D体积着色器渲染：基于 WebGL 的曼德博集合光线行进测试，可调迭代次数、步长、分辨率与缩放，实时显示平均 FPS、帧时间、最小/最大帧率及显卡型号。支持一键导出 CSV、生成带参数的分享链接，并在检测到长时间低帧率时提示降档，适合做可重复的跨设备对比。\n- 实时数据面板：两个页面都带有可折叠的 GPU 统计浮层及控制面板，让你随时启停测试、查看核心指标。\n- 跨平台与浏览器：只要浏览器支持 WebGL，即可在 Windows、macOS、Linux 甚至移动端运行；页面文本还提供进阶调优、对比测试与稳定性分析指引。\n- 可分享、可追溯：导出结果、保留链接、记录驱动和浏览器版本，就能长期追踪驱动或系统更新带来的性能变化。\n\n使用方法：\n1，选择合适的预设（低性能设备建议从 Ultra Low 开始），点击开始或直接观看自动运转的场景，调节参数找到目标帧率；\n2，需要记录时可导出 CSV 或复制分享链接。\n\n\n项目地址\nhttps://volumeshaderbm.org\n\n截图\n\n<img width=\"1086\" height=\"630\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/98bb35ca-e89c-4bc8-973a-0f7e457fbff3\" />",
    "created_at": "2025-10-09T14:42:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7866"
  },
  {
    "id": 7865,
    "title": "【工具自荐】免费在线拼图工具",
    "content": "网址：\n[https://www.online-collage-maker.com](https://www.online-collage-maker.com)\n\n在浏览器里完成图片拼贴：拖拽添加与排布照片，自定义行列与间距，支持纯色/图片背景与九宫格相框；提供旋转、翻转、透明度与精确移动；支持高清导出、透明圆角 PNG 与自定义分辨率。\n\n **多网格模板库**\n- 覆盖 2–12 张照片布局，横竖比例可选\n- 不同张数一键切换，支持等比/不等比分割\n- 内置数字导航快速定位布局，支持键盘/点击切换\n- 拖拽放置，自动吸附与对齐\n\n<img width=\"1380\" height=\"968\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1df06e60-5811-4698-b58a-0142726139f4\" />\n\n\n\n**自定义网格行列**\n- 任意设置行数与列数，适配不同内容密度\n- 可调节间距、外边距与圆角，所见即所得\n\n<img width=\"1380\" height=\"968\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/670ce8b4-05c4-41ee-8237-bcd4f055533a\" />\n\n\n\n**背景与圆角导出**\n- 支持纯色、渐变与照片作为背景\n- 自定义上传背景图，灵活适配主题\n- 背景可选圆角或直角，风格统一\n- 导出透明圆角 PNG，边缘干净不锯齿\n\n<img width=\"1380\" height=\"968\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b99f50c-ce7a-407e-84e3-7b250bc61449\" />\n\n\n\n**细致的图片编辑**\n- 缩放、旋转、水平/垂直翻转一应俱全\n- 不透明度滑杆精调层次\n- 拖动移动支持缩略图预览全景，定位更准确\n- 重置与撤销/重做，放心试错\n\n<img width=\"1380\" height=\"968\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1bd09e1d-e525-45fe-8d46-90394e81235d\" />\n\n\n\n**九宫格相框与紧凑度**\n- PNG 九宫格相框，任意尺寸自适配\n- 自定义元素紧凑程度，获得更协调的留白\n- 图层顺序可控，适配不同风格\n- 支持导入自定义相框 PNG\n\n<img width=\"1380\" height=\"968\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bf4212ef-6c99-474b-b029-a41209bc3f38\" />",
    "created_at": "2025-10-09T13:23:12Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7865"
  },
  {
    "id": 7864,
    "title": "【工具自荐】浏览器插件 K8sBatchShell - 批量对Kubernetes Web页面中的多个Pod执行命令",
    "content": "功能描述：\n批量对Kubernetes Web页面中的多个Pod执行命令\n\n场景：\n有多个pod，需要批量执行命令，或者使用arthas工具进行批量watch等指令。快速对所打开的pod进行创建浮动窗体。然后发送要操作的命令。\n\n插件安装地址：\nhttps://chromewebstore.google.com/detail/k8sbatchshell/palklnibccoinbpambgggaheclbpjobl\n\n\n1. 设置，预设参数\n\n<img width=\"478\" height=\"430\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/84c4dc75-c1f8-4e9a-90ff-02bf5a290738\" />\n\n2. 批量执行命令\n\n<img width=\"1392\" height=\"622\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/46e46afc-cab6-40ee-807f-d5f57ba72a73\" />\n\n详细功能描述：\n\n* 插件设置\n1. 立刻创建shell\n  - 识别到当前网页中有k8s特定的控件则自动创建浮动窗体。\n2. 启用自动创建/禁用自动创建\n  - 加载网页的时候，识别到当前网页中有k8s特定的控件，则会自动创建浮动窗体。\n3. 默认指令\n  - 支持保存设置多个值，创建浮动窗体设置默认值。\n\n* 批量执行命令\n1. 快捷指令，ctrl+c，ctrl+l，exit，enter\n  - ctrl+c 强制取消，ctrl+l 清空屏幕 exit 退出arthas后再执行会退出shell\n2. 输入指令的大区域，textarea，点击发送，支持多行，批量发送\n3. 输入指令的小区域，input，点击右侧发送\n4. 右上角支持窗体最小化，还原窗体大小\n5. 整个浮动窗体支持动态调整窗体大小\n6. 在一个浮动窗体上执行命令，所有打开的pod的shell中都会执行。\n7. 发送指令增加窗口选择: 全部窗体,当前窗体,其他窗体.\n\n* 已验证的版本\nk8s Dashboard v2.7.0",
    "created_at": "2025-10-09T12:05:01Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7864"
  },
  {
    "id": 7863,
    "title": "【工具自荐】Abook - 自动生成书籍精华摘要的 AI 助手",
    "content": "📚 **Abook** 是一款由 AI 驱动的书籍摘要平台，专注于非小说类内容的快速学习与知识提炼。它提供超过 10,000 本书籍的精华摘要，支持文本、音频和播客等多种格式，旨在帮助用户高效获取核心知识。\n\n## 🔍 你会爱上 Abook 的理由：\n\n- **极速学习**：每本书籍的精华摘要仅需 15 分钟即可掌握核心内容。\n- **多种格式支持**：提供文本、音频和播客等多种格式，满足不同学习偏好。\n- **全面覆盖**：涵盖个人成长、商业、心理学、科学等多个领域的书籍摘要。\n- **高质量内容**：AI 技术与专家编辑相结合，确保摘要内容的准确性和实用性。\n\n## 🚀 适合人群：\n\n- **职场人士**：快速获取行业前沿知识，提升职业竞争力。\n- **学生与研究者**：高效获取学术领域的核心观点，辅助学习与研究。\n- **终身学习者**：随时随地获取知识，持续提升自我。\n\n🔗 [立即体验 Abook](https://www.abook.ai/)\n\n---\n\n💡 **Abook**，让学习更高效，让知识触手可及。\n",
    "created_at": "2025-10-09T09:47:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7863"
  },
  {
    "id": 7862,
    "title": "【工具自荐】Bookshelf - 自动生成书籍与文章精华摘要的AI助手",
    "content": "# 想要快速获取书籍精华？试试 **Bookshelf** ——你的知识速读助手！\n\n这款智能 AI 工具，让你轻松掌握书籍、文章和播客的核心内容，节省时间，提升学习效率。  \n无需再花费数小时阅读，现在就能快速吸收关键知识点！\n\n## 你会爱上 **Bookshelf** 的理由：\n- ✨ 精准提炼书籍、文章与播客核心观点  \n- ✨ 提供音频、PDF、EPUB 等多种格式，随时随地学习  \n- ✨ 创新的内容摘要和分析，让复杂知识变得易于理解  \n- ✨ 高效学习，无需浪费时间在冗长文本上  \n\n**Bookshelf** 非常适合学生、职场人士以及任何希望高效学习、提升知识储备的人！  \n\n[立即体验 Bookshelf](https://www.bookshelf.ai)\n",
    "created_at": "2025-10-09T09:45:37Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7862"
  },
  {
    "id": 7861,
    "title": "【工具自荐】Koke AI - 你的学术创作智能助手！",
    "content": "# 想要轻松完成高质量学术写作？试试 **Koke AI** ——你的学术创作智能助手！\n\n这款颠覆性的 AI 工具，让引用生成、论文大纲和内容创作变得前所未有的高效。  \n无需再浪费时间在繁琐的格式和资料整理上，现在就开始专注于你的研究吧！\n\n## 你会爱上 **Koke AI** 的理由：\n- ✨ 一键生成 APA、MLA、Chicago、IEEE 等多种学术引用  \n- ✨ 快速创建论文大纲，结构清晰，写作高效  \n- ✨ AI 写作助手帮你润色句子、扩展段落，提升论文质量  \n- ✨ 集中管理参考文献，轻松插入和更新引用  \n\n**Koke AI** 非常适合学生、研究者以及希望提升学术写作效率的内容创作者！  \n\n[立即试用 Koke AI](https://www.koke.ai)\n",
    "created_at": "2025-10-09T09:35:44Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7861"
  },
  {
    "id": 7860,
    "title": "【工具自推】B站视频生成思维导图浏览器插件",
    "content": "# Bilibili AI 助手插件\n\n一个基于 WXT + Vue 3 开发的 Bilibili 浏览器插件，提供视频内容 AI 分析、思维导图生成和智能问答功能。\n\n## 功能特性\n\n- 🤖 **AI 智能问答**：基于视频内容进行智能对话，解答您对视频的疑问\n- 🗺️ **思维导图生成**：自动分析视频内容并生成可视化思维导图\n- 📝 **视频总结**：一键获取视频内容的核心摘要\n- 🔍 **智能时间点跳转**：从问答内容直接跳转到视频对应时间点\n- 💾 **本地数据存储**：保存您的对话历史和设置\n\n[github](https://github.com/liangdiyuan/Bilibili-AI)\n\n[chromewebstore](https://chromewebstore.google.com/detail/bilibili-ai/jcklggahkmngcnfakpmadejmajobjjeg)\n\n<img width=\"3488\" height=\"3135\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6d3234fb-6e07-49eb-b097-b89e8c45378e\" />",
    "created_at": "2025-10-09T06:58:16Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7860"
  },
  {
    "id": 7859,
    "title": "【网站自荐】DegreeSymbol.app — 一键复制度数符号的工具°",
    "content": "# DegreeSymbol.app — 一键复制度数符号的神器 °\n\n在写温度、角度或数学公式时，你是不是经常遇到这种情况：  \n明明只是想打一个“°”，却找不到键盘上的按键？  \n\n别担心，**[DegreeSymbol.app](https://degreesymbol.app)** 就是为你准备的简单工具。  \n打开网页，点击一下按钮，就能复制度数符号 °，  \n再也不用到处复制粘贴或记复杂的快捷键了。\n\n---\n\n## ✨ 主要功能\n\n- 🔹 **一键复制**：点击即可复制度数符号“°”  \n- 🔹 **多种格式**：支持 HTML 实体、Unicode 编码、LaTeX 等多种写法  \n- 🔹 **跨设备兼容**：在手机、平板、电脑上都能轻松使用  \n- 🔹 **完全免费**：无广告、无登录、加载快  \n\n---\n\n## 💡 使用场景\n\n| 场景 | 示例 |\n|------|------|\n| 表示温度 | `37°C`、`-10°C` |\n| 表示角度 | `90°`、`180°` |\n| 数学与科学 | `45° angle`、`360° rotation` |\n\n不管你是写论文、写代码，还是发社交媒体动态，  \nDegreeSymbol.app 都能帮你快速搞定。\n\n---\n\n## 🧠 附加小知识\n\n- **HTML 写法：** `&deg;`  \n- **Unicode 编码：** `U+00B0`  \n- **LaTeX：** `^{\\circ}`  \n\n这些格式都能在网页、编程、或者排版中直接使用。  \n网站上也都帮你整理好了，一键复制更方便。\n\n---\n\n## 🌐 访问网站\n\n👉 [https://degreesymbol.app](https://degreesymbol.app)\n\n打开网页就能用，无需下载、无需注册。  \n收藏一下，以后想输入度数符号的时候再也不用纠结！\n\n---\n\n## ❤️ 小结\n\n**DegreeSymbol.app** 是一个小而精的网站，  \n解决了日常写作中一个常被忽略的小痛点。  \n简单、快速、实用，这就是它的全部。\n\n如果你经常要输入“°”这个符号，一定要去试试。",
    "created_at": "2025-10-08T13:12:50Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7859"
  },
  {
    "id": 7858,
    "title": "【开源自荐】一个零依赖, 多语言, 多币种, 多租户的 apple 退款管理助手",
    "content": "* 开源地址: [https://github.com/seth-shi/apple-refund-assistant](https://github.com/seth-shi/apple-refund-assistant)\n\n> readme 写了很多, 摘过来作为介绍\n\n****\n\n![GitHub Actions Workflow Status](https://img.shields.io/github/actions/workflow/status/seth-shi/apple-refund-assistant/laravel.yml)![Codecov](https://img.shields.io/codecov/c/github/seth-shi/apple-refund-assistant)![CodeRabbit Pull Request Reviews](https://img.shields.io/coderabbit/prs/github/seth-shi/apple-refund-assistant?utm_source=oss&utm_medium=github&utm_campaign=seth-shi%2Fapple-refund-assistant&labelColor=171717&color=FF570A&link=https%3A%2F%2Fcoderabbit.ai&label=CodeRabbit+Reviews)\n\n本服务构建于 Laravel / Filament 多租户架构之上，\n通过即时处理 Apple 的 CONSUMPTION_REQUEST 通知并异步回传消费数据，有效帮助开发者防范欺诈退款。\n\n- **多租户支持**\n- **多语言支持** (中文 / English / Español / हिन्दी / العربية / Português / Русский / 日本語 / Français)\n- **多币种支持**\n- **零依赖 File+SQLite** `or upgrade to Redis+MySQL`\n- **100% 测试覆盖率**\n- **应用密钥自持** 私钥仅保存在你的数据库`apps`表中(会进行对称加密,密钥由你的应用生成)\n- **12 个消费字段** - [计算所有必需的 Apple 字段](#消费字段策略)\n- **notification 消息转发** 苹果服务器发送到当前服务,当前服务转发到你的正式服务器\n\n\n## 在线演示\n\n🌐 **演示地址**: [https://apple-refund-assistant.shiguopeng.cn/](https://apple-refund-assistant.shiguopeng.cn/)\n\n> ⚠️ **注意**: 系统每30分钟会重置一次。\n\n \n## 截图\n\n<img width=\"1527\" height=\"1191\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b4043ee9-463a-4c6c-8bc9-2b5805eed11f\" />\n\n<img width=\"2506\" height=\"734\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5777b512-4c84-472f-99e7-27b8ef12bf55\" />\n\n<img width=\"2510\" height=\"1116\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7e814020-8d29-46e7-a2c4-bbbedd0e202e\" />\n\n<img width=\"2490\" height=\"1131\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/42a49a4c-9c8a-41ab-a000-750a42f1c2d6\" />\n\n<img width=\"2487\" height=\"1112\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/405b0415-a2b0-4283-9bba-07f71d7e5e68\" />\n\n## 快速开始\n### 使用已经构建好的镜像\n```bash\ndocker run -d \\\n  -p 8080:8080 \\\n  --name apple-refund-assistant \\\n  --restart=always \\\n  ghcr.io/seth-shi/apple-refund-assistant:latest\n```\n\n\n### 本地构建运行\n```bash\ngit clone https://github.com/seth-shi/apple-refund-assistant\ncd apple-refund-assistant\n## 构建镜像并部署\n./deploy.sh\n```\n\n### 如果需要挂载数据\n```\ntouch database.sqlite\ndocker run -d \\\n  -p 8080:8080 \\\n  -v $(pwd)/database.sqlite:/var/www/html/database/database.sqlite \\\n  --name apple-refund-assistant \\\n  --restart=always \\\n  ghcr.io/seth-shi/apple-refund-assistant:latest\n```\n\n## 消费字段策略\n* 文档地址: [https://developer.apple.com/documentation/appstoreserverapi/consumptionrequest](https://developer.apple.com/documentation/appstoreserverapi/consumptionrequest)\n* 策略代码: [ConsumptionService.php](./app/Services/ConsumptionService.php) \n* `users` 表字段可由其他系统更新\n\n| 字段                       | 描述                | 数据表来源                          | 计算规则                                                                                           |\n|--------------------------|-------------------|--------------------------------|------------------------------------------------------------------------------------------------|\n| accountTenure            | 用户注册天数            | `users.register_at`            | 当前时间减去注册时间                                                                                     |\n| appAccountToken          | 账号 token          | `users.app_account_token`      | [需要客户端创建订单时传递](https://developer.apple.com/documentation/StoreKit/Transaction/appAccountToken) |\n| consumptionStatus        | 消费状况              | `transactions.expiration_date` | 对比当前时间,如果已到期返回消费完                                                                              |\n| customerConsented        | 用户同意提供数据          | 无                              | 写死`true`                                                                                       |\n| deliveryStatus           | 是否成功交付了一个功能正常的内购。 | 无                              | 写死`0`(正常交付)                                                                                    |\n| lifetimeDollarsPurchased | 内购总金额             | `users.purchased_dollars`      | 根据苹果交易事件累加这个字段,你也可以自行累加                                                                        |\n| lifetimeDollarsRefunded  | 退款总金额             | `users.refunded_dollars`       | 根据苹果退款事件累加这个字段,你也可以自行累加                                                                        |\n| platform                 | 平台                | 无                              | 写死`1`(apple)                                                                                   |\n| playTime                 | 客户使用应用时间的值        | `users.play_seconds`           | 需要你的系统支持更新这个字段,否则是`0`                                                                          |\n| refundPreference         | 退款请求的期望结果         | `transactions.expiration_date` | 对比当前时间,如果已到期希望拒绝退款                                                                             |\n| sampleContentProvided    | 是否提供试用            | `apps.sample_content_provided` | 创建应用时配置应用                                                                                      |\n| userStatus               | 用户状态              | 无                              | 写死是`1`(正常用户)                                                                                   |\n\n## 未来计划\n- 有其它想法或对合作感兴趣？请在 GitHub 上提交 issue - 我们非常期待您的反馈！\n\n## 感谢\n* [Rates By Exchange Rate API](https://www.exchangerate-api.com)\n* [https://github.com/argus-sight/refund-swatter-lite](https://github.com/argus-sight/refund-swatter-lite)\n",
    "created_at": "2025-10-08T05:31:23Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7858"
  },
  {
    "id": 7857,
    "title": "【网站自荐】一个收集全球经典儿歌的网站-beddysongs",
    "content": "\n面向人群：0-8 岁孩子家长，想找优质儿歌做启蒙、陪孩子互动的家庭​。\n核心功能：收录全球经典儿歌，目前已收录中国、德国、法国、韩国、俄罗斯、意大利等国家经典儿歌，按年龄、类型、国家分类，适配不同成长阶段​。\n核心价值：拒绝口水歌，能磨耳朵、练互动，让听歌成为亲子陪伴与启蒙的轻松方式​。\n\n地址：https://beddysongs.com/zh\n\n截图：\n\n<img width=\"2478\" height=\"1886\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d0fa11db-5c68-47ac-bef9-7be6980bfccc\" />\n\n",
    "created_at": "2025-10-08T02:35:56Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7857"
  },
  {
    "id": 7856,
    "title": "【开源自荐】用于实时协作开发的 VSCode 拓展",
    "content": "https://github.com/kermanx/p2p-live-share\n\n![P2P Live Share](https://raw.githubusercontent.com/kermanx/p2p-live-share/main/assets/internal/social-preview.png)\n\n![Screenshot](https://raw.githubusercontent.com/kermanx/p2p-live-share/main/assets/internal/screenshot.png)\n\n### 特点\n\n- P2P 连接，无须登录账号，无须翻墙\n- 可在 [vscode.dev](https://vscode.dev) 使用\n\n### 功能\n\n- 多人协作实时编辑\n- 远程语言服务\n- 共享远程终端\n- 转发远程端口\n- 实时聊天",
    "created_at": "2025-10-08T02:20:27Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7856"
  },
  {
    "id": 7855,
    "title": "【网站自荐】Nereo：一站式多模型 AI 视频平台，30+ 模板即用，按条低价出片。",
    "content": "1. 产品是什么？\n[Nereo](https://www.nereo.io/) 是一个为营销人员和创作者设计的一站式多模型视频工作站。\n\n它存在的目的很简单：彻底解决当前 AI 视频制作中模型分散导致的混乱，以及制作成本过高的核心难题。\n\n官网地址：https://www.nereo.io/\n\n![Image](https://github.com/user-attachments/assets/3fd7c8f6-cc46-4cad-a3de-9c5d1826c46e)\n\n2. 核心功能和独特优势\n- 一站式多模型：聚合 Veo3 / Seedance / Hailuo 主力视频模型，内置 Nano Banana 图片编辑；一个平台完成“文→图片细修→视频”。\n- 100+ 视频模板：覆盖电商种草、测评对比、教程科普、App/游戏预告、UGC 爆款等，高速套用不费脑。\n- 价格真透明：按条计费\n  - Veo3：$0.36/条\n  - Seedance：$0.30/条\n\n<img width=\"1271\" height=\"847\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/647d3677-0305-437f-8cac-7e5c5b2bffb0\" />\n\n3. 适合谁用？\nNereo 适用于对视频内容产出有高频率、高效率要求的专业人士，包括：数字营销机构、电商团队和预算有限的活跃独立创作者。\n\n产品中视频模板效果：\nhttps://github.com/user-attachments/assets/f6c8aa11-541c-4e81-bc15-cc4201dcf628",
    "created_at": "2025-10-07T13:01:53Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7855"
  },
  {
    "id": 7854,
    "title": "【网站自荐】一键获取邮箱配置：支持 SMTP、IMAP、POP3、EAS\\EWS",
    "content": "我开发了一个小工具，可以 一键查询邮箱服务器配置。只需要输入邮箱地址，就能快速获取 SMTP 、IMAP 、POP3 、EAS 等常用配置参数。\n\n工具地址 👉 https://www.email4.fun/\n\n欢迎大家试用，也非常期待你们的反馈和建议，希望这个工具能帮到你！\n\n<img width=\"2006\" height=\"916\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e0a094c5-e602-4c61-8bcc-76b3562e97fe\" />",
    "created_at": "2025-10-07T12:11:43Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7854"
  },
  {
    "id": 7853,
    "title": "【网站自荐】工作性价比鉴定网站",
    "content": "一句话介绍：为打工人打造的职业价值探索工具，通过算法量化计算工作性价比，并获取多维度的分析结果。\n\n原理：它会通过标准化的数据模型，从工资性价比、财务健康度、工作生活平衡、发展空间、工作保障和环境舒适度这六个维度，为你全面地评估当前职业状态的真实性价比。\n\n产品链接：[wlb.feapp.cn](https://wlb.feapp.cn/)\n示例结果：[鉴定结果](https://wlb.feapp.cn/demo)",
    "created_at": "2025-10-07T09:15:08Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7853"
  },
  {
    "id": 7851,
    "title": "【网站自荐】：pease.day — Find Your Peace with Ease",
    "content": "网站名称：Pease\n网址：[https://pease.day/](https://pease.day/)\nSlogan：Find Your Peace with Ease\n\n简介：\nPease 是一个极简的环境音混音器（Ambient Sound Mixer），可以自由混合雨声、海浪、风声、咖啡厅、篝火、钢琴等 12 种自然声音，帮助你在工作、学习、冥想或睡眠时进入平静和专注的状态。\n\n特色亮点：\n\t•\t🎛️ 自由混音：支持多音源叠加与音量独立调节\n\t•\t💾 PWA 支持：安装后可离线使用\n\t•\t🎨 毛玻璃界面：深浅色主题自适应\n\t•\t⏱️ 定时功能：可设置播放时长\n\t•\t🔗 分享配置：可生成分享链接，传递你的专属混音\n\n<img width=\"2048\" height=\"1152\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4e787987-84ce-422a-a347-09041bd9bd63\" />",
    "created_at": "2025-10-06T10:21:11Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7851"
  },
  {
    "id": 7850,
    "title": "【Website Recomendation】Youcomic.org：AI-powered all-in-one comic creation platform | Oc-maker、manga translator",
    "content": "[YouComic.org](https://youcomic.org), an AI-powered all-in-one comic creation platform designed to make manga creation accessible to everyone.\nWith YouComic, users can generate characters, scenes, dialogues, and storyboards — no drawing skills required.\n\nOur vision is to make comic creation as easy as storytelling.\nFrom character design to scene composition, coloring, and translation, YouComic provides intelligent tools to support every step of the creative process.\n\nWhether you're a writer, artist, designer, or simply someone with a story to tell — YouComic empowers you to bring your imagination to life.",
    "created_at": "2025-10-06T06:47:14Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7850"
  },
  {
    "id": 7849,
    "title": "【开源自荐】Free-OKC 开源的OK Competer（含配套前端）",
    "content": "项目地址：https://github.com/kexinoh/free-OKC\n## Free-OKC项目简介\n开源自托管智能体工作流层，完整复刻 Moonshot AI「OK Computer」的系统指令与工具合约，让团队一键拥有兼容的多模态大脑。\n\n## 🚀 核心亮点：\n\n- 内置文件系统、代码执行、网络浏览等工具参考实现，并随包提供 FastAPI 控制台，即刻接入聊天与配置体验。\n- 包括网站自动化部署和PPT制作两个高频功能\n- 支持聊天补全、图像生成、文本转语音、音效合成与语音识别等多模态模型统一配置，凭证仅驻留后端更安心。\n- 覆盖自动化测试与简洁 Python API，帮助你在现有系统中稳定扩展智能体能力。\n\n欢迎 Star、体验并共建下一代智能体工作流！\n\n<img width=\"2893\" height=\"1921\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/12a9c62c-2b65-49aa-92cf-484f79648d2e\" />\n\n<img width=\"2965\" height=\"1873\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b99e0eac-c9af-4429-b472-267f8c85b608\" />",
    "created_at": "2025-10-05T04:20:02Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7849"
  },
  {
    "id": 7848,
    "title": "【网站自荐】：通义万相2.2和2.5模型图片,视频生成",
    "content": "<img width=\"1792\" height=\"998\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9a8fcce0-31c2-4127-95ee-f178bdea1390\" />\n\n# WanAnimate AI - 基于WAN 2.5/2.2的AI内容生成平台\n\n## 项目简介\nWanAnimate AI是一个基于Next.js 15构建的现代化AI内容生成平台，集成了最新的WAN 2.5和WAN 2.2 Animate模型，为用户提供高质量的AI内容生成服务。\n\n## 核心功能\n- **文本转图像**: 使用WAN 2.5模型从文本描述生成高质量图像\n- **图像转图像**: 基于WAN 2.5模型进行图像变换和增强\n- **文本转视频**: 利用WAN 2.5 Animate技术生成动态视频内容\n- **图像转视频**: 将静态图像转换为动态视频内容\n\n<img width=\"1792\" height=\"998\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6fda15c8-3bfc-45b5-896b-252ed6cba167\" />",
    "created_at": "2025-10-04T12:15:41Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7848"
  },
  {
    "id": 7847,
    "title": "【开源自荐】electron-async-storage - 功能完善的Electron存储方案",
    "content": "### 1. 省流\n`electron-async-storage` 是专为 `Electron` 应用打造的高性能异步存储库，基于成熟 `unstorage `库架构，让数据存储变得优雅 :zany_face: 而强大。\n\n### 2. 核心亮点\n  - 驱动化架构 - 一套API，多种存储后端随意切换\n  - 极致性能 - 内置批处理、队列优化，让你的应用飞起来\n  - 实时监听 - 文件变化实时感知，数据同步零延迟\n  - 类型安全 - 完整 `TypeScript` 支持，编译时就发现问题\n  - 智能序列化 - `Date`、`RegExp`、`Set`、`Map`等复杂对象完美保存\n  - 渐进迁移 - 版本化迁移系统，数据升级无忧\n\n### 3. 使用场景\n> 人话：想要存储复杂/高频数据，但不想引入数据库那一套繁琐的东西。\n  - 配置管理 - 应用设置持久化存储\n  - 缓存系统 - 高性能内存+磁盘缓存方案\n  - 日志系统 - 批量写入，性能爆表\n  - 用户数据 - 复杂对象存储，类型安全\n\n### 4. 预览API\n```typescript\n// 定义类型安全的存储模式\ninterface AppStorageSchema {\n  items: {\n    'user:profile': {\n      name: string\n      email: string\n      lastLogin: Date\n      preferences: Set<string>\n    }\n    'user:settings': {\n      theme: 'light' | 'dark' | 'auto'\n      language: string\n      notifications: boolean\n    }\n    'app:config': {\n      version: string\n      debug: boolean\n    }\n  }\n}\n\n// 创建类型安全的存储实例\nconst storage = createStorage<AppStorageSchema>()\n\n// ✅ 完全类型安全的操作\nawait storage.setItem('user:profile', {\n  name: '张三',\n  email: 'zhang@example.com',\n  lastLogin: new Date(),\n  preferences: new Set(['暗色模式', '消息通知'])\n})\n\n// ✅ 自动类型推导 + IntelliSense\nconst profile = await storage.getItem('user:profile')\n// 类型: { name: string; email: string; lastLogin: Date; preferences: Set<string> } | null\n\nconst theme = await storage.getItem('user:settings')\n// 类型: { theme: 'light' | 'dark' | 'auto'; language: string; notifications: boolean } | null\n\n// ❌ 编译时就能发现错误\nawait storage.setItem('invalid:key', data)        // 类型错误！\nawait storage.setItem('user:profile', 'string')   // 类型错误！\n\n```\n告别类型错误，拥抱编译时安全保障！ \n\n### 5. 对比 Electron Store\n#### 5.1 核心对比\n| 特性   | Electron Store | electron-async-storage     |\n|------|----------------|----------------------------|\n| 架构设计 | 单一JSON文件       | 多驱动架构，灵活扩展             |\n| 存储后端 | 仅文件系统          | 内存/文件/队列/自定义驱动          |\n| 性能优化 | 同步操作           | 异步+批处理+队列优化              |\n| 数据监听 | 基础监听           | 实时文件系统监听                |\n| 类型安全 | 基础TS支持         | 完整类型定义+条件类型            |\n| 复杂对象 | JSON限制         | Date/RegExp/Set/Map完美支持 |\n| 扩展能力 | 有限             | 插件化驱动系统                 |\n\n#### 5.2 性能对比\n下面举个不恰当的对比（具体写法参考文档）\n```\n// Electron Store: 每次写入都是磁盘IO\nfor (let i = 0; i < 1000; i++) {\n  store.set(`log-${i}`, data) // 1000次磁盘写入\n}\n\n// electron-async-storage: 智能批处理\nconst queueStorage = createStorage({\n  driver: queueDriver({\n    batchSize: 100,    // 100个操作合并成1次写入\n    flushInterval: 1000 // 1秒自动刷新\n  })\n})\n// 1000次操作 = 10次磁盘写入\n```\n\n#### 5.3 架构优势\n```\n// 一个应用，多种存储策略\nconst storage = createStorage()\n\n// 快速缓存用内存\nstorage.mount('cache', memoryDriver())\n\n// 重要配置用文件\nstorage.mount('config', fsDriver({ base: './config' }))\n\n// 大量日志用队列批处理\nstorage.mount('logs', queueDriver({\n  driver: fsDriver({ base: './logs' }),\n  batchSize: 1000\n}))\n\n// 数据自动路由到合适的存储后端\nawait storage.setItem('cache:user-session', data)  // → 内存\nawait storage.setItem('config:app-theme', theme)   // → 文件\nawait storage.setItem('logs:error', error)         // → 批量写入\n```\n\n\n### 6. 迁移建议\n从 Electron Store 升级？只需几行代码：\n\n```\n// 旧代码\nconst store = new Store()\nconst userData = store.get('user')\n\n// 新代码 - 更强大，更灵活\nconst storage = createStorage({\n  driver: fsDriver({ base: app.getPath('userData') })\n})\nconst userData = await storage.getItem('user')\n```\n\n### 7. 人话总结\n\n`Electron Store` 适合：简单配置存储，小型应用\n\n`SQLite3 + ORM` 适合：复杂关系型数据，需要SQL查询的大型应用\n\n`electron-async-storage` 适合：现代应用架构，需要高性能、类型安全、复杂数据存储，但又不想引入数据库复杂性的场景\n\n### 8. 写在最后\n仓库：https://github.com/YougLin-dev/electron-async-storage\n\n特别感谢：https://github.com/unjs/unstorage",
    "created_at": "2025-10-04T05:49:49Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7847"
  },
  {
    "id": 7846,
    "title": "【产品推荐】soradeo.com - AI视频生成全模型聚合平台（每日免费更新所有邀请码）",
    "content": "# 【产品推荐】soradeo.com - AI视频生成全模型聚合平台（每日免费更新所有邀请码）\n\n**soradeo.com** 是一个整合多个主流AI视频生成模型的统一创作平台，**每天免费更新所有可用的Sora 2邀请码**，解决了AI视频工具碎片化、邀请码难获取、prompt从零开始等痛点。\n\n## 核心亮点：\n\n1. **每日免费邀请码库**：每天实时追踪并公开**所有可用的**Sora 2、Google Veo 3官方邀请码，Discord/Reddit/Twitter/官方渠道全覆盖，完全免费获取，不再错过任何测试资格。\n\n2. **四大主流模型+工具集成**：\n   - **Sora 2** - OpenAI最新视频生成模型（物理准确+音频同步）\n   - **Veo 3** - Google DeepMind 4K级电影级视频生成\n   - **Nano Banana** - 轻量化快速生成工具\n   - **Wan Animate AI** - 专业动画生成引擎\n   \n   一个平台，全部模型和工具，无需多个订阅切换。\n\n3. **15+病毒式创作模板**：内置\"CCTV监控合集\"、\"动漫crossover\"、\"汽车广告\"、\"真人秀剧情\"等即用型模板，60积分即可生成视频，适配TikTok/YouTube Shorts等短视频平台。\n\n\n**阮一峰周刊专属**：使用折扣码（ruanyifeng)可免费获取**1000积分**（价值$10），**限额前100人**，总价值$1000积分大放送，先到先得。\n\n\n新增额外优惠券码： ruanyifengzhoukan，同样限额100人每人10美金1000积分\n\n<img width=\"2792\" height=\"1534\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1350e575-4428-4466-8ad0-af3aa5e8ab70\" />\n\n## 演示地址：\nhttps://soradeo.com\n\n---\n\n**适用场景：** 短视频创作、营销广告、独立电影、Meme制作、教育内容、社交媒体运营\n\n**备注：** 独立第三方平台，非OpenAI/Google官方产品",
    "created_at": "2025-10-04T03:00:08Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7846"
  },
  {
    "id": 7845,
    "title": "【网站自荐】：全国地铁 路线规划 + 线路图",
    "content": "官网: https://www.metroman.cn/\n\nMetroMan 地铁通覆盖中国 50+ 城市、300+ 线路、7000+ 站点，提供线路图、规划图、交互地图及城市排行榜。使用网页版路线规划，智能获取最佳换乘方案。\n\n换乘搜索页面\n<img width=\"979\" height=\"560\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/02a44394-d865-42c6-8f4b-c35d6f232ca4\" />\n\n换乘结果页面\n<img width=\"1024\" height=\"762\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cc556769-1587-4b86-89b4-91e3af717ba4\" />\n\n地铁线路图页面\n<img width=\"1021\" height=\"767\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e467a016-9ea7-4fe1-95dd-862f4cb522f8\" />\n\n排行榜页面\n<img width=\"1021\" height=\"753\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/80567ea3-3d82-4960-ab98-2d5eef332d3c\" />\n\n地铁城市列表页面\n<img width=\"1022\" height=\"724\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/daec9a05-ed53-406a-81b2-fe0b98d9a18a\" />\n\n城市线路列表页面\n<img width=\"1023\" height=\"762\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c92b5484-2bf0-4add-87aa-d997c72b60ac\" />\n\n城市选择页面\n<img width=\"1022\" height=\"771\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f2ee4bc7-4f55-45a6-be93-c93fb5f97e82\" />\n\n车站选择页面\n<img width=\"1024\" height=\"763\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/359dbe8f-7680-4c26-b259-c2c3c97426f7\" />\n\n主要功能：\n1. 路线规划：用户提供出发站和到达站，以及出发时间等条件，提供多条换乘路线，包含票价，时间，换乘次数，里程数等。\n2. 地铁信息：查看各城市的地铁线路，车站等信息\n3. 地铁图：查看各城市的地铁线路图，规划图等\n4. 排行榜：统计各地铁城市的运营里程，车站数量，线路数据，开通时间，进行综合排名。\n5. App：提供 iOS 和 Android 下载。",
    "created_at": "2025-10-04T01:37:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7845"
  },
  {
    "id": 7844,
    "title": "【工具自荐】SaveSora - 保存 Sora 视频 & 查看视频背后的提示词（prompt）",
    "content": "### 项目描述\n刷 Sora App 的时候，有时候会看到一些很不错的视频，但尴尬的是 App 并没有「下载」按钮。  **SaveSora** 就是为了解决这个问题——它能帮你 **一键保存视频**，还可以直接查看视频背后的 **提示词（prompt）**，既能收藏也能学习灵感。\n\n\n- 官网：https://savesora.com/\n\n### 功能特点\n\n- ⚡ 一键查看提示词、下载视频\n- 🧩 在线使用，无需下载插件、App\n\n![Preview Image](https://github.com/user-attachments/assets/da2727b4-6491-4864-8c83-ca3892194442)",
    "created_at": "2025-10-03T16:01:04Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7844"
  },
  {
    "id": 7843,
    "title": "【开源自荐】微舆 - 人人可用的多Agent舆情分析助手",
    "content": "项目地址：https://github.com/666ghj/Weibo_PublicOpinion_AnalysisSystem\n\n### “微舆”项目简介\n\n从0实现的多智能体系统：致力于打造简洁通用的舆情分析平台。帮助大家破除信息茧房，还原舆情原貌，预测未来走向，辅助决策。用户只需像聊天一样提出分析需求，智能体开始全自动分析国**内外30+主流社媒**与**数百万条大众评论**。不需要任何计算资源，人人可用，一键部署，轻松适配任何数据分析场景。\n\n项目主页展示了一个系统生成的研究报告，欢迎大家鉴别质量。报告链接：https://github.com/666ghj/Weibo_PublicOpinion_AnalysisSystem/blob/main/final_reports/final_report__20250827_131630.html\n\n### 项目亮点\n\n不仅仅体现在报告质量上，相比同类产品，我们拥有🚀五大优势：\n\n1. **AI驱动的全域监控**：AI爬虫集群7x24小时不间断作业，全面覆盖微博、小红书、抖音、快手等10+国内外关键社媒。不仅实时捕获热点内容，更能下钻至海量用户评论，让您听到最真实、最广泛的大众声音。\n\n2. **超越LLM的复合分析引擎**：我们不仅依赖设计的5类专业Agent，更融合了微调模型、统计模型等中间件。通过多模型协同工作，确保了分析结果的深度、准度与多维视角。\n\n3. **强大的多模态能力**：突破图文限制，能深度解析抖音、快手等短视频内容，并精准提取现代搜索引擎中的天气、日历、股票等结构化多模态信息卡片，让您全面掌握舆情动态。\n\n4. **Agent“论坛”协作机制**：为不同Agent赋予独特的工具集与思维模式，引入辩论主持人，通过“论坛”机制进行链式思维碰撞与辩论。这不仅避免了单一模型的思维局限与交流导致的同质化，更催生出更高质量的集体智能与决策支持。\n\n5. **各种数据分析场景轻松改造**：支持您将内部业务数据库与舆情数据无缝集成。打通数据壁垒，为垂直业务提供“外部趋势+内部洞察”的强大分析能力。\n\n### 项目运行截图与架构图\n\n<img width=\"1920\" height=\"957\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d3acf779-f0c0-4028-ad0d-424d841c3579\" />\n\n<img width=\"2076\" height=\"983\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3b18e654-d333-4fa0-8a95-4b521416ea1f\" />",
    "created_at": "2025-10-03T14:01:43Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7843"
  },
  {
    "id": 7842,
    "title": "【开源自荐】VibeDoc：您的随身AI产品经理与架构师，60-180 秒生成完整技术方案",
    "content": "阮老师您好，想自荐一个我独立开发的开源项目 **VibeDoc**，希望能被周刊收录 🙏\n\n- **项目地址**：[GitHub](https://github.com/JasonRobertDestiny/VibeDoc)  \n- **在线体验**：[ModelScope](https://modelscope.cn/studios/JasonRobert/Vibedocs)  \n- **演示视频**：[Bilibili](https://www.bilibili.com/video/BV1ieagzQEAC/)  \n\n---\n\n## 📝 项目简介\n\n**VibeDoc** 是一个 AI 驱动的开发方案生成器，能在 **60-180 秒**内把产品创意转化为千字级技术文档。\n\n**独特之处**：内置 **MCP 服务**（Model Context Protocol）支持，可通过外链 URL 自动获取技术文档和最佳实践，让 AI 基于真实技术资料生成方案。同时配备 **Prompt 优化器**，自动为每个功能模块生成高质量 AI 编程提示词（适配 Claude / ChatGPT / Copilot / Cursor）。\n\n---\n\n## ✨ 核心亮点\n\n- 🔗 **MCP 服务集成**：支持输入外链 URL（如技术文档、GitHub 项目），自动抓取内容并融入生成方案  \n- 🚀 **完整方案生成**：产品概述、技术架构、时间表、部署与推广策略  \n- 🤖 **内置 Prompt 优化器**：根据功能需求生成高质量提示词，直接可用于 AI 编程  \n- 📊 **图表自动绘制**：Mermaid 生成架构图、流程图、甘特图  \n- 📁 **文档导出**：目前支持 **Markdown** 格式  \n- ✅ **质量保证**：自动修复 Mermaid 语法、清理虚假链接、更新日期，成功率 >95%  \n\n---\n\n## 🔗 MCP 服务示例\n\n**输入创意**：\"开发一个在线协作文档编辑器\"  \n**参考链接**：`https://react.dev/learn` （React 官方文档）  \n\nVibeDoc 会通过 **MCP 服务**自动：  \n\n1. 抓取 React 官方文档的核心概念  \n2. 提取最佳实践和推荐架构  \n3. 将这些真实技术资料融入生成的开发方案  \n4. 确保技术选型和实现方案符合官方标准  \n\n> 💡 **支持的 MCP 服务**：  \n> - **Fetch MCP**：通用网页内容抓取  \n> - **DeepWiki MCP**：专门处理 deepwiki.org 技术文档  \n\n---\n\n## 📂 真实案例\n\n**输入创意**：*\"开发一款 AR 手语翻译应用\"*  \n**输出结果**：[完整开发计划](https://github.com/JasonRobertDestiny/VibeDoc/blob/master/HandVoice_Development_Plan.md)（约 10,00+ 字）  \n\n涵盖内容：  \n- 技术架构：React Native + TensorFlow + ARKit  \n- 6 个月开发时间表，3 大里程碑  \n- 系统架构图、流程图、甘特图  \n- **5+ 个可直接使用的 AI 编程提示词**  \n\n---\n\n## 🖼️ 项目截图\n\n| 输入创意（支持外链URL） | 方案生成 |\n| :---: | :---: |\n| ![](https://raw.githubusercontent.com/JasonRobertDestiny/VibeDoc/master/image/vibedoc.png) | ![](https://raw.githubusercontent.com/JasonRobertDestiny/VibeDoc/master/image/1.png) |\n\n<p align=\"center\">\n<strong>MCP服务</strong><br>\n<img src=\"https://raw.githubusercontent.com/JasonRobertDestiny/VibeDoc/master/image/2.png\" width=\"800\"/>\n</p>\n\n---\n\n## ⚙️ 技术栈\n\n- **AI 模型**：Qwen2.5-72B-Instruct（通义千问 72B）  \n- **前端**：Gradio 5.34.1  \n- **MCP 服务**：异步 MCP 客户端，支持 SSE 协议  \n- **导出工具**：python-docx、reportlab、Mermaid.js  \n\n---\n\n## 💡 开发初衷\n\n作为开发者，我们常遇到：  \n- ❌ 有创意，却不知如何规划技术方案  \n- ❌ 写技术文档耗时费力  \n- ❌ 想用 AI 编程，但不会写高质量提示词  \n- ❌ 需要参考官方文档，但手动整合太慢  \n\n**VibeDoc 一站式解决！** 通过 **MCP 服务**自动获取外部知识，让开发规划真正做到 **分钟级落地** 🚀  \n\n---\n\n🙏 感谢您抽空阅读，如果觉得有价值，期待能收录到周刊！  \n",
    "created_at": "2025-10-03T06:31:09Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7842"
  },
  {
    "id": 7841,
    "title": "【工具自荐】使用 Sora2 轻松生成「无水印」AI 视频",
    "content": "<img width=\"1398\" height=\"791\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7cdeb8c8-72fc-46aa-9ef3-89f5c04eceeb\" />\n\n> 只需一句话，让创意跃然屏幕，无水印、可商用、立即下载。\n\n## 🚀 创作者选择 Sora2ai.dev 的 5 大理由\n\n1. **默认无水印**\n\n   在 [Sora2AI.dev](https://sora2ai.dev) 生成的每支视频都不带任何品牌水印。想怎么发布就怎么发布，版权完全归你所有。\n\n2. **文本转视频黑科技**\n\n   • 一句话生成电影级画面。\n\n   • 通过自然语言控制物理、镜头与氛围。\n\n3. **4K 超分辨率**\n\n   一键升级至 4K UHD，高清无损，适配 YouTube、B 站、抖音等平台。\n\n4. **长镜头一致性**\n\n   角色、光影、运动轨迹始终如一，助你讲述完整故事。\n\n5. **云端极速渲染**\n\n   浏览器一键调用企业级 GPU。点击 **生成**，即可观赏 AI 魔法。\n\n## 🔑 关键功能速览\n\n| 功能                 | 价值                     |\n| -------------------- | ------------------------ |\n| 无水印导出           | 专业级输出，节省后期处理 |\n| 物理引擎仿真         | 拟真运动与交互           |\n| Adaptive Cameo™ 技术 | 精准植入 Logo 或角色     |\n| 高级提示词控制       | 场景与风格随心定制       |\n| 商业授权包含         | 可直接变现，无额外费用   |\n\n## 🌐 立即体验\n\n1. 打开 **[Sora2AI.dev](https://sora2ai.dev)**\n2. 免费注册，仅需 3 秒\n3. 输入你的第一个提示词，点击 **Generate**\n\n几分钟后，下载你的 **无水印** 作品，立即分享！\n\n\n### ✨ 适用场景\n\n• 短视频创作者追求爆款灵感\n\n• 独立导演快速预演镜头\n\n• 广告代理商急速交付项目\n\n• 教育工作者可视化复杂概念\n\nSora2 AI, 无水印 AI 视频, 文本转视频生成器, Sora2AI.dev, AI 视频创作, 去水印视频 AI, Sora2 视频生成\n\n",
    "created_at": "2025-10-02T17:27:53Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7841"
  },
  {
    "id": 7840,
    "title": "【工具自荐】批量生成 sora 2 的在线网站",
    "content": "从中午写到现在，一些杂七杂八的细节一直调来调去，终于 [videosora2.com](http://videosora2.com/) 上线了！\n\n对接的是sora 2 api，支持批量生成，选择 Sam 数字人来生成爆款视频，今天暂时限时提供一次免费生成机会，欢迎大家前来体验：\n\n地址：https://videosora2.com/\n\n   ![videosora2.com](https://cdn.videosora2.com/generated_videos/71595580-536c-4797-9476-b5c48c650eb8/cover.jpeg)",
    "created_at": "2025-10-02T13:55:13Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7840"
  },
  {
    "id": 7839,
    "title": "【开源自荐】：Google新书《Agentic Design Patterns》中文翻译版",
    "content": "\n我是一名 AI 技术爱好者，近期完成了《Agentic Design Patterns》一书的中文翻译项目，想向各位推荐这个开源项目。\n\n## 📚 项目介绍\n\n《Agentic Design Patterns》是一本系统介绍 AI Agent 系统设计模式的专业书籍。我将其翻译成中文，并部署为在线电子书，方便中文开发者学习和参考。\n\n**在线阅读地址：** [https://adp.xindoo.xyz/](https://adp.xindoo.xyz/)\n**GitHub 仓库：** [https://github.com/xindoo/agentic-design-patterns](https://github.com/xindoo/agentic-design-patterns)\n**电子书下载：** [https://github.com/xindoo/agentic-design-patterns/releases](https://github.com/xindoo/agentic-design-patterns/releases)\n\n## 🎯 内容亮点\n\n本书涵盖了 AI Agent 开发的完整知识体系：\n\n### 核心设计模式（21章）\n- **基础模式**：提示链、路由、并行化\n- **进阶模式**：反思、工具使用、规划、多智能体协作\n- **高级模式**：记忆管理、知识检索(RAG)、智能体间通信(A2A)\n- **实践模式**：MCP协议、异常处理、安全防护、评估监控\n- **推理技术**：思维链、思维树、ReAct等前沿技术\n\n### 丰富的附录内容\n- 高级提示技术\n- AI 智能体交互：从 GUI 到真实世界\n- 主流智能体框架概览（LangChain、LangGraph、Google ADK等）\n- 实战案例：构建编程智能体\n\n## 💡 项目特色\n\n1. **系统完整**：21个核心模式 + 7个附录章节，全面覆盖 AI Agent 开发\n2. **实战导向**：每章都包含详细的代码示例和实际应用场景\n3. **中文友好**：专业翻译，保持技术准确性的同时易于理解\n4. **在线阅读**：使用 GitHub Pages 部署，随时随地访问\n5. **持续更新**：开源项目，欢迎社区贡献和反馈\n\n## 🎓 适合人群\n\n- AI 应用开发者\n- 对 LLM 应用感兴趣的工程师\n- 想要了解 Agent 系统设计的架构师\n- AI 技术研究者和学习者\n\n## 🌟 为什么推荐\n\n1. **技术前沿**：AI Agent 是当下最热门的技术方向之一\n2. **实用价值**：提供可直接应用的设计模式和最佳实践\n3. **学习资源**：高质量的中文技术内容，填补市场空白\n4. **开源精神**：完全开源，鼓励学习和贡献\n\n## 📊 项目现状\n\n- ✅ 全部章节翻译完成\n- ✅ 在线版本已部署\n- ✅ 包含完整的示例代码和配图\n- ✅ 提供中英术语对照表\n- 🔄 持续优化翻译质量和排版效果\n\n如果您觉得这个项目对社区有价值，欢迎分享推荐。也非常期待大家的反馈和建议！\n\n再次感谢您的关注！\n",
    "created_at": "2025-10-02T11:29:16Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7839"
  },
  {
    "id": 7838,
    "title": "【开源自荐】awsui：日常維運必備的 AWS CLI TUI 工具",
    "content": "https://junminhong.github.io/awsui/\n\n<img width=\"2876\" height=\"1682\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1554c4d6-238d-4ff4-91aa-26b8684a7259\" />\n\n## 為什麼要做這個？\n\n在使用 AWS CLI 時，有時候會有很多個 profile 需要做切換，常常容易忘記 profile name 導致需要額外花時間去查詢\n\n於是乎我希望有一個工具可以同時整合 aws profile 管理和快速切換外，又可以直接在裡面下 AWS CLI 指令，另外也能夠直接呼叫 AWS Q 來做些事情或問問題\n\n## awsui 能做到什麼？\n\n基於 [Textual](https://github.com/Textualize/textual) 開發的 [awsui](https://github.com/junminhong/awsui)，這是一個完全免費且開源的 TUI 工具，提供：\n\n- 可以快速切換和管理 AWS profile\n- 支援直接下達 AWS CLI 指令，並且具有 autocomplete 特性，不需要在死背 AWS CLI 的指令了\n- 支援整合 AWS Q，不需要在切換 terminal 視窗\n\n有遇到任何問題或是想新增的功能，歡迎隨時跟我說，我會盡快進行開發和修正的\n\nGithub Repo：https://github.com/junminhong/awsui\n\n如果這工具對你來說有幫助，歡迎分享或給顆 ⭐️，這對我來說是一個很大的鼓勵",
    "created_at": "2025-10-01T03:08:14Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7838"
  },
  {
    "id": 7837,
    "title": "【网站自荐】标书制作网 biaoshuzhizuo.com - 专业标书制作标书代写服务|专业标书制作公司",
    "content": "**【网站一句话介绍】**  \n[标书制作网](https://biaoshuzhizuo.com/)提供专业标书代写与制作服务，10年经验团队支持工程、采购、服务类投标文件，首单立减500元。\n\n**【网站详情】**  \n- **【服务概述】** [https://biaoshuzhizuo.com/](https://biaoshuzhizuo.com/)  \n  - **功能**：代写工程、采购、服务类标书，包括技术标、商务标及资格审查文件。  \n  - **适用场景**：中小企业或个人应对政府采购、工程投标等项目。  \n\n- **【辅助工具】** [https://biaoshuzhizuo.com/tools/](https://biaoshuzhizuo.com/tools/)  \n  - **功能**：提供免费实用工具，提升投标效率。  \n  - **适用场景**：优化报价、管理时间、分析竞争。  \n  - **具体工具**：  \n    - **[标书格式检查工具](https://biaoshuzhizuo.com/tools/format-checker)**  \n      - **功能**：智能检查标书格式（如字体、页眉页脚），确保合规。  \n      - **使用方法**：上传文件或手动输入，1分钟获取结果。  \n    - **[招标评分标准分析工具](https://biaoshuzhizuo.com/tools/scoring-analyzer)**  \n      - **功能**：分析评分标准，找出高分项，优化投标策略。  \n      - **使用方法**：输入分值，5分钟生成优先级建议。  \n\n**【更多信息】**  \n- **提供方**：标书制作网，多年经验，服务众多客户，工作质量好，中标率高。  \n- **特点**：24小时急单、严格保密、首单优惠500元。  \n- **反馈渠道**：联系 [https://biaoshuzhizuo.com/#contact/](https://biaoshuzhizuo.com/#contact)  。  \n\n",
    "created_at": "2025-09-30T17:15:14Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7837"
  },
  {
    "id": 7836,
    "title": "【框架自荐】流程管理系统基础框架，快速搭建业务系统",
    "content": "####  项目名称：\nBPM + PPE(渐进式流程引擎)\n####  项目地址：\n  [https://bpm.kaseihaku.com](https://bpm.kaseihaku.com)\n####  项目介绍：\n该框架系统为本人根据多年各种业务系统的使用及开发经验总结提炼而来。   \n在业务系统领域深耕这么多年，遇到过各种系统设计缺陷，以及由这些由缺陷导致的，在二开/定制阶段的各种反人类设计，最终需要在运维阶段投入大量人力财力来弥补。完全失去了设计系统是为了解放生产力初衷。   \n该框架流程引擎部分为<br/>本人总结了多年 activity， flowable 等流程引擎的使用经验，提炼并自研的一款精巧灵活的流程引擎。   \n低代码部分    \n也是根据对市面上“拖拉拽” 形式 以及 前端代码生成 两种低代码方式的多年使用经验，结合自身对低代码的理解，重新设计了一套创新型的低代码实现方式，可以极大的减少工作量以及后期运维成本     \n该系统从初步构想打磨到目前可用状态历时 4 年之久，是不可多得的急速搭建业务系统的框架。\n####  框架主要特点\n当前市面上大多数低代码平台都以 “拖拉拽” 的形式配置表单作为卖点。\n基于个人经历，此种方式看似可以让非开发人员参与到表单设计，但实际使用中，很少会有非开发人员使用这些功能。\n除了一些超大型平台，例如: 淘宝，需要开放给商户更多的自定义功能，以实现页面展示差异化外；\n企业级应用，业务人员参与表单设计的概率微乎其微。\n另外 “拖拉拽” 模式相当于把一部分代码 “数据化”。这对 运维、版本管理、转产等操作提出了额外的要求，甚至反而增加人力成本，这与低代码节约人力成本的初衷相背离。\n秉承着代码即是文档，代码即是配置的理念！！！设计了 POJO 渲染引擎，可以直接根据后端 POJO 类来进行表单渲染。 \n\n|低代码实现方式|手工填写配置，导出为前端代码|“拖拉拽” 形式配置表单|POJO 渲染引擎（当前框架）|\n|:--|--:|:--:|:--:|\n|是否需要编译打包|是|否|否|\n|是否存在前端表单代码|是|否|否|\n|数据库中是否存在配置数据|否|是|否|\n|是否可以通过 Git 进行版本管理|是|否|是|\n|转产是否需要同步更新数据库数据|否|是|否|\n|表单配置工作量|较多，需要配置导出编译，可能还需对生成的代码进行调整|较少，只需配置即可|少，后端定义 POJO 是不可避免的工作量，所以基本没有增加任何工作量|\n|前后端字段校验|前端独立校验，如有修改需手动和后端同步|前端独立校验，如有修改需手动和后端同步|简单校验逻辑自动同步|",
    "created_at": "2025-09-30T15:40:06Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7836"
  },
  {
    "id": 7835,
    "title": "【自荐工具】“丝然接单” 微信小程序  - 免费无抽成接单平台",
    "content": "项目介绍：\n   基于自身被黑中介坑了之后，搭建的免费接单平台，旨在净化中介横行的 IT 接单市场，提供竞争平台，防止中介抽成过于嚣张。",
    "created_at": "2025-09-30T15:22:30Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7835"
  },
  {
    "id": 7834,
    "title": "[自荐工具] 免费Google Gemini Nano Banana AI创意图片视频自动化生成工具 - nanobananago.com",
    "content": "周刊的各位朋友们好。自荐我最近独立开发上线的一个免费AI创意工具：\n\n**网站地址：https://nanobananago.com/**\n\n\n#### 项目简介\n\n这是一个完全免费、无需注册、无广告的AIGC工具站。开发的初衷很简单：市面上很多AI工具要么收费，要么限制多，体验不佳。作为开发者，我相信好的技术应该更容易被大家接触和使用。\n\n这个项目基于 **Google最新的Gemini系列模型**，并集成了多种AI能力，旨在为用户提供一个强大且易用的创意平台。\n\n<img width=\"1724\" height=\"992\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a976f0d3-3163-4bde-b8a8-03cc18e4578e\" />\n\n#### 核心功能亮点\n\n1. **对话式图片编辑**：生成一张图片后，用户可以像聊天一样，通过自然语言指令持续修改图片，例如“把背景换成赛博朋克风格”或“给人物加上一副眼镜”。这解决了传统AI绘画“开盲盒”的问题，让创作过程更具可控性。\n2. **图片/文本生成视频**：\n   - **图生视频**：上传任意图片，可以将其转换为一段动态视频。\n   - **文生视频**：集成了 **Google Veo 3** 模型的能力，用户只需输入一段描述性文字，即可生成一段高质量的短视频。\n3. **200+ 丰富的图片变换效果**：除了自由创作，平台也提供了超过200种预设的图片风格和效果，覆盖动漫、艺术、设计、游戏等多个领域，可以一键使用。\n\n#### 技术栈与实现\n\n- **前端**：Next.js, Tailwind CSS\n- **核心模型**：主要基于 Google Gemini Nano / Pro。为了提升国内用户的访问体验，也支持用户配置云雾AI、OpenRouter等第三方API服务。用户的API Key存储在浏览器本地（LocalStorage），服务器不保存，保证安全。\n- **视频生成**：通过自动化工作流接入了Google Veo 3的能力。",
    "created_at": "2025-09-30T09:00:08Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7834"
  },
  {
    "id": 7833,
    "title": "【工具自荐】Claude Code Now: 世界上最快的 Claude Code 启动器",
    "content": "Claude Code Now 世界上最快的 Claude Code 启动器\n专为 MacOS 打造，极致简洁，拯救你那被浪费的人生。\n- 程序坞启动：丢到 Dock 栏，点一下就完事\n- 按住 Command 键，把 Claude Code Now .app 拖拽到 Finder 工具栏启动\n- 随处启动：把 App 放在任意文件夹，点就能用\n\n# 🖥 Claude Code Now\n\n\n**世界上最快的 Claude Code 启动器**\n\n让 Claude Code 启动更简单，专为 MacOS 打造。\n\n程序坞单击启动，或者在任何文件夹随时启动。\n\n## 🏆 效率对比\n\n| 启动方式 | 操作步骤 | 时间 |\n|---------|----------|------|\n| **原来** | 打开终端 → 选择文件夹 → 确认工作区 → 等待权限确认 | ~35秒 |\n| **现在** | 程序坞单击 | ~3秒 ✨ |\n\n一天启动 Claude Code 10次，就是宝贵的 5 分钟被浪费。\n\n## 🎯 为什么需要它？\n\n**Claude Code 不只是代码助手**，还能做数据分析、整理文件、处理文档。\n\nClaude Code 很好用，但启动麻烦：\n\n- 每次都要打开终端\n- 还要选择文件夹\n- 还要确认工作区信任\n- 还要等待权限确认\n\n**太麻烦了！**\n\n**用 Claude Code Now，立即提效 10 倍！**\n\n自动跳过权限确认，真正的一键启动。\n\n每天帮你节省 5 分钟，一年帮你节省 30 个小时。\n\n## ✨ 解决方案\n\n### 🖥 程序坞启动\n\n把应用放到程序坞，单击就能启动 Claude Code。\n\n### ⚡ Finder 工具栏启动\n\n把应用拖到 Finder 工具栏，在任意文件夹点击就能启动。\n\n### 📁 任意文件夹启动\n把 APP 放在任何文件夹里，点击图标上就能直接启动。\n\n就这么简单。\n\n## ⚡ 快速开始\n\n### 第一步：准备工作文件夹\n在 `文稿` 里创建 `Claude Code` 文件夹：\n\n```\n文稿/\n└── Claude Code/          # 创建这个文件夹\n```\n\n### 第二步：安装应用\n\n#### 方法一：直接下载（推荐）\n1. 下载 [最新版本](https://github.com/orange2ai/claude-code-now/releases)\n2. 拖拽 `Claude Code Now.app` 到 Applications 文件夹\n\n**🖥 程序坞安装：**\n\n3. 从 Applications 拖拽到程序坞\n4. 单击就能用！\n\n**⚡ Finder 工具栏安装：**\n\n5. 按住 `Command` 键，把 `Claude Code Now.app` 拖拽到 Finder 工具栏\n\n6. 点击工具栏图标，Claude Code 在当前目录启动\n\n#### 方法二：Git 下载\n\n```bash\ngit clone https://github.com/orange2ai/claude-code-now.git\ncp -r \"Claude Code Now.app\" /Applications/\n```\n\n#### 方法三：Homebrew\n\n```bash\nbrew tap orange2ai/claude-code-now\nbrew install claude-code-now\n```\n\n### 第三步：开始使用\n\n**🖥 程序坞方式：**\n1. **单击程序坞图标** - 自动在 `文稿/Claude Code` 文件夹启动\n2. **开始工作** - 数据分析、写代码、处理文档\n\n**⚡ Finder 工具栏方式：**\n1. **打开任意文件夹** - 在 Finder 中进入想要工作的目录\n2. **点击工具栏图标** - Claude Code 在当前目录启动\n3. **开始工作** - 直接在选定目录进行操作\n\n## 💡 设计理念\n\n**简单**：专注一个功能，做到极致。\n\n预测用户需求 → 找到核心功能 → 投入全部精力。\n\n结果：一键启动，极致简单。\n\n## 🔧 系统要求\n\n- **系统**：macOS 10.9+\n- **依赖**：已安装 [Claude Code CLI](https://docs.claude.com/en/docs/claude-code)\n- **文件夹**：在 `文稿` 中创建 `Claude Code` 文件夹\n\n## 📦 项目文件\n\n```\nClaude Code Now/\n├── 🖥 Claude Code Now.app        # 主应用\n├── claude-code-now.sh           # 启动脚本\n├── claude-code-now.rb           # Homebrew 安装\n└── 📚 说明文档\n```\n\n## 👨‍💼 关于作者\n\norange 制作，专注极简产品。\n\n理念：**预测 → 单点击穿 → All-in**\n\n---\n\n⭐ **好用就给个 Star！** [https://github.com/orange2ai/claude-code-now](https://github.com/orange2ai/claude-code-now)\n\n💬 **有问题？** [提交 Issue](https://github.com/orange2ai/claude-code-now/issues)\n\n🔗 **项目永久链接GitHub:** [https://github.com/orange2ai/claude-code-now](https://github.com/orange2ai/claude-code-now)",
    "created_at": "2025-09-30T06:27:29Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7833"
  },
  {
    "id": 7832,
    "title": "谁在招人？（2025年10月）",
    "content": "这里是免费的程序员招聘服务。\n\n如果你们团队正在招人，欢迎把招聘信息发在这个帖子里面。请简要描述，岗位名称、工作地点、岗位要求、团队简介、联系方式等等。\n\n## 发帖规则\n\n请遵守以下规则，违者（很可能）被拉黑。\n\n1. 不得发布与招聘无关的内容，且不得对公司或岗位进行评论或抱怨。\n\n2. 同一团队招聘多个岗位，请写在一起，不要分成多个部分张贴。\n\n3. 必须披露招聘公司的名称，禁止匿名招聘。\n\n4. 谢绝中介和猎头发帖。\n\n有意应聘的读者，请直接与发帖人联系。\n\n## 其他\n\n如果招聘广告想上周刊，请联系我（Email： yifeng.ruan@gmail.com ）。\n\n## 历史帖\n\n程序员的招聘往往长期有效，大家别忘了查看上月的岗位。\n\n- 2025年： [9月](https://github.com/ruanyf/weekly/issues/7674)，[8月](https://github.com/ruanyf/weekly/issues/7408)，[7月](https://github.com/ruanyf/weekly/issues/7169)，[6月](https://github.com/ruanyf/weekly/issues/6965)，[5月](https://github.com/ruanyf/weekly/issues/6771)，[4月](https://github.com/ruanyf/weekly/issues/6443)，[3月](https://github.com/ruanyf/weekly/issues/6189)，[2月](https://github.com/ruanyf/weekly/issues/6012)，[1月](https://github.com/ruanyf/weekly/issues/5830)\n- 2024年：[12月](https://github.com/ruanyf/weekly/issues/5610)，[11月](https://github.com/ruanyf/weekly/issues/5445)，[10月](https://github.com/ruanyf/weekly/issues/5253)，[9月](https://github.com/ruanyf/weekly/issues/5090)， [8月](https://github.com/ruanyf/weekly/issues/4911)，[7月](https://github.com/ruanyf/weekly/issues/4743)，[6月](https://github.com/ruanyf/weekly/issues/4550)，[5月](https://github.com/ruanyf/weekly/issues/4390)，[4月](https://github.com/ruanyf/weekly/issues/4204)，[3月](https://github.com/ruanyf/weekly/issues/4075)，[2月](https://github.com/ruanyf/weekly/issues/4002)，[1月](https://github.com/ruanyf/weekly/issues/3814)\n- 2023年：[12月](https://github.com/ruanyf/weekly/issues/3684)，[11月](https://github.com/ruanyf/weekly/issues/3599)，[10月](https://github.com/ruanyf/weekly/issues/3529)，[9月](https://github.com/ruanyf/weekly/issues/3425)，[8月](https://github.com/ruanyf/weekly/issues/3324)，[7月](https://github.com/ruanyf/weekly/issues/3222)，[6月](https://github.com/ruanyf/weekly/issues/3157)，[5月](https://github.com/ruanyf/weekly/issues/3091)，[4月](https://github.com/ruanyf/weekly/issues/3022)，[3月](https://github.com/ruanyf/weekly/issues/2960)，[1月～2月](https://github.com/ruanyf/weekly/issues/2827)\n- 2022年：[12月](https://github.com/ruanyf/weekly/issues/2771)，[11月](https://github.com/ruanyf/weekly/issues/2715)，[10月](https://github.com/ruanyf/weekly/issues/2666)，[9月](https://github.com/ruanyf/weekly/issues/2599)，[8月](https://github.com/ruanyf/weekly/issues/2542)，[7月](https://github.com/ruanyf/weekly/issues/2483)，[6月](https://github.com/ruanyf/weekly/issues/2426)，[5月](https://github.com/ruanyf/weekly/issues/2356)，[4月](https://github.com/ruanyf/weekly/issues/2309)，[3月](https://github.com/ruanyf/weekly/issues/2234)，[2月](https://github.com/ruanyf/weekly/issues/2188)，[1月](https://github.com/ruanyf/weekly/issues/2139)\n- 2021年：[12月](https://github.com/ruanyf/weekly/issues/2092)，[11月](https://github.com/ruanyf/weekly/issues/2032)，[10月](https://github.com/ruanyf/weekly/issues/1980)，[9月](https://github.com/ruanyf/weekly/issues/1913)，[8月](https://github.com/ruanyf/weekly/issues/1870)，[7月](https://github.com/ruanyf/weekly/issues/1826)，[6月](https://github.com/ruanyf/weekly/issues/1784)，[5月](https://github.com/ruanyf/weekly/issues/1747)，[4月](https://github.com/ruanyf/weekly/issues/1709)，[3月](https://github.com/ruanyf/weekly/issues/1652)，[2月](https://github.com/ruanyf/weekly/issues/1629)，[1月](https://github.com/ruanyf/weekly/issues/1580)\n- 2020年：[12月](https://github.com/ruanyf/weekly/issues/1520)，[11月](https://github.com/ruanyf/weekly/issues/1473)，[9月-10月](https://github.com/ruanyf/weekly/issues/1392)，[7月-8月](https://github.com/ruanyf/weekly/issues/1315)，[5月-6月](https://github.com/ruanyf/weekly/issues/1206)，[4月](https://github.com/ruanyf/weekly/issues/1148)，[3月](https://github.com/ruanyf/weekly/issues/1106)， [1月-2月](https://github.com/ruanyf/weekly/issues/983)\n- 2019年：[12月](https://github.com/ruanyf/weekly/issues/983)，[9月-11月](https://github.com/ruanyf/weekly/issues/798)，[8月](https://github.com/ruanyf/weekly/issues/692)",
    "created_at": "2025-09-30T05:42:00Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7832"
  },
  {
    "id": 7830,
    "title": "【网站自荐】：PixArmory - AI图片编辑的瑞士军刀",
    "content": "大家好，我最近做了一个小项目 [PixArmory](https://pixarmory.com/)，可以理解为「AI 图片编辑的瑞士军刀」。\n\n和传统的单一工具（比如只做去背景的 remove.bg）不同，PixArmory 把多种常用的 AI 图像处理功能集合在一个网页里：\n\t•\t一键去背景\n\t•\t图片增强、清晰化、放大\n\t•\t风格迁移（动漫、艺术、卡通等）\n\t•\t自定义 Prompt 来生成特殊效果\n\n它的定位是一个 轻量、全能的在线编辑器，不用安装软件，浏览器就能完成编辑，大多数处理在 10~30 秒内完成。支持免费试用3 次，不需要注册账号。\n\n技术上，前端用 Next.js + ShadCN UI，存储在 Cloudflare R2，支付用 Creem.io，核心的图像处理调用的是 Nano Banana API。\n\n欢迎大家试试，也非常期待反馈。\n👉 [PixArmory 官网](https://pixarmory.com/)",
    "created_at": "2025-09-30T03:18:47Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7830"
  }
]