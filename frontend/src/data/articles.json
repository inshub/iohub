[
  {
    "id": 7342,
    "title": "【工具自荐】imagetoexcel.app 从图片中提取表格数据",
    "content": "[imagetoexcel.app](https://imagetoexcel.app/) 一款自动从图片中提取表格数据的在线工具\n\n-  每天5份免费额度\n- 支持批量导入图片,可以导入到一个excel或多个excel中\n- 支持识别手写的表格和内容",
    "created_at": "2025-07-23T13:54:34Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7342"
  },
  {
    "id": 7341,
    "title": "【工具推荐】imagetoexcel.app 从图片中提取表格数据",
    "content": "[imagetoexcel.app](https://imagetoexcel.app/) 一款自动从图片中提取表格数据的在线工具\n\n-  每天5份免费额度\n- 支持批量导入图片,可以导入到一个excel或多个excel中\n- 支持识别手写的表格和内容",
    "created_at": "2025-07-23T13:52:03Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7341"
  },
  {
    "id": 7340,
    "title": "【开源自荐】在线的个人订阅管理系统",
    "content": "演示地址：https://sub.mwwlzz.top\n项目地址：https://github.com/huhusmang/Subscription-Management\n\n---\n\n一个在线的个人订阅管理系统，提供了一款现代化的订阅管理工具，帮助用户轻松管理和追踪各种订阅服务的费用及续订情况。\n\n**项目特性**：\n- 智能订阅管理：支持订阅服务的完整生命周期管理，包括添加、编辑、状态管理和批量导入。\n- 多币种支持：支持7种主要货币，实时更新汇率。\n- 费用分析报告：提供强大的数据分析与可视化功能。\n- 响应式设计：支持桌面和移动设备。\n- 本地优先：基于SQLite的本地数据存储保护隐私。\n- Docker部署：一键部署开箱即用。\n\n**核心功能**：\n- 订阅管理：增删改查服务。\n- 智能仪表盘：费用概览和到期提醒。\n- 分类统计：按类别和支付方式进行统计。\n- 搜索过滤：多维度搜索与状态过滤。\n- 自定义配置：支持自定义类别和支付方式。\n\n**高级功能**：\n- 自动续订处理：智能检测到期订阅并自动更新。\n- 数据导入导出：支持CSV和JSON格式。\n- 主题切换：支持浅色、深色及系统主题。\n- 支付记录追踪：完整的支付历史记录。",
    "created_at": "2025-07-23T12:40:53Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7340"
  },
  {
    "id": 7339,
    "title": "【开源自荐】开发者小工具集devutils",
    "content": "DevUtils 借助AI开发的基于 Web 的开发者工具集，目前已包含20+常用小工具，旨在简化常见的开发任务。所有工具都在浏览器中本地运行，无任何后端数据传输，确保隐私数据不会泄露。 \n\n体验地址：[https://devutils.xindoo.xyz/](https://devutils.xindoo.xyz/)\n\n项目主页：[https://github.com/xindoo/devutils](https://github.com/xindoo/devutils)  ",
    "created_at": "2025-07-23T08:17:34Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7339"
  },
  {
    "id": 7338,
    "title": "【工具自荐】How To Say - 助您对话中都能游刃有余，既不失风度，又能精准回应。温和时如春风化雨，机智时如妙语连珠，反击时如四两拨千斤",
    "content": "**工具名称：** [How To Say](https://howtosay.cc/)\n\n**工具地址：** https://howtosay.cc/\n\n**工具简介：**\n\n [How To Say](https://howtosay.cc/) 是一款基于 LLM 智能理解语意、语境，生成更多风格表述和优雅回复的工具。\n\n不同于传统翻译软件，How To Say 提供三种专业模式，让我们一次性看到同一句话在同一语言不同场景下的表达/回复（回怼）方式，以及不同语言文化中的表达/回复（回怼）方式。\n\n**[How To Say](https://howtosay.cc/) 主要特点：**\n\n1、无需注册登录，即来即用\n2、AI 智能理解，理解翻译地道不生硬，适应当地语言环境\n3、支持 500 字符+20 种语言，最多可选 6 种语言同时处理\n4、可收藏常用语言组合，快速切换使用\n5、隐私保障，不收集保存用户内容，本地存储可随时删除\n\n**三种模式：**\n\n1、表达模式：提供 9 种不同风格的地道表达，包含友好、正式、幽默、讽刺、暴躁等风格，优化自己的回复表达。\n2、翻译模式：准确的标准翻译，适合正式场合，可以当做随身多语言翻译助手。\n3、理解模式：分析语境（可以自定义语境），提供 3 种场景下的地道回复，友好->更友好，讽刺->高级反讽，谩骂->高级回怼。\n\n正所谓\"以柔克刚，以智胜力，以文化人\"。让你在任何对话中都能游刃有余，既不失风度，又能精准回应。温和时如春风化雨，机智时如妙语连珠，反击时如四两拨千斤。\n\n【理解模式】\n\n<img width=\"794\" height=\"1682\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2282a5f8-2317-4270-97a8-c6de3728d122\" />\n\n【表达模式】\n![Image](https://github.com/user-attachments/assets/28bbe2d5-c34c-4b77-b696-b7b8cc5f541b)\n\n【翻译模式】\n\n<img width=\"928\" height=\"1235\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3c373bfc-0d56-4ea4-b612-99a79a9265ab\" />",
    "created_at": "2025-07-23T07:28:05Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7338"
  },
  {
    "id": 7337,
    "title": "【工具推荐】 个人自用的Linux单文件脚本：防火墙-systemctl服务模版-端口转发-用户管理-screen命令简化",
    "content": "# 【工具推荐】 个人自用的Linux单文件脚本：防火墙-systemctl服务模版-端口转发-用户管理-screen命令简化\n\n## 防火墙\n通过修改iptables input链规则来放行传入端口与网段\n\n### CUI菜单界面\n```\n\"==================================================\"\n\"           iptables 防火墙管理 (黑名单模式)\"\n\"==================================================\"\n\" 1. 放行TCP/UDP端口\"\n\" 2. 取消放行端口\"\n\" 3. 放行IP网段\"\n\" 4. 取消放行IP网段\"\n\" 5. 查看当前规则\"\n\" 6. 保存规则并持久化\"\n\" 0. 退出\"\n\"==================================================\"\n```\n\n## systemctl服务模版\n只需要修改模版文件的内容并重命名，之后执行脚本，即可完成systemctl自启服务的创建\n\n## 端口转发\n快速创建socat端口转发服务，需要安装好socat\n\n### 运行方式\n`./port-forward.sh <本地端口> <远程地址> <远程端口>`\n\n## 用户管理\n快速创建，删除Linux用户\n\n### CUI菜单界面\n\n```\n\"=======================================\"\n\"      Linux 用户管理系统\"\n\"=======================================\"\n\"  1. 创建普通用户\"\n\"  2. 创建管理员用户\"\n\"  3. 修改用户密码\"\n\"  4. 列出所有用户\"\n\"  5. 删除用户\"\n\"  6. 退出\"\n=======================================\"\n```\n\n## screen命令简化\n用于简化screen会话操作\n```\n用法:\n  screen-tool.sh write <name> <command>  向名称为name的screen会话写入命令（不存在则创建）（自动添加换行符\\n）\n  screen-tool.sh read <name>             读取名称为name的screen会话当前所有输出\n  screen-tool.sh del <name>              关闭名称为name的screen会话\n  screen-tool.sh ls                      列出所有screen会话\n  screen-tool.sh [-h|--help]             显示此帮助信息\n\n示例:\n  screen-tool.sh write myterm \"ls -l\"\n  screen-tool.sh read myterm\n  screen-tool.sh del myterm\n```\n\n访问连接: https://github.com/hvhghv/se-script\n[点击此快速跳转](https://github.com/hvhghv/se-script)",
    "created_at": "2025-07-23T07:09:52Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7337"
  },
  {
    "id": 7336,
    "title": "【开源自荐】基于Rust构建的自托管电子邮件API",
    "content": "产品网址：https://rustmailer.com/\n\n开源项目地址： https://github.com/rustmailer/rustmailer\n\n文档地址： https://rustmailer.com/docs\n\n## 🎯 应用场景\nRustMailer可轻松集成到您的应用程序中，通过提供强大的自托管电子邮件同步和发送后端，帮助您节省开发时间并提升效率。\n\n典型应用场景和行业包括：\n\n- 需要多账户邮件同步的SaaS平台  \n- 带有自动化事务邮件发送功能的CRM系统  \n- 支持动态邮件模板的营销自动化工具  \n- 集成实时邮件通知的客户支持软件  \n- 需要可靠IMAP和SMTP处理的企业应用  \n- 管理订单确认和促销邮件的电商平台  \n- 通过Webhook跟踪邮件打开和点击的数据分析解决方案  \n- 需要安全可审计邮件工作流的金融科技和医疗系统  \n\nRustMailer让开发者无需从零构建复杂邮件基础设施，专注于核心业务逻辑。\n\n## ✨ 功能特性\n- 🌐 **现代化API** - 提供gRPC和OpenAPI接口，支持多版本API文档\n- 🚀 **高性能&低成本** - 采用Rust编写，内存占用低，无需Redis或外部依赖，极简生产部署成本\n- 📬 **多账户IMAP支持** - 基于UID的增量同步，支持文件夹选择、窗口化或日期范围同步\n- 📤 **SMTP发送** - 通过连接池管理外发邮件\n- 🧾 **邮件模板支持** - 支持事务性和营销邮件的动态模板\n- 📡 **灵活MTA集成** - 可通过账户专属SMTP服务器、自托管MTA服务或第三方提供商发送\n- 📈 **打开与点击追踪** - 内置邮件打开和链接点击追踪功能\n- 🔄 **Webhook与VRL** - 向外部系统发送Webhook载荷，并通过VRL脚本进行过滤转换\n- 🔌 **NATS集成** - 将实时事件推送至NATS，实现下游系统无缝对接\n- 🖥️ **Web界面&客户端** - 内置基于网页的邮件客户端和管理面板\n- 🔐 **OAuth2支持** - 内置带网页授权界面的OAuth2流程，自动管理访问令牌和刷新令牌\n- 🌍 **代理支持** - 在受限环境中为IMAP/SMTP/OAuth2连接提供代理支持\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/81f39485-5688-41ad-8ee7-70752f18ee31\" />\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05a1664a-6a39-4a38-af27-35cba1c32cfb\" />\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fd0a29df-b99b-43e1-a15f-91b3e41e7f19\" />\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/64511e18-c4c2-4de5-83cd-a2f8df8ef0b7\" />",
    "created_at": "2025-07-23T06:50:57Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7336"
  },
  {
    "id": 7335,
    "title": "【开源自荐】在微信群里做任务",
    "content": "使用微信小程序 Skyline 引擎 + 聊天工具 API 实现的微信任务管理，好友或群友无需另外注册登录，即可将任务分派给他们！\n\n介绍: https://docs.liubai.cc/article/2025/weixin-task.html\n\n开源地址: https://github.com/yenche123/liubai/tree/cool/liubai-frontends/liubai-weixin",
    "created_at": "2025-07-23T06:31:51Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7335"
  },
  {
    "id": 7334,
    "title": "【文章推荐】【深入浅出 React 19：AI 视角下的源码解析与进阶】开源电子书",
    "content": "自荐一本开源电子书: 【深入浅出 React 19：AI 视角下的源码解析与进阶】。\n\n它是一整套“React 19 源码解析指南”，不仅把 **Fiber、调度器、Hooks、事件系统、并发特性**等核心模块拆成了 5 章循序渐进地讲透，还结合了 AI 辅助阅读源码的新玩法，门槛比啃官方仓库低得多。读完能帮你：\n\n* 面试聊到 React 原理不再只会背 API，能直接讲到源码层实现。\n* 遇到性能或“玄学” Bug，能迅速定位到 Fiber 树、Lanes 优先级或 Commit 阶段哪一步出问题。\n* 真正理解 React 19 的编译器、服务端组件等新特性，提前布局技术选型。\n\n电子书链接: [【深入浅出 React 19：AI 视角下的源码解析与进阶】](https://blog.xiguadev.com/react-code/overview/interview)",
    "created_at": "2025-07-23T03:22:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7334"
  },
  {
    "id": 7333,
    "title": "【开源自荐】开源的临时邮箱(Temp Mail)服务",
    "content": "名称：开源的临时邮箱(Temp Mail)服务\n\n网站地址：https://tempmailto.online/\n\n开源代码：https://github.com/zhugezifang/Temporary-Email\n\n<img width=\"3406\" height=\"1796\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/203e5b12-62b2-4f3d-851f-284716cbc639\" />",
    "created_at": "2025-07-23T02:40:33Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7333"
  },
  {
    "id": 7332,
    "title": "【开源自荐】Dish AI Commit Message Gen — AI 驱动的 VSCode 扩展，自动生成标准化 Git/SVN 提交信息 & PR 摘要 & 周报",
    "content": "⸻\n\n📌 项目概览\n\nDish AI Commit Message Gen 是一个由 AI 驱动的 VSCode 扩展，旨在帮助开发者快速生成标准化、符合规范的 Git/SVN 提交信息，并支持分支命名、PR 摘要、代码审查、周报生成等功能。\n\n支持多平台 AI 服务（OpenAI、Ollama、智谱、DashScope、豆包 AI、Gemini、Deepseek、SiliconFlow、OpenRouter 等）与 19 种语言输出，使协作更高效、规范更一致  ￼。\n\n⸻\n\n🌐 链接资源\n\n- \tGitHub 仓库: [https://github.com/littleCareless/dish-ai-commit](https://github.com/littleCareless/dish-ai-commit)\n- \tVSCode 市场：“[Dish AI Commit Message Gen](https://marketplace.visualstudio.com/items?itemName=littleCareless.dish-ai-commit)” 扩展，已获得八百多名用户下载使用  ￼\n- \t快速开始指南 提供安装、AI 服务配置等完整流程  [文档](https://554659.me/dish-commit-docs/)\n\n⸻\n\n✨ 核心功能亮点\n\n- \t🤖 多平台 AI 支持\n    - 支持 OpenAI (GPT‑3.5/4)、Ollama 本地部署、GitHub Copilot、智谱 GLM‑4、DashScope 通义系列、Gemini AI、Deepseek、SiliconFlow、OpenRouter 等  ￼\n- \t📋 提交/分支/PR/周报全能覆盖\n    - \t自动生成 Conventional Commits 消息，支持 emoji、作用域自动推断、重大变更标记等  ￼ ￼\n    - \t分支名称智能命名，符合团队规范\n    - \tPR 摘要自动生成（标题+描述）\n    - \t周报生成，支持定制模板并选择 AI 提供商\n- \t🧠 智能代码理解\n    - 代码差异分析、语义索引（通过 tree‑sitter + Qdrant）、函数调用模式生成结构化信息，提升生成质量  ￼\n- \t⚙ 可选高级功能\n    - 流式生成提交、仅标题或正文选项、合并提交支持、实验性结构化函数调用、动态配置界面等  ￼ ￼\n\n⸻\n\n🛠 安装使用指南\n\t1.\t在 VSCode 插件市场或通过命令面板搜索 “Dish AI Commit” 安装  ￼\n\t2.\t打开设置，配置 AI 服务信息，例如 provider、model、API key 等  ￼\n\t3.\t在 SCM 面板点击 “Dish AI Commit” 图标，即可生成提交信息\n\t4.\t可使用命令面板调用：选择 AI 模型、生成提交消息、生成分支名、生成PR摘要、进行代码审查、生成周报等  ￼\n\n⸻\n\n💻 技术细节 & 版本支持\n\t•\t当前版本：v0.32.0\n\t•\t支持 Node ≥18.20.8、pnpm ≥10.x、VSCode ≥1.90\n\t•\t使用 TypeScript + npm scripts + CI/CD (GitHub Actions) 管理构建、测试、发布流程\n\n⸻\n\n💡 为什么值得尝试？\n\t•\t✍️ 提升效率与一致性：自动生成高质量提交信息，节省时间，提高团队协作效率\n\t•\t🌍 多语言 & 多 AI 支持：轻松满足国际化团队及隐私/本地部署需求\n\t•\t⚙️ 功能全面：从分支、提交、PR、代码审查到周报，覆盖整个开发流程\n\t•\t🧩 高度可定制：支持 emoji、模板、函数模式、语义索引等高级特性\n\n⸻\n\n🧭 使用步骤\n\n安装扩展\nVSCode 内搜索 \"Dish AI Commit Message Gen\" 并安装\n\n配置 AI 服务\n打开设置（Ctrl+,），搜索 dish-ai-commit：\n- dish-ai-commit.base.provider: 选择 AI 提供商，如 OpenAI\n- dish-ai-commit.base.model: 例如 gpt-3.5-turbo\n- dish-ai-commit.providers.openai.apiKey: 填写 OpenAI Key\n\n生成提交\n打开 Git/SVN 仓库，在 SCM 面板点击图标，AI 将生成规范提交消息\n\n\n⸻\n\n🤝 贡献指南\n\n欢迎通过以下方式参与项目发展：\n\t•\t⭐ Star & Fork\n\t•\t🐞 提交 Issues 和 PR\n\t•\t📚 改进文档或配置模板\n\t•\t🛠 提供功能建议或 Bug 修复\n（详见 README 中贡献章节） ￼ ￼ ￼ ￼\n\n⸻\n\n📦 致谢 & 持续更新\n\t•\t受 ai‑commit, svn‑scm, vscode-gitlens 等项目启发\n\t•\t采用 MIT 许可证开源\n\t•\t持续集成 CI/CD、持续发布到 VSCode Marketplace\n\n⸻\n\n🚀 立即尝试 Dish AI Commit Message Gen，让你的提交更规范、更高效！",
    "created_at": "2025-07-23T00:45:16Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7332"
  },
  {
    "id": 7331,
    "title": "[工具自荐] 一句话生成任务清单的 AI 工具 —— AI Todo",
    "content": "#### ✍️ 背景与痛点\n\n像很多程序员一样，我日常要兼顾工作任务、生活琐事、项目计划，时常感到事情多但漏掉的也不少。想用智能方式管理这些待办，但市面上的工具要么设计臃肿，要么 AI 能力很弱。\n于是我花了几周开发了 **AI Todo** [https://www.aitodo.art/](https://www.aitodo.art/)\n\n\n目标是: \n\n* 只关注待办本身，不捆绑笔记、文档、时间轴等多余功能\n* 使用 AI 把“随手输入”自动转换为结构化任务（包含分类、优先级、预期时间等）\n* 实时排序，帮你优先处理最关键的事\n\n#### 🧪 实操展示\n\n![aitodo.art](https://i.v2ex.co/6164d9afl.png)\n\n\n1. **粘贴/输入自由文本**\n\n   > “安排周六带家人去看烟花；月度报告梳理；组织团建。”\n\n2. **AI 识别并拆解成任务卡片**\n\n![aitodo.art](https://i.v2ex.co/kQ980N6fl.png)\n\n\n3. **智能排序 & 优先级调整**\n\n![aitodo.art](https://i.v2ex.co/25Z9z71ml.png)\n\n\n4. 可直接点击“完成”，同时自动更新统计\n\n#### 💡 为什么这样做\n\n* 我尽量剥离功能，只聚焦“AI 智能待办处理”，轻量简洁 ✅\n* 聚焦“文字输入 → 智能识别 → 排序输出”，形成闭环操作流\n\n\n### 🛠 技术栈 \n\n* 前后端：next.js 技术栈\n* 部署在 Vercel，HTTPS 免费托管，支持自定义输入语言（中英皆可）\n\n\n### 📌 附：功能截图 & 链接\n\n> 👉 网站体验入口 [https://www.aitodo.art/](https://www.aitodo.art/)\n\n[![AI Todo: Instantly Turn a Phrase into a Step-by-Step Task List - YouTube](https://i.ytimg.com/vi/3sedmp0gm0o/maxresdefault.jpg)](https://www.youtube.com/watch?v=3sedmp0gm0o&list=PLzqjNPUy6dgkt60h-GoS_yihx-MnCg8rW&index=2 \"AI Todo: Instantly Turn a Phrase into a Step-by-Step Task List - YouTube\")",
    "created_at": "2025-07-22T12:04:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7331"
  },
  {
    "id": 7330,
    "title": "【工具自荐】Short AI - 自动创作爆款AI短视频生成器",
    "content": "想要制作精彩内容却不想露脸？那就试试 [Short AI](https://www.short.ai) ——你的视频创作秘密武器！\n\n这款颠覆性的 AI 视频剪辑工具，让制作专业级的无脸视频（Faceless Videos）变得前所未有的轻松。\n无需再花费数小时剪辑，现在就开始创作更吸睛的内容吧！\n\n你会爱上 Short AI 的理由：\n✨ 再也不用折腾复杂的视频剪辑软件\n✨ 几分钟内就能生成高质量视频片段\n✨ 紧跟“无脸内容”潮流，轻松吸引更多粉丝\n\nShort AI 非常适合内容创作者、创业者以及希望提升效率、规模化视频制作的社交媒体运营者！\n赶紧来试试:https://www.short.ai\n",
    "created_at": "2025-07-22T08:13:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7330"
  },
  {
    "id": 7328,
    "title": "【开源自荐】hpack - 鸿蒙 HarmonyOS 内测签名打包分发工具",
    "content": "当前鸿蒙开发周边的开发工具还很少，鸿蒙目前的安装包分发比 iOS 还繁琐。希望这个工具能帮助到各位鸿蒙开发者，简化内测打包流程。\nGithub: https://github.com/iHongRen/hpack\n\n# 🚀 hpack - 鸿蒙 HarmonyOS 内测签名打包分发工具\n\n\n<div align=\"center\">  \n\n![Version](https://img.shields.io/badge/version-1.0.8-blue) ![License](https://img.shields.io/badge/License-Apache%202.0-green.svg)    \n\n[🌐 **官网**](https://ihongren.github.io/hpack.html)   •   [📋 **更新日志**](https://github.com/iHongRen/hpack/blob/main/CHANGELOG.md)   •   [📚 **deepwiki**](https://deepwiki.com/iHongRen/hpack)  \n\n</div>\n\n## 简介\n\n**[hpack](https://github.com/iHongRen/hpack)** `[h-pack]` 是一个专为鸿蒙 HarmonyOS 打造的内测分发工具，完成配置后，你只需一行命令，就能轻松完成鸿蒙应用的构建、签名，上传、分发、安装。\n\n\n\n## 功能特性\n\n- 📦 **打包签名**：自动打出所有的 `hap` 和 `hsp` 包，并对它们进行签名\n- 🎯**多 Product 支持**：如果配置了多目标产物，支持选择指定的 `product` 打包\n- 📝 **签名 manifest.json5**：读取应用打包数据，自动生成已签名 `manifest.json5` 文件\n- 🌐 **分发 index 页**：自动生成分发页，提供多种 HTML 模板，支持自定义模板\n- 📱 **二维码生成**：自动生成应用的二维码，方便内测人员快速下载和安装\n- ☁️ **OSS 上传**：支持将打包文件上传到阿里云 OSS，以及自定义上传\n- 📱 **显示设备**：显示正在连接的设备 `hpack targets`\n- 🆔 **查看UDID**：显示正在连接设备的 UDID `hpack -u`\n- ✍️ **签名工具**：支持对未签名的 `.app`、`.hap`、`.hsp` 和包目录签名\n- 💾 **命令安装**：支持通过命令安装已签名的 `.app`、`.hap` 和包目录\n\n\n\n## 安装使用\n\n### 快速安装\n\n```bash\npip install harmony-hpack\n```\n\n<details>\n<summary>🔥 国内镜像源安装（推荐）</summary>\n\n```bash\n# 清华源\npip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple harmony-hpack\n\n# 阿里源\npip install -i https://mirrors.aliyun.com/pypi/simple harmony-hpack\n\n# 腾讯源\npip install -i https://mirrors.cloud.tencent.com/pypi/simple harmony-hpack\n\n# 官方源\npip install -i https://pypi.org/simple harmony-hpack\n```\n\n</details>\n\n<details>\n<summary>🔨 其他操作</summary>\n\n```bash\n# 验证安装\nhpack -h\n\n# 升级\npip install --upgrade harmony-hpack\n\n# 卸载\npip uninstall harmony-hpack\n\n# 配置镜像源\npip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple\n```\n\n</details>\n\n### 准备工作\n\n> 💡 **重要提示**：在开始之前，建议先阅读鸿蒙官方文档 [HarmonyOS 应用内部测试](https://developer.huawei.com/consumer/cn/doc/app/agc-help-harmonyos-internaltest-0000001937800101#section042515172197)\n\n你需要准备以下三个证书文件：\n\n| 文件类型 | 格式 | 说明 |\n|---------|------|------|\n| 发布证书 | `.cer` | 由AGC颁发的数字证书，用于验证应用的身份和签名            |\n| 内部测试 Profile | `.p7b` | 包含了包名、数字证书信息、申请的权限列表、设备列表等信息 |\n| 公私钥文件 | `.p12` | 包含非对称加密中使用的公钥和私钥 |\n\n**官方内部测试流程：**\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/3.jpeg\" alt=\"HarmonyOS 内部测试流程\" style=\"max-width: 100%; height: auto;\">\n</div> \n\n\n\n### 环境要求\n\n| 工具 | 版本要求 | 说明 |\n|------|----------|------|\n| **hvigorw**、**hdc** (可选) | 最新版 | DevEco Studio 自带集成，可单独安装 |\n| **JDK** | 17+ | 签名工具依赖 |\n| **Python** | 3.10+ | hpack 运行环境 |\n\n**环境检查命令：**\n\n```bash\n# 检查各工具是否正确安装\njava --version          # 检查 JDK 版本\npython --version       # 检查 Python 版本\nhvigorw -v              # 检查 hvigorw（需配置环境变量）\nhdc -v                  # 检查 hdc（需配置环境变量）\n```\n\n> ⚠️ **注意**：`hvigorw` 和 `hdc` 是 DevEco-Studio 自带工具，在其他终端工具下使用，需要设置环境变量，详见下方 Tips 部分。\n\n\n\n## 快速开始\n\n### 1、初始化项目\n\n在**项目根目录**下执行初始化命令：\n\n```bash\nhpack init\n```\n\n初始化完成后，会生成 `hpack` 目录结构：\n\n```\nhpack/\n├── config.py      # 配置文件：服务器、应用信息和打包签名等\n├── Packfile.py    # 回调文件：打包完成后的自定义处理逻辑\n└── sign/          # 证书目录：存放签名证书文件\n```\n\n### 2、修改配置\n\n打开 `hpack/config.py` 文件，根据实际情况：\n<details>\n<summary>📝 修改配置信息</summary> \n\n```python\nclass Config: \n    # 安装包存放的服务器的域名 \n    DeployDomain = 'static.hpack.com'\n\n    # 安装包存放的服务器地址，必须是 https\n    BaseURL = f\"https://{DeployDomain}/hpack\"\n    \n    # 应用信息 \n    AppIcon = f\"{BaseURL}/AppIcon.png\"\n    AppName = 'hpack'\n    Badge = '鸿蒙版'\n    \n    # index模板选择, 可选值为 [default, simple, tech, cartoon, tradition, custom]\n    # 如果是 custom，则表示自定义模板，需要自己在 hpack 目录写一个 index.html，\n    # 打包完成后进行内容填充，再写入 hpack/build/{product} 目录\n    IndexTemplate = \"default\" \n    \n    # 打包签名配置 \n    Alias = 'your key alias'\n    KeyPwd = 'your key password'\n    KeystorePwd = 'your store password'\n    # 替换 hapck/sign 目录下的证书文件\n    SignDir = 'sign'\n    Cert = os.path.join(SignDir, 'release.cer') \n    Profile = os.path.join(SignDir, 'test_release.p7b')  \n    Keystore =  os.path.join(SignDir, 'harmony.p12')\n  \n    # 以下是 v1.0.1 新增自定义构建配置 ===================\n    # 从v1.0.0升级上来的，可自行加上\n    \n    # 设置默认打包 product\n    # 优先使用这个指定的 product。\n    # 不设置，则通过读 build-prodile.json5 获取，存在多个时，打包前会提示选择\n    Product = \"\"  \n    \n    # 编译模式，默认是 debug 模式，release 模式需要设置为False\n    Debug = True  \n    \n    # 用于完全自定义 hvigorw 构建命令，配置后 Product、Debug 无效\n    # hvigorw 使用 https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/ide-hvigor-commandline\n    # 使用示例：\n    # [\n    #    'hvigorw', 'assembleHap', 'assembleHsp', \n    #    '--mode', 'module', \n    #    '-p', 'product=default', \n    #    '-p', 'debuggable=true',\n    #    '--no-daemon'\n    # ]\n    HvigorwCommand = []\n```\n</details>\n\n\n\n**替换证书文件**\n\n将你的证书文件放入 `hpack/sign/` 目录：\n\n```\nsign/\n├── harmony.p12        # 公私钥文件\n├── release.cer        # 发布证书  \n└── test_release.p7b   # 内部测试Profile\n```\n\n\n\n### 3、开始打包\n\n执行打包命令，可选择性地添加更新说明：\n\n```bash\n# 完整命令\nhpack pack \"修复了一些已知问题，优化了性能\"\n\n# 简写形式\nhpack p \"更新说明\"\n```\n\n✅ **打包完成后**，所有文件将保存在 `hpack/build/{product}/` 目录下。  \n\n\n\n### 4、配置上传（可选）\n\n<details>\n<summary>☁️ 阿里云 OSS 上传配置</summary>\n\n**安装依赖：**\n​```bash\npip3 install oss2\n```\n\n**配置 OSS：**\n打开 `Packfile.py` 完成配置：\n\n​```python\nclass OSSConfig: \n    # OSS 配置信息\n    Access_key_id = 'your_access_key_id'\n    Access_key_secret = 'your_access_key_secret'\n    Endpoint = 'your_endpoint'\n    Bucket_name = 'your_bucket_name'\n    Bucket_dir = 'hpack'\n```\n\n</details>\n\n<details>\n<summary>⚒️ 自定义服务器上传</summary>\n\n如果使用其他服务器，需要在`didPack`中编写上传代码：\n\n```python\ndef didPack(packInfo):\n    \"\"\"打包后回调，通常在这里上传打包结果到服务器\"\"\"\n    # 打包结果在 hpack/build/{product}，编写你的上传逻辑\n    pass\n```\n\n</details>\n\n\n\n## 运行示例\n\n### 🚀 开始打包\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/0.png\" alt=\"开始打包\" style=\"max-width: 100%; height: auto;\">\n\n### 🎯 选择 Product (多目标产物情况)\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/2.png\" alt=\"选择Product\" style=\"max-width: 100%; height: auto;\">\n\n### ✅ 打包完成\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/1.png\" alt=\"打包完成\" style=\"max-width: 100%; height: auto;\">\n\n\n### 📱 扫码安装\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/install.png\" alt=\"扫码安装\" width=\"300\" style=\"max-width: 100%; height: auto;\">\n\n\n## 命令参考\n\n<details>\n<summary>📖 查看帮助</summary>\n\n```bash\nhpack -h  # 或 hpack help\n```\n\n**命令分类：**\n\n### 查看命令\n| 命令 | 说明 |\n|------|------|\n| `hpack -v, --version` | 显示版本信息 |\n| `hpack -h, --help` | 显示帮助信息 |\n| `hpack -u, --udid` | 显示设备的 UDID |\n| `hpack targets` | 显示连接的设备列表 |\n\n### 执行命令\n| 命令 | 说明 |\n|------|------|\n| `hpack init` | 初始化 hpack 目录并创建配置文件 |\n| `hpack pack, p [desc]` | 执行打包签名和上传，desc 为打包描述（可选） |\n| `hpack template, t [tname]` | 生成 index.html 模板文件 |\n\n</details>\n\n<details>\n<summary>📱 安装命令</summary>\n\n### 安装打包产物\n```bash\n# 安装指定 product 的产物\nhpack i -myproduct  # 注意加上横杠(-)\n```\n\n### 安装已签名包\n```bash\n# 安装 .app 文件\nhpack i ./xx.app\n\n# 安装 .hap 文件  \nhpack i ./xx.hap\n\n# 安装目录下所有包\nhpack i ./build/default\n```\n\n</details>\n\n<details>\n<summary>✍️ 签名命令</summary>\n\n### 基本语法\n```bash\nhpack sign,s <unsignedPath> <certPath>\n```\n\n### 使用示例\n```bash\n# 签名 .app 文件\nhpack s ./xx.app ./sign/cert.py\n\n# 签名 .hap 文件\nhpack s ./xx.hap ./sign/cert.py\n\n# 签名目录\nhpack s ./build/default ./sign/cert.py\n```\n\n### 证书目录结构\n```\nsign/\n├── cert.py          # 签名配置文件\n├── certFile.cer     # 证书文件\n├── keystore.p12     # 公私钥文件\n└── profile.p7b      # Profile 文件\n```\n\n### cert.py 配置示例\n```python\n# -*- coding: utf-8 -*-\nAlias = 'key alias' \nKeyPwd = 'key password' \nKeystorePwd = 'store password' \nCert = './certFile.cer'      # 相对于cert.py的路径\nProfile = './profile.p7b'    # 相对于cert.py的路径\nKeystore = './keystore.p12'  # 相对于cert.py的路径\n```\n\n</details>\n\n<br>\n\n## 模板预览\n\nhpack 提供多种内置分发页模板，满足不同风格的需求：\n\n```python\n# config.py 中配置模板\nIndexTemplate = \"default\"  # 可选值：[default, simple, tech, cartoon, tradition, custom]\n```\n\n| <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/default.png\" width=\"300\"> | <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/simple.png\" width=\"300\"> | <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/tech.png\" width=\"300\"> |\n| :----------------------------------------------------------: | :----------------------------------------------------------: | :----------------------------------------------------------: |\n|                       default 默认风格                       |                         simple 简单                          |                          tech 科技                           |\n\n| <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/cartoon.png\" width=\"300\"> | <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/tradition.png\" width=\"300\"> |\n| :----------------------------------------------------------: | :----------------------------------------------------------: |\n|                         cartoon 卡通                         |                        tradition 传统                        |\n\n\n\n## 自定义分发页\n\n#### 1、启用自定义模板\n修改 `config.py` 文件：\n```python\nIndexTemplate = 'custom'  # 启用自定义模板\n```\n\n#### 2、生成模板文件\n使用内置模板作为基础：\n```bash\n# 生成指定模板\nhpack template [tname]  # 简写：hpack t tech\n\n# 可选模板：default, simple, tech, cartoon, tradition\n# 不指定则默认使用 default 模板\n```\n\n> 💡 **提示**：命令会在 `hpack/` 目录下生成对应的 `index.html` 模板文件\n\n#### 3、配置模板处理\n在 `Packfile.py` 中启用自定义模板处理：\n\n```python\ndef customTemplateHtml(templateInfo):\n    packInfo = templateInfo[\"packInfo\"]\n    html = templateInfo[\"html\"]\n    date = datetime.now().strftime(\"%Y-%m-%d %H:%M\")\n    \n    # 填充模板变量\n    template = Template(html)\n    html_template = template.safe_substitute(\n        app_icon=Config.AppIcon,\n        title=Config.AppName,\n        badge=Config.Badge,\n        date=date,\n        version_name=packInfo[\"version_name\"],\n        version_code=packInfo[\"version_code\"],\n        size=packInfo[\"size\"],\n        desc=packInfo[\"desc\"],\n        manifest_url=packInfo[\"manifest_url\"],\n        qrcode=packInfo[\"qrcode\"]\n    )\n    print(html_template)  # ⚠️ 不可删除，用于传参\n\n# 调用处理函数\nif __name__ == \"__main__\":    \n    # ...省略的代码\n    elif args.t:\n        templateInfo = json.loads(sys.stdin.read())  \n        customTemplateHtml(templateInfo) \n```\n\n#### 4、执行打包\n```bash\nhpack p '自定义index.html'\n```\n\n\n\n## 📊 打包信息说明\n\n打包完成后，`PackFile.py` 中的 `didPack` 方法会接收到详细的打包信息：\n\n```python\ndef didPack(packInfo):\n    \"\"\"打包完成回调，通常在这里上传打包结果到服务器\"\"\"\n    print(json.dumps(packInfo, indent=4, ensure_ascii=False))\n```\n\n### 示例输出\n```json\n{\n    \"bundle_name\": \"com.cxy.hpack\",\n    \"version_code\": 1000000,\n    \"version_name\": \"1.0.0\",\n    \"size\": \"281KB\",\n    \"desc\": \"打包说明\",\n    \"build_dir\": \"hpack/build/default\",\n    \"remote_dir\": \"20250605200049\",\n    \"manifest_url\": \"https://服务器域名/hpack/20250605200049/manifest.json5\",\n    \"qrcode\": \"data:image/svg+xml;charset=utf-8,xxx...\",\n    \"index_url\": \"https://服务器域名/hpack/20250605200049/index.html\",\n    \"product\": \"default\",\n    \"willPack_output\": \"willPack中打包前传入的参数\"\n}\n```\n\n\n### 信息字段说明\n\n| 字段 | 类型 | 说明 |\n|------|------|------|\n| `bundle_name` | String | 应用包名 |\n| `version_code` | Number | 版本号 |\n| `version_name` | String | 版本名称 |\n| `size` | String | 包大小 |\n| `desc` | String | 打包说明 |\n| `build_dir` | String | 本地构建目录 |\n| `remote_dir` | String | 远程目录名（时间戳） |\n| `manifest_url` | String | manifest.json5 文件 URL |\n| `qrcode` | String | 二维码 base64 数据 |\n| `index_url` | String | 分发页面 URL |\n| `product` | String | 选择的 product |\n| `willPack_output` | String | 打包前传入的参数 |\n\n\n\n\n## 💡 Tips\n\n<details>\n<summary>🔧 环境配置</summary>\n\n### 配置环境变量\n在**非 DevEco-Studio** 终端中使用时需要配置：\n\n```bash\n# macOS\n# .zshrc 文件\nexport DEVECO_SDK_HOME=/Applications/DevEco-Studio.app/Contents/sdk\n\n# 验证配置\nhvigorw -v\n\n\n# Windows\n# 参考官方文档：https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/ide-hvigor-commandline\n```\n\n### Git 忽略配置\n在 `.gitignore` 文件中添加：\n```gitignore\n# 忽略 Python 临时文件\n__pycache__/\n```\n\n</details>\n\n<details>\n<summary>⚠️ 常见问题</summary>\n\n### 证书相关\n- **证书不一致**：如果已安装的 App 和准备安装的 App 打包证书不一致，需先卸载已安装的 App\n- **Profile 类型**：\n  - 使用**调试.p7b**：只能本地命令安装\n  - 使用**内部测试 Profile.p7b**：才能通过 **DeepLink** (链接) 形式安装\n\n### 网络相关\n- **联网校验**：安装时鸿蒙会进行联网校验，如果验证失败，尝试关闭代理\n- **错误码**：安装出错时会有提示，可根据 [错误码说明](https://developer.huawei.com/consumer/cn/doc/app/agc-help-internal-test-errorcode-0000002295325157) 查找原因\n\n</details>\n\n\n\n## 支持项目\n\n如果 hpack 对你有帮助，请考虑：\n- ⭐ 给项目点个 Star\n- 🔄 分享给更多开发者\n- 💬 在社区中推荐使用\n",
    "created_at": "2025-07-22T07:13:47Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7328"
  },
  {
    "id": 7324,
    "title": "【工具推荐】【开源】 TrackWeight  - 把 MacBook Pro 的 触摸板变成电子秤",
    "content": "https://github.com/KrishKrosh/TrackWeight\n\n和电子秤对比视频：\nhttps://x.com/KrishRShah/status/1947186835811193330?t=nVBgskvR8om71sBpSTTXIA&s=19",
    "created_at": "2025-07-22T02:33:26Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7324"
  },
  {
    "id": 7323,
    "title": "【工具自荐】英语情景说，小程序，真实场景英语口语练习通过真实生活场景对话，让英语口语练习更有趣、更实用！",
    "content": "\n<img width=\"3266\" height=\"1202\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/74e259a7-5cd4-4f90-8d0b-e8d135a723c4\" />\n\n<img width=\"828\" height=\"1600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/70a8cdc2-2477-47b4-af69-30b2f9f7f0fa\" />\n",
    "created_at": "2025-07-21T14:58:40Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7323"
  },
  {
    "id": 7322,
    "title": "【工具推荐】RealAddress - 在线生成全球真实地址，支持 24 个国家！",
    "content": "注册国外网站、填表、测试跨境电商平台，苦于没有真实地址可用？可以用 RealAddress ，即可一键生成全球多个国家的真实格式地址！\n\n✅ 支持国家包括：美国、加拿大、德国、法国、英国、澳大利亚等 24 个热门国家与地区\n✅ 地址格式真实，包含街道、城市、邮编、省份，适用于账号注册、系统测试、模拟下单等用途\n✅ 完全免费、无需登录、网页即用\n\n是开发者、测试人员、跨境卖家、海外电商用户的高效工具。所有地址生成基于真实地址模型，并严格遵循各国地址标准，让你无需担心格式不符或验证失败。\n\n访问： https://realaddress.remit.ee/\n\n",
    "created_at": "2025-07-21T10:14:48Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7322"
  },
  {
    "id": 7321,
    "title": "【工具推荐】whois 查询，基于开源项目搭建",
    "content": "用开源项目搭了个简洁的 WHOIS 查询站，支持常见域名，响应速度尚可，界面干净，无广告、无统计、不套娃。\n\n适合查域名归属、注册时间、到期信息等，查完就走，隐私友好，部署在欧洲小鸡上，纯粹自用顺手，也顺便分享出来。\n\n欢迎随便用。\n\n👉 https://whois.remit.ee",
    "created_at": "2025-07-21T10:13:35Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7321"
  },
  {
    "id": 7320,
    "title": "【文章自荐】大模型时代下个体的护城河",
    "content": "文章：[自己摸索](https://www.linsto.org/essays/bert-3/)\n\n核心观点：\n\n> AI 大模型不仅仅无情暴露了普通程序员的无能，对于沉浸其中的使用者，愈加剥夺了个体独立思考的几率。于是，大模型在飞跃，个体在沉沦。\n>\n> 解决之道，拥抱 AI，拥抱大模型，这是历史的潮流，于此之外，不要放弃独立思考，尤其要格外重视自学能力，重视自己的判断力，重视自己于无声处听惊雷的思考力，这，是我们为人一生最最核心的护城河。",
    "created_at": "2025-07-21T08:38:07Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7320"
  },
  {
    "id": 7319,
    "title": "【开源自荐】每天自动化AI占卜，生成趋吉避凶桌面摆件，支持 MCP，支持通过插件给出健康建议",
    "content": "<img width=\"2626\" height=\"1442\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/698ee904-de3b-4c24-b9d6-de076621d636\" />\n\n<img width=\"2826\" height=\"1916\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1ae6a148-cbd9-4973-ab19-7ce6c2c39faf\" />\n\n\n\nhttps://github.com/zhaoolee/cyber-fortune-telling\n\n\n以前来写过一次 issues，当时还没完成打磨开源， 被拒了，\n\n这次完全开源，并添加了更丰富的定制功能，支持 MCP, 希望入选周刊；\n\n项目使用 strapi 和 Next.js 驱动，有一个完整的cms后台，javascript + Node.js技术栈；\n\n一键docker私有化部署，适合重视隐私的用户。",
    "created_at": "2025-07-21T07:03:54Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7319"
  },
  {
    "id": 7318,
    "title": "【开源推荐】高效学习The Odin Project CSS练习",
    "content": "[css-exercises](https://github.com/TheOdinProject/css-exercises/tree/main)\n\n请按照以下步骤来有效利用这些练习：\n\n    1首先，Fork 并 Clone 这个代码仓库到你的本地电脑。这是开始所有工作的第一步。\n    2在浏览器中打开练习目录下的 HTML 文件，并仔细阅读 README 文件中的要求和自查清单。\n    3在 `index.html` 或 `style.css` 文件中编写代码，使你的页面效果与目标图片一致。\n    4完成练习后，再去查看官方解决方案进行对比。如果你的方法不同但同样有效，那完全没问题！\n\n<img width=\"1557\" height=\"988\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e8f8a57d-e879-4f63-b8cc-f4e223a2a736\" />",
    "created_at": "2025-07-21T06:37:35Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7318"
  },
  {
    "id": 7317,
    "title": "[开源自荐]PromptShelf:Prompt管理系统",
    "content": "每次写 AI 相关项目时，总是会以文件形式编写冗长的提示词，有时候甚至为了方便，直接嵌入到代码中，影响代码结构和可读性。在测试或者上线后，提示词又需要频繁调整来对比效果，导致需要经常更新代码来重新部署，极大影响开发效率，在大型项目中尤其如此。\n因此开发了一个提示词管理系统 [PromptShelf](https://github.com/newdee/prompt-shelf.git)，专门解决 AI 开发中的提示词热更新和版本控制问题！\n✨ 核心功能\n类 Git 版本控制：像管理代码一样管理提示词，支持提交历史、版本对比和回滚\n与代码分离：提示词独立存储，不再污染代码库\nAPI 集成：通过 RESTful 接口轻松集成到现有工作流\n权限管理：基于 JWT 的身份验证和角色控制\nDocker 一键部署：包含 MySQL 和 Dragonfly(Redis)的完整配置\n🚀 主要优势\n减少 80%的提示词调整相关部署工作\n保留完整的提示词迭代历史，便于效果对比\n支持团队协作，多人共同维护提示词库\n无需修改代码即可进行 A/B 测试",
    "created_at": "2025-07-21T04:02:54Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7317"
  },
  {
    "id": 7316,
    "title": "【工具自荐】怼怼侠 —— AI 助你优雅回怼阴阳怪气",
    "content": "产品名称：怼怼侠（duiduixia.com）\n\n产品介绍：\n怼怼侠是一款通过语言模型（LLM）生成优雅反击金句的小工具，主打「怼人不带脏话」。你只需输入对方说的话，怼怼侠会帮你生成一句不失礼貌、又能秒杀阴阳怪气的回怼金句。适用于职场同事、亲戚聚会、社交吐槽等各种场景。内置多种风格（毒舌律师、幽默、冷静理性等），每天更新，供你收藏、练手、爽快怼人。\n\n怼怼侠不仅是一个AI文字玩具，更希望帮人练就更冷静、更高情商的回怼能力。\n\n（duiduixia.com is a small AI-powered website that helps you generate witty, sarcastic, and classy comeback lines for daily social interactions — without profanity. Suitable for workplace, family gatherings, or any toxic conversation. Multiple styles supported.）\n\n访问地址：https://duiduixia.com\n\n<img width=\"1224\" height=\"833\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/56cd3d8d-05d9-42f0-8a86-18019513d569\" />",
    "created_at": "2025-07-21T03:53:42Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7316"
  },
  {
    "id": 7315,
    "title": "typo in issue 357",
    "content": null,
    "created_at": "2025-07-20T18:12:22Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/pull/7315"
  },
  {
    "id": 7314,
    "title": "【开源自荐】Prompt Manager - 高效管理和快速使用 AI Prompt 模板的 IDE 扩展",
    "content": "## 项目介绍\nPrompt Manager 是一个为Cursor/VSCode设计的AI Prompt模板管理扩展，帮助开发者高效管理和使用AI提示词，提升与AI助手的协作效率。\n\n开源项目地址：https://github.com/cursor-project/prompt-manager\n\n插件下载地址：https://marketplace.visualstudio.com/items?itemName=prompt-manager-dev.prompt-manager-for-ide\n\n## 核心功能\n\n- 📝 完整的Prompt生命周期管理 - 创建、编辑、删除、分类组织\n- 🔍 智能搜索 - 支持标题、内容、标签、分类的全文搜索\n- 📁 分层分类系统 - 灵活的分类管理，支持无限层级\n- 💾 数据导入导出 - JSON格式，支持备份和跨设备同步\n- 🔗 多编辑器集成 - 完美适配Cursor、VSCode等主流编辑器\n- 💬 Chat集成 - 一键发送Prompt到聊天界面\n\n## 使用截图\n\n<img width=\"1440\" height=\"940\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/176b9fb9-6142-47b3-a357-387fd2bc7da7\" />",
    "created_at": "2025-07-20T17:21:04Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7314"
  },
  {
    "id": 7313,
    "title": "【开源自荐】一个功能强大的 Rust OpenAPI 3.1 库，提供 OpenAPI 规范的解析、验证和请求处理功能。",
    "content": "大家好，我最近开源了一个项目：[openapi-rs](https://github.com/baerwang/openapi-rs)\n\n一个功能强大的 Rust OpenAPI 3.1 库，提供 OpenAPI 规范的解析、验证和请求处理功能。\n\n### 🚀 特性\n\n- **OpenAPI 3.1 支持**: 完整支持 OpenAPI 3.1 规范\n- **YAML 解析**: 支持从 YAML 格式解析 OpenAPI 文档\n- **请求验证**: 全面的 HTTP 请求验证，包括：\n    - 路径参数验证\n    - 查询参数验证\n    - 请求体验证\n\n更多功能和用法可以参考项目的 [README](https://github.com/baerwang/openapi-rs/blob/main/README-ZH.md)\n\n欢迎试用、Star 和提建议！",
    "created_at": "2025-07-20T15:05:16Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7313"
  },
  {
    "id": 7312,
    "title": "【开源自荐】整理自 2022年05月到目前为止官方公布的房价走势",
    "content": "国家统计局会每月发布上个月的全国 70 大中城市的房价指数，该指数包含：环比，同比，同期平均。\n\n但是，并没有一个整体的预览，所以借助 AI 简单写了个网站来定期收集数据，并做成趋势图来方便预览\n\n\n公众号文章: https://mp.weixin.qq.com/s/NGOb4884aEXGB8AkN7lPdw\n网站地址: https://how-to-buy-house.vercel.app \n项目开源地址：https://github.com/851235550/how-to-buy-house\n\n<img width=\"2650\" height=\"1704\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5705578b-af46-42b7-862b-9ea2967e0b8d\" />",
    "created_at": "2025-07-20T14:45:30Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7312"
  },
  {
    "id": 7311,
    "title": "【开源自荐】GeminiCLI 转 API服务，享1000次/日请求",
    "content": "## 项目地址\n\n[Gemini-CLI-2-API](https://github.com/justlovemaki/Gemini-CLI-2-API)\n\n## 项目简介\n一个将 Google Gemini CLI 封装为本地 API 的强大工具，并提供 OpenAI 兼容接口。\n\n## 核心功能\n1.解决了 Gemini 官方免费 API **额度紧张**的问题。通过本项目，您可以使用 Google的**账号授权**，享受更高的每日请求限额。\n2.提供了与 OpenAI API **完全兼容**的接口，让您现有的工具链和客户端（如 LobeChat, NextChat 等）可以**零成本**接入 Gemini2.5。\n3.通过强大的日志功能，可以捕获并记录所有请求的**提示词**，便于审计、调试和构建私有数据集。\n## 截图\n\n<img width=\"1098\" height=\"579\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/20cb1d81-9772-47d6-9482-af350e843b0a\" />\n\n## GeminiCLI官方对接口限制的说明\n\n<img width=\"913\" height=\"827\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9fd0c7b3-8d9b-49fd-82ae-f63604187569\" />",
    "created_at": "2025-07-20T11:36:16Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7311"
  },
  {
    "id": 7310,
    "title": "【工具自荐】AI Lrc Generator - AI识别音乐生成歌词文件",
    "content": "产品名称：AI LRC Generator\n\n产品介绍：AI LRC Generator是一款基于AI语音识别与自然语言处理技术，快速将音频自动转写并生成精准LRC字幕文件。高效、智能、跨场景支持，适用于K歌字幕、播客提词、教学转写等。释放你的创作力，从此告别手动对齐！（AI LRC Generator is the best online lrc generator and lyrics file maker. Instantly generate .lrc files, lyrics files, and lrc file downloads from your audio. Supports lrc file format, batch lrc download, and online lyrics maker for karaoke, podcasts, teaching, and more.）\n\n访问地址：[https://ailrcgenerator.com](https://ailrcgenerator.com)\n\n![ai lrc generator screenshot](https://github.com/user-attachments/assets/881366fa-f26e-428a-abad-c182bb038947)",
    "created_at": "2025-07-20T07:08:22Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7310"
  },
  {
    "id": 7309,
    "title": "【开源自荐】Apple Docs MCP - Apple 开发者文档 MCP服务",
    "content": "Apple 开发者文档 MCP 服务器 - 通过模型上下文协议访问 Apple 官方开发文档、框架、API、SwiftUI、UIKit 和 WWDC 视频。使用 AI 自然语言查询搜索 iOS、macOS、watchOS、tvOS 和 visionOS 文档。在 Claude、Cursor 或任何兼容 MCP 的 AI 助手中即时获取 Swift/Objective-C 代码示例、API 参考和技术指南。\n\nhttps://github.com/kimsungwhee/apple-docs-mcp",
    "created_at": "2025-07-20T03:58:11Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7309"
  },
  {
    "id": 7308,
    "title": "【工具自荐】网页访问时辅助觉察的Chrome插件",
    "content": "### 工具名称 \nAwareMe Chrome浏览器插件\n\n### 插件地址\nChrome: https://chromewebstore.google.com/detail/awareme/akbnblfgnljahpgnamdghnicmkkagjjk\n\nGitHub：https://github.com/leonezhu/AwareMe\n\n### 插件简介\n经常不经意或者过度访问一些网站，但当时是没有觉察到的。通过这个插件工具可以使用简单的配置，当你访问配置的网站时候弹窗提醒下自己。\n支持的策略有：每次访问提醒、访问时长超时时提醒、一周访问天数达标后提醒。\n\n\n### 插件页面截图\n\n<img width=\"2862\" height=\"1478\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/883510b0-e03c-43ce-939f-62612dfa3a9b\" />\n\n \n<img width=\"2868\" height=\"1470\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/91d441c8-a958-428b-98ce-5bc55f02a760\" />",
    "created_at": "2025-07-19T13:37:49Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7308"
  },
  {
    "id": 7307,
    "title": "【工具自荐】美股财报网站，帮助价值投资者快速分析美股财报",
    "content": "网站地址：https://ch2report.com/\n\n开发者故事：[离职后，我的第一个出海产品上线了](https://zhuanlan.zhihu.com/p/1919858045250434904)\n\n简介：这是一款美股财报分析、翻译、聊天应用\n\n## ✨核心特性\n- [x] 免费浏览下载所有财务报告\n- [x] 涵盖 5151 家美股上市公司，收录近 10 年超 13 万份财务报告\n- [x] 基于大模型，根据您的问题智能检索财报原文，确保回答准确性\n- [x] 内置引用功能，将回答与财报对应的页面相链接，无需逐页翻找\n- [x] 自动提取关键财务指标，生成专业摘要报告和直观思维导图，让复杂财报一目了然\n- [x] 支持多种语言，您可以使用任意语言进行交流，并将财报翻译成您想要的语言\n- [x] 将对话、摘要、思维导图保存为 PNG 或 HTML，下载财报进行离线分析和分享\n\n产品图 ✅\n\n![Image](https://github.com/user-attachments/assets/8fc6e711-7542-491c-b948-35add307023a)\n\n<img width=\"4380\" height=\"2460\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8a14eff6-9086-446c-906c-7e0ddaf17d15\" />\n\n<img width=\"1599\" height=\"830\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a46e2331-befc-49a6-ace9-35adbe88726e\" />\n\n<img width=\"4016\" height=\"2096\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/75c84fb2-e7be-467c-a742-2877bc33ebe9\" />\n\n<img width=\"1599\" height=\"830\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/54d596ba-7724-427c-96a8-86f8654fa422\" />",
    "created_at": "2025-07-19T10:41:57Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7307"
  },
  {
    "id": 7306,
    "title": "【刊误】第 355 期 - ECMAScript 2025 的新增语法（英文）原文描述新增了8个语法而不是7个",
    "content": "> JS 语法标准发布了2025版，本文罗列了今年的7个新增语法 \n\n原文章 列举了8个新增语法, 此处应该是笔误\n\n[What’s new in ECMAScript 2025?](https://2ality.com/2025/06/ecmascript-2025.html#what%E2%80%99s-new-in-ecmascript-2025%3F)\n1. [Import attributes and JSON modules](https://2ality.com/2025/06/ecmascript-2025.html#import-attributes-and-json-modules)\n2. [Iterator helper methods](https://2ality.com/2025/06/ecmascript-2025.html#iterator-helper-methods)\n3. [New Set methods](https://2ality.com/2025/06/ecmascript-2025.html#new-set-methods)\n4. [RegExp.escape()](https://2ality.com/2025/06/ecmascript-2025.html#regexp.escape())\n5. [Regular expression pattern modifiers (inline flags)](https://2ality.com/2025/06/ecmascript-2025.html#regular-expression-pattern-modifiers-(inline-flags))\n6. [Duplicate named capture groups](https://2ality.com/2025/06/ecmascript-2025.html#duplicate-named-capture-groups)\n7. [Promise.try()](https://2ality.com/2025/06/ecmascript-2025.html#promise.try())\n8. [Support for 16-bit floating point numbers (float16)](https://2ality.com/2025/06/ecmascript-2025.html#support-for-16-bit-floating-point-numbers-(float16))\n",
    "created_at": "2025-07-19T06:24:54Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7306"
  },
  {
    "id": 7305,
    "title": "【文章推荐】内向的能力｜灵感电波 #84",
    "content": "完整内容：https://www.linggandianbo.com/newsletter-84/\n\n### 内向者的社交艺术｜[How to Network as an Introvert](https://aginfer.bearblog.dev/how-to-network-as-an-introvert/)\nAishwarya Goel｜aginfer.bearblog.dev｜2025.07.05\n> 其实我也是个内向的人。虽然在国内，我们不常有那种需要“刷脸”的大型派对，但这篇文章里的许多小技巧，在日常聚餐、朋友小聚、工作饭局这些场合同样受用。作者用极为细腻、实用的视角，拆解了内向者如何在社交中自在自洽：从入场的气场到如何接话、如何记住细节，再到体面地告别，每一步都接地气又温柔。你会发现，哪怕只是一次普通的饭局，只要用心留意这些小细节，你就能成为那个被人温柔记住的人。推荐每一个像我一样在社交场合偶尔会紧张、担心“融不进去”的朋友，都读一读这篇温柔又有用的指南。（1675字｜6分钟）\n---\n### [【一席】沈辛成：这些被应试教育筛选出来的能力，成了AI时代不重要的能力。](https://www.youtube.com/watch?v=uVjmBVJvP8s)\n沈辛成｜一席｜2025.07.11\n> 如果你曾在学习中迷失方向，对“努力就有收获”产生过质疑，或者在“标准答案”之外渴望探索更广阔的世界，那么你一定要读一读沈辛成这篇演讲。他用犀利却温暖的视角，层层剖析我们熟悉却未必看清的教育现实，让你重新思考“能力”“意义”与“自我发现”的关系。读完之后，你会明白：你并不普通，也不孤单，真正属于你的风景，还在迷宫之外等待你亲自抵达。（5246字｜18分钟）\n---\n### 未曾译出｜[Untranslated](https://hedgehogreview.com/issues/lessons-of-babel/articles/untranslated)\nOlga  Litvak｜The Hedgehog Review｜2025.07.01\n> 在这篇文章中，Olga Litvak 以极富洞察力的笔触，剖析了翻译、信仰与身份之间盘根错节的历史纠葛。她不仅追溯了犹太与基督教世界因一处翻译歧义而分道扬镳的渊源，更以细腻深刻的分析，揭示了语言、文本与文化自我的微妙张力。无论你是对宗教史感兴趣，还是想思考“自传”“忏悔”“真诚”这些人类表达的边界，这篇文章都能为你带来新鲜的视角与启发。Litvak 的文字像一条敏锐的思想脉络，带你跨越“不可译”与“可译”之间的鸿沟，让人重新思考：我们究竟如何在语言、传统与自我之间安放真实的生命体验。（6416字｜21分钟）\n---\n### 偏好之形｜[Frame of preference](https://aresluna.org/frame-of-preference/)\nMarcin  Wichary｜Infinite  Mac｜2025.07.08\n> 如果你和我一样，热衷于研究各种软件的“设置”界面，那么这篇文章一定不容错过。作者用充满热情的笔触，带我们穿越 Mac 过去四十年的设置史，从最初那个只有十个选项的小面板，到如今琳琅满目的系统偏好设置。更令人惊喜的是，文中还贴心提供了每一个时代的 Mac 系统模拟器，你可以亲自体验，不只是看一段历史，更像是与每一代设计者和用户隔空对话。在这里，每一个按钮、每一行菜单都承载着时代的想象与风雨。推荐所有喜欢软件、设计和数字考古的朋友，亲手去点一点、试一试——你会发现，设置面板里，也藏着一台电脑的灵魂。（5113字｜17分钟）\n---\n### 27则关于“渐老”的省思｜[27 Notes On Growing Old\\(er\\)](https://www.ian-leslie.com/p/27-notes-on-growing-older)\nIan  Leslie｜The  Ruffian｜2025.07.05\n> 这篇文章像是一面真诚又幽默的镜子，提醒我们“不老的心”与“渐白的发”之间的微妙错位。Ian Leslie 用贴近人心的语言，引领读者在“感觉年轻”与“身体提醒”之间找到平衡，以智慧与温情，带我们面对岁月的微小裂缝——那条突然冒出的白发正是一声温柔的警钟。推荐给每一个在心底还住着少年、但已察觉生活在提醒中的你：当你察觉自己其实并未“变老”，却总有些东西透露着不可逆时，让这篇文章成为你的指南，照亮如何优雅、坦然地继续前行。（3016字｜10分钟）\n---\n",
    "created_at": "2025-07-19T02:27:04Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7305"
  },
  {
    "id": 7304,
    "title": "【文章推荐】内向的能力｜灵感电波 #84",
    "content": "完整内容：https://www.linggandianbo.com/newsletter-84/\n\n### 内向者的社交艺术｜[How to Network as an Introvert](https://aginfer.bearblog.dev/how-to-network-as-an-introvert/)\nAishwarya Goel｜aginfer.bearblog.dev｜2025.07.05\n> 其实我也是个内向的人。虽然在国内，我们不常有那种需要“刷脸”的大型派对，但这篇文章里的许多小技巧，在日常聚餐、朋友小聚、工作饭局这些场合同样受用。作者用极为细腻、实用的视角，拆解了内向者如何在社交中自在自洽：从入场的气场到如何接话、如何记住细节，再到体面地告别，每一步都接地气又温柔。你会发现，哪怕只是一次普通的饭局，只要用心留意这些小细节，你就能成为那个被人温柔记住的人。推荐每一个像我一样在社交场合偶尔会紧张、担心“融不进去”的朋友，都读一读这篇温柔又有用的指南。（1675字｜6分钟）\n---\n### [【一席】沈辛成：这些被应试教育筛选出来的能力，成了AI时代不重要的能力。](https://www.youtube.com/watch?v=uVjmBVJvP8s)\n沈辛成｜一席｜2025.07.11\n> 如果你曾在学习中迷失方向，对“努力就有收获”产生过质疑，或者在“标准答案”之外渴望探索更广阔的世界，那么你一定要读一读沈辛成这篇演讲。他用犀利却温暖的视角，层层剖析我们熟悉却未必看清的教育现实，让你重新思考“能力”“意义”与“自我发现”的关系。读完之后，你会明白：你并不普通，也不孤单，真正属于你的风景，还在迷宫之外等待你亲自抵达。（5246字｜18分钟）\n---\n### 未曾译出｜[Untranslated](https://hedgehogreview.com/issues/lessons-of-babel/articles/untranslated)\nOlga  Litvak｜The Hedgehog Review｜2025.07.01\n> 在这篇文章中，Olga Litvak 以极富洞察力的笔触，剖析了翻译、信仰与身份之间盘根错节的历史纠葛。她不仅追溯了犹太与基督教世界因一处翻译歧义而分道扬镳的渊源，更以细腻深刻的分析，揭示了语言、文本与文化自我的微妙张力。无论你是对宗教史感兴趣，还是想思考“自传”“忏悔”“真诚”这些人类表达的边界，这篇文章都能为你带来新鲜的视角与启发。Litvak 的文字像一条敏锐的思想脉络，带你跨越“不可译”与“可译”之间的鸿沟，让人重新思考：我们究竟如何在语言、传统与自我之间安放真实的生命体验。（6416字｜21分钟）\n---\n### 偏好之形｜[Frame of preference](https://aresluna.org/frame-of-preference/)\nMarcin  Wichary｜Infinite  Mac｜2025.07.08\n> 如果你和我一样，热衷于研究各种软件的“设置”界面，那么这篇文章一定不容错过。作者用充满热情的笔触，带我们穿越 Mac 过去四十年的设置史，从最初那个只有十个选项的小面板，到如今琳琅满目的系统偏好设置。更令人惊喜的是，文中还贴心提供了每一个时代的 Mac 系统模拟器，你可以亲自体验，不只是看一段历史，更像是与每一代设计者和用户隔空对话。在这里，每一个按钮、每一行菜单都承载着时代的想象与风雨。推荐所有喜欢软件、设计和数字考古的朋友，亲手去点一点、试一试——你会发现，设置面板里，也藏着一台电脑的灵魂。（5113字｜17分钟）\n---\n### 27则关于“渐老”的省思｜[27 Notes On Growing Old\\(er\\)](https://www.ian-leslie.com/p/27-notes-on-growing-older)\nIan  Leslie｜The  Ruffian｜2025.07.05\n> 这篇文章像是一面真诚又幽默的镜子，提醒我们“不老的心”与“渐白的发”之间的微妙错位。Ian Leslie 用贴近人心的语言，引领读者在“感觉年轻”与“身体提醒”之间找到平衡，以智慧与温情，带我们面对岁月的微小裂缝——那条突然冒出的白发正是一声温柔的警钟。推荐给每一个在心底还住着少年、但已察觉生活在提醒中的你：当你察觉自己其实并未“变老”，却总有些东西透露着不可逆时，让这篇文章成为你的指南，照亮如何优雅、坦然地继续前行。（3016字｜10分钟）\n---\n",
    "created_at": "2025-07-19T02:26:46Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7304"
  },
  {
    "id": 7303,
    "title": "【开源自荐】中文古籍数字复刻计划及相关工具",
    "content": "# 愿景\n- 中文古籍数字复刻计划，对照古籍影印本之原貌，复刻文字版电子书，支持圈注，方便存入阅读器随时阅读。\n- 以古籍刻本的形式之美、文字之美、内容之美，带来沉浸式优雅的阅读体验，从而吸引更多读者爱上古籍阅读。\n# 组成\n- [vRain：中文古籍刻本风格电子书制作工具](https://github.com/shanleiguang/vRain)\n- [vYinn：古籍印章制作工具](https://github.com/shanleiguang/vYinn)\n- [vQi：围棋棋谱转古棋谱风格工具](https://github.com/shanleiguang/vQi)\n- [vBooks：利用以上工具复刻的经典作品，如诗经、楚辞、史记、汉书、资治通鉴等](https://github.com/shanleiguang/vBooks)\n# 样例\n\n<img width=\"1446\" height=\"1084\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/25e1db48-001a-436d-9874-3ffc1181ced3\" />\n\n<img width=\"1442\" height=\"1082\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2d2953d8-6454-43e0-b6a0-7729ceedb932\" />\n\n# 主页\n- [GitHub主页](https://github.com/shanleiguang)\n- 小红书：兀雨书屋",
    "created_at": "2025-07-19T01:16:30Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7303"
  },
  {
    "id": 7302,
    "title": "【工具自荐】Grow a Garden Calculator Tools ——你的Grow a Garden在线工具，你只需输入重量和突变因素，即可秒知卖价，连 Sheckles 都替你算好！",
    "content": "本人 Grow a Garden 游戏深度玩家，最近自己做了 1 个 Grow a Garden Calculator Tools。\n\n在疯狂圈粉 2000 万 + 玩家的 Roblox 神作《Grow a Garden》中，想靠“秒算账”闯荡游戏，轻松秒杀其他玩家？这就是 Grow a Garden Calculator Tools存在的意义：帮你秒算Plants价值、预测Mutaion收益，还附送一整套 /交易 / 攻略文档，替你解决“不会算、不想算、算得慢”等问题。\n\n网站地址：https://growagarden-calculator.tools/\n\n<img width=\"2774\" height=\"1572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e72485d1-595b-4d24-a649-b1704af1e4bf\" />\n\n<img width=\"2482\" height=\"1502\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b8f9f6d9-6dd1-410d-9d6d-8363a5705c66\" />\n\n<img width=\"2766\" height=\"1634\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ff1a3d8a-1b65-42cc-8131-119c7a516dd1\" />\n",
    "created_at": "2025-07-18T11:09:51Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7302"
  },
  {
    "id": 7300,
    "title": "【工具自荐】Kubeaver - Kubernetes集群离线部署工具，有图形化界面",
    "content": "项目地址： https://github.com/eb-k8s/kubeaver\n\n项目网站：https://eb-k8s.github.io/kubeaver\n\n项目简介：Kubeaver是快速部署高可用Kubernetes (K8s) 集群的工具，支持在线（开发中）和离线两种方式，项目基于[kubespray](https://github.com/kubernetes-sigs/kubespray)，使用Ansible实现部署任务的自动化，并且提供了用户友好的**图形化界面**。\n\n如果您能够访问互联网，但是因为网络问题无法下载K8s集群相关的镜像和文件而无法使用快速部署K8s集群，我们十分推荐您使用Kubeaver来快速部署K8s集群。\n\n项目特点：\n\n* **任务并发**：尽可能地使集群部署任务并发，加快集群部署速度。\n\n* **离线部署**：能够在完全离线的情况下部署K8s集群，完全屏蔽网络的影响，根据自己的需求下载离线包导入Kubeaver，实现快速一键部署。\n\n* **基本集群管理功能**：使用Kubeaver进行集群的部署、升级、扩缩容、重置操作。\n\n* **自定义集群配置**：你可以选择自定义集群的组件，如网络插件、应用，同时可以配置集群的高级参数。\n\n* **实时任务进度追踪**：任务进度实时查看，任务阶段时间统计。\n\n只要你的机器有docker compose，即可一键快速部署Kubeaver，详细请参照Github项目文档.\n\nKubeaver主界面如下图所示：\n\n<img width=\"2544\" height=\"367\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cdbe23c8-33ef-4051-8f85-f6548a861693\" />\n\n\n主要分为集群管理，主机管理，离线包管理三个功能，在主机管理处添加主机，在离线包管理处导入下载的离线包，然后在集群管理处创建集群，点击部署按钮即可开始一键快速部署K8s集群。\n",
    "created_at": "2025-07-18T08:31:31Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7300"
  },
  {
    "id": 7299,
    "title": "【工具自荐】BskyDelete - Bluesky 内容管理工具",
    "content": "网址：https://bskydelete.com/\n\n核心功能：\n\nBskyDelete 是一款专为 Bluesky 平台设计的工具，帮助用户高效管理社交媒体内容，支持批量删除帖子、点赞和关注记录。\n\n\n主要特点：\n\n批量删除功能：按日期范围或关键词过滤，快速清理旧帖子或不想要的内容。\n数据导出：在删除前备份所有帖子，确保不丢失重要记忆。\n隐私保护：完全在浏览器本地运行，无服务器端数据存储，访问令牌 24 小时后自动过期。\n灵活管理：支持一键取消关注和清理点赞，简化账户维护。\n这款工具是我为解决个人 Bluesky 管理需求而开发，适合希望保持账户整洁或保护隐私的用户。欢迎试用并提供建议，期待听到大家的需求或改进意见！\n\n<img width=\"1536\" height=\"834\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7f0046c8-fbd0-45c3-aa38-8980acc66e33\" />",
    "created_at": "2025-07-18T06:26:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7299"
  },
  {
    "id": 7298,
    "title": "【开源自荐】91写作 - AI智能小说创作平台",
    "content": "一个基于 Vue 3 + Element Plus 的智能Ai小说创作工具，支持自定义模型，支持长篇小说创作、短篇小说创作、拆书、prompt管理、Ai调用统计等\n演示地址: https://xiezuo.91hub.vip/\n开源地址：https://github.com/ponysb/91Writing",
    "created_at": "2025-07-18T03:55:41Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7298"
  },
  {
    "id": 7297,
    "title": "【工具自荐】时间间隔计算网站 | 解决每次定时扒拉手指头算",
    "content": "阮老师您好，自荐一个时间间隔计算的网站，希望能被周刊收录。\n\n网站地址： https://time-interval.com/\n\n## 关键特性\n\n1. 时区支持：计算不同时区之间的时间差\n2. 多种格式：以总时长、天数、小时或分钟查看结果\n3. 精确计算：精确到分钟\n4. 复制结果：一键复制任何结果\n5. 移动友好：在所有设备上完美运行\n6. 深色模式：选择亮色或深色主题\n\n",
    "created_at": "2025-07-18T01:58:08Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7297"
  },
  {
    "id": 7296,
    "title": "名称错误 issue-357.md",
    "content": null,
    "created_at": "2025-07-18T01:41:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/pull/7296"
  },
  {
    "id": 7295,
    "title": "【工具自荐】好有链接 数字名片 | 一款支持中文口令分享的自我介绍小程序",
    "content": "阮老师好，自荐一个独立开发的小程序『好有链接 数字名片』，希望能被周刊收录。\n\n网站：https://links.haoyou.tech\n小程序请搜索：好有链接 数字名片\n\n# 简介\n\n**『好有链接 数字名片』** 是一款支持多身份名片管理和中文口令分享的个人介绍工具。它帮助你为每一个社交身份创建独立的数字名片，分别绑定不同的社交账号、内容卡片和联系方式。在不同场合，分享不同的自己，让对方快速了解你，无需反复自我介绍。\n\n并且在『好有链接』中，除了支持微信分享你的名片。你还可以给每张卡片都绑定中文口令以替代冗长的链接，可以更加自然地嵌入评论、对话甚至图片中分享，不容易被屏蔽或误删。轻巧便捷，也更有趣。\n\n# 好有链接 数字名片\n\n『好有链接』是我们第一个独立开发的正式作品。\n\n\n- 它适合数字游民/自由职业者/自媒体博主这些需要频繁自我介绍的用户；  \n- 也适合设计师/工程师/产品经理/独立开发者 这类需要整理和展示自己作品的用户。\n\n『好有链接』拥有数字名片该有的一切基础功能：整理并整合你的社交账号、内容链接、联系方式，让别人快速了解你是谁，不用一遍遍自我介绍。\n\n![Slide 16_9 - 22.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_22.png)\n\n但我们想让它和诸如 Linkree 之类的数字名片工具有些差异，可以更加贴合国内的环境。\n\n于是，\n\n# 1. 多身份名片\n\n我们每个人或多或少都有多个身份，并且会随时切换它们：\n- 用飞书开会，企微回复客户，Linkedin 更新工作成果的职场打工人👩💻\n- 用 notion 撰写博客，知乎分享经验， 在 behance 上发布作品的设计博主👨🎨\n- 用微博晒狗，小红书种草宠物玩具，微信群寻找遛狗搭子的铲屎官🐕\n\n![好有链接 数字名片-2.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_14.png)\n\n当我们面对不同人的时候，为了匹配不同的关系场景，我们往往会刻意的展示我们其中一面。那么你有没有想过，**这一次，我应该如何介绍和分享自己？**\n\n为了解决这个问题，为了快速且准确地展示那个 “正确的我”。 我们在『好有链接』中增加了多身份名片这个功能：你可以为不同的关系场景，创建专属的『身份名片』。\n\n![好有链接 数字名片-3.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_15.png)\n\n每张『身份名片』都是你的一种侧面。你可以为它们设置不同的头像与简介，组合出专属于这一面的人设信息：\n- 添加社交卡片，绑定你的平台账号（微信、微博、小红书、B 站等），让别人更快找到你。\n- 添加笔记卡片，展示你的爱好特长、知识经验、观点和作品，让别人更快了解你。 \n\n![好有链接 数字名片-4.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_23.png)\n\n这些名片彼此独立。你不需要把所有账号塞进一个页面中，这样也不会担心 “我是不是不该分享这个微信” 或是 “我发一大段自我介绍 Ta 会看吗？”。 只需根据场合，挑选并分享那个恰当的自己。\n\n**『好有链接』就是这样一本属于你的自我使用说明书，每一页都写给不同的人看。**\n\n# 2. 中文口令\n\n出现中文口令的原因是因为我们觉得在社交平台上分享自己的链接和二维码太麻烦了。每次都要绞尽脑汁和平台斗争。\n\n![未命名-13.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_6.png)\n\n于是，在『好有链接』中，每一张卡片都可以被赋予一个自定义的中文口令。\n他人只需在小程序中输入口令就能直达你想展示的内容。 用中文口令可以替代冗长的链接，可以更加自然地嵌入评论、对话甚至图片中，不容易被屏蔽或误删。\n\n![好有链接 数字名片-6.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_19.png)\n\n但我们觉得既然有了这个功能，那就让它更加有趣一些吧。 分享不应该只是把一段信息传递出去，它也可以是一种轻巧、有趣的表达。\n\n于是就有了这些玩法：\n\n## 1. 个性表达\n\n口令可以不只是链接的媒介。它可以是一句玩笑、一个暗号，也可以是一种情绪。它是你和被分享者之间的沟通方式。 它可以让每次分享，都成为一次有趣的互动，这也会让别人更容易记住你。 \n\n![好有链接 数字名片-8.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_20.png) \n\n**快发挥你的想象力，给你的卡片绑定一个独特且印象深刻的中文口令吧😁**\n\n## 2. 互动游戏\n\n既然有了口令，那么是不是可以把这次分享互动变得更加好玩？ \n为此，我们又给卡片增加了隐私功能，你可以设置卡片仅可以通过口令发现。 \n\n![好有链接 数字名片-9.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_16.png)\n\n那么此时，口令分享就成了一场寻宝游戏：将这张卡片的谜底，制作成下一张卡片的口令。用口令将不同的卡片关联起来，引导对方逐步探索，在一场轻量的互动游戏中更好的了解你。\n\n# 浏览器插件（即将上线）\n\n为了让你更方便的获取分享的内容，我们为『好有链接』开发了浏览器插件。 在插件的搜索框中输入你获得的口令，对应的卡片就会被展示出来，并且可以快速访问其中的内容和链接。 \n\n![gif](https://links.haoyou.tech/Drawing_bed/Vivaldi.gif)\n\n# 使用方法\n\n目前，『好有链接』只上线了微信小程序版本。 如果你想体验它，可以在小程序中搜索『好有链接 数字名片』，或者扫描下方的小程序码。 \n\n![好有链接 数字名片-11.png](https://links.haoyou.tech/Drawing_bed/Slide_16_9_-_25.png)\n\n\n\n\n",
    "created_at": "2025-07-17T13:44:09Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7295"
  },
  {
    "id": 7294,
    "title": "【工具自荐】扩展 git branch 命令 增加分支描述的功能",
    "content": "## 背景说明\n\n> 目前，Git 本身并没有内置的分支描述功能，开发者通常通过分支名来了解分支的目的，但这种方式不够直观。\n\n为了提升分支管理的清晰度和可读性，我在项目中引入了一个名为 .git/branch-notes 的本地文件，用于记录每个 Git 分支的描述信息。这个文件不会影响 Git 的版本控制功能，仅作为开发人员在本地维护分支说明的工具。\n\n通过添加 `git branch.note` 命令，可以更方便地为当前分支添加描述，提高团队协作效率与代码可维护性。该命令对团队成员完全透明、易于使用，是对外展示的入口。\n\n\n\n## 一、 配置 Git 别名\n\n将以下配置添加到你的 .gitconfig 文件中，使 git branch.note 命令正常工作：\n\n> ⚠️ 注意：以下命令为 Mac OS 系统的配置文件。\n\n```shell\n[alias \"branch\"]\n  clear = \"!f() { if test -f .git/branch-notes ; then grep -v $(git rev-parse --abbrev-ref HEAD) .git/branch-notes > .git/branch-notes.tmp && mv .git/branch-notes.tmp .git/branch-notes; fi;}; f\"\n  add =  \"!f() { if [[ -n $1 ]]; then echo \\\"| $(git rev-parse --abbrev-ref HEAD) | $1 |\\\" >> .git/branch-notes ; fi; }; f\"\n  show = \"!f() { if test -f .git/branch-notes ; then grep --no-filename $(git rev-parse --abbrev-ref HEAD) .git/branch-notes | awk -F '|' '{print $3}'; else echo 'The file `.git/branch-notes` does not exist'; fi; }; f\"\n  notes = \"!f() { git branch --list | tr -d ' *' | while read -r name; do if [[ -n $(grep ${name} .git/branch-notes) ]]; then grep ${name} .git/branch-notes| sed 's/^|[[:space:]]//g' | awk -F '|' '{print $1 \\\"\\\\033[32m\\\" $2 \\\"\\\\033[0m\\\" }'; else echo  $name; fi; done; }; f\"\n  note =  \"!f() { if [[ -n $1 && $1 = '--add' && -n $2 ]]; then git branch.add $2; elif [[ -n $1 && $1 = '--clear' ]]; then git branch.clear; else git branch.show; fi; }; f\"\n\n```\n\n## 📌 二、 git branch.note 应该如何使用\n\n\n### 1. 为当前分支 添加分支描述\n\n使用如下命令为当前分支添加描述：\n\n```bash\ngit branch.note --add \"第三方登录\"\n```\n\n> 💡 运行后，`git branch.note` 会自动将描述写入 `.git/branch-notes` 文件，格式如下：\n\n```\n| <branch-name> | <description> |\n```\n\n### 2. 查看当前分支的描述\n\n直接使用以下命令查看当前分支的说明：\n\n```bash\ngit branch.note\n```\n\n> 📝 此命令会自动读取 `.git/branch-notes` 文件中的内容，并输出当前分支的描述。如果没有设置描述，则会显示空白。\n\n### 3. 查看所有分支的描述\n\n直接使用以下命令查看当前分支的说明：\n\n```bash\ngit branch.notes\n```\n\n列出所有分支并展示出分支的描述\n\n```\nfeat/oAuth 第三方登录\nfeat/package-switching 套餐切换\nfeat/stat-maas  大模型数据统计\n```\n\n\n[原文地址](https://github.com/shangwenhe/shangwenhe.github.io/issues/69)\n",
    "created_at": "2025-07-17T09:01:37Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7294"
  },
  {
    "id": 7293,
    "title": "【开源自荐】好享记账 - AI记账软件",
    "content": "阮老师您好，自荐一个我独立开发的开源项目——好享记账，希望能被周刊收录。\n\n- 项目链接\n1. 前端：https://github.com/suyu610/journal-flutter\n2. 后端：https://github.com/suyu610/journal-server\n- 视频介绍：https://www.bilibili.com/video/BV1WbGBzcEec\n- 项目体验：[AppStore](https://apps.apple.com/cn/app/%E5%A5%BD%E4%BA%AB%E8%AE%B0%E8%B4%A6/id6736673372)\n## 项目简介\n\n`好享记账`是一个基于flutter开发的，跨端AI记账APP。实现了多人记账、语音记账、截屏快捷记账、自然语言记账等功能。\n整体功能完整，前后端全开源。\n\n## 技术栈\n前端使用flutter、后端使用java、mysql、redis\n\n## 项目截图\n| 首页 | 对话页 |\n| --- | --- |\n| ![Image](https://github.com/user-attachments/assets/e336bc09-a076-443f-bbfe-70de0109ab9f) |![Image](https://github.com/user-attachments/assets/ddfb3850-7270-462b-b4f2-dfc7959ed16b)\n| 语音记账 | - |\n| ![Image](https://github.com/user-attachments/assets/5a656e06-35dc-4c09-b47d-33e78cacc1b0) | |\n\n\n\n\n\n\n",
    "created_at": "2025-07-17T06:51:43Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7293"
  },
  {
    "id": 7292,
    "title": "【网站自荐】 Fast3D - 无需登录即可无限使用3D模型生成网站！输入本字或图片，一键转3D模型，8秒完成！",
    "content": "\n还记得小时候用橡皮泥捏小人的快乐吗？\n\n那种把脑海中的想象变成真实可触摸物体的成就感，简直让人上瘾。\n\n现在，有了**Fast3D.io**，这种创造的快乐又回来了——只不过这次，我们造的是专业级的3D模型。\n\n好久没做新产品了。我想做Fast3D.io这个产品，是因为我想用这个产品。\n\n\n## 🎨 Fast3D.io 有什么不同？\n\n1. **免登录**：Fast模式不需要登录即可无限使用。世界上唯一一个，不需要登录，就可以无限制生成3D模型的产品！支持图片生成3D、文字生成3D两种模式。\n2. **极速生成**： 在Fast模式下，生成一个3D模型只需要8秒钟的时间。\n3. **建模精细**：我们的建模能力非常强大，最高支持40万面。建模后，你可以点开「线框模式」，放到最大，看看建模的精细程度，足以震撼3D设计专业的学生。\n\n下面我们展开讲讲\n\n## 免登录&极速生成\n\n请朋友们先试试这个吧，直接打开网址\n\n[https://fast3d.io](https://fast3d.io)\n\n不需要注册、不需要登录！！\n\n直接写文字或者图片，就可以生成了，从输入到出现模型，全程也就8秒的时间！没有任何套路！\n\n![Image](https://github.com/user-attachments/assets/3243d6fd-0118-49a9-9a27-da01d998a880)\n\n![Image](https://github.com/user-attachments/assets/c6e8040d-92f5-4792-a0f1-425d18fd063f)\n\n上面这张图是我的朋友的照片，我先用ChatGPT-4o处理成了适合做成手办的Q版风格。\n\n\n**使用提示**\n\n*1. 不登录的用户有功能限制： 不能选择贴图、不能选择高精细度的模型。*\n\n*2. 如果你打算不登录使用，请完全关掉🪜，或者选择干净的🪜。我们发现，一部分比较脏的🪜，会被视为恶意网络，无法通过人机验证。我们的服务不需要用🪜。*\n\n*3. 请尽量选择适合变成3D的图片进行测试。*\n\n*4. 如果你想要为自己的自拍生成3D模型手办，请先使用其他图片工具（如豆包），把自己的自拍转成Q版手办样式的图片，再到Fast3D转成3D模型。*\n\n\n\n\n## 建模精细\n\n我们先试试文生图\n\n\n输入\"可爱风格的Donald Trump\"，网格密度选择「极致」，关掉「纹理」开关。\n\n![Image](https://github.com/user-attachments/assets/7f711026-35b2-46bd-a2bb-992fc1c467ed)\n\n\n等待不到20秒，屏幕上就出现了一个精致的3D模型。\n\n![Image](https://github.com/user-attachments/assets/f0c17456-ddc5-4f1b-b6d6-b15765cb7ed3)\n\n你以为这就好了？\n\n错了！打开「线框模式」，放到最大，感觉一下40万面精细建模的震撼吧！\n\n\n\n![Image](https://github.com/user-attachments/assets/29b82dcf-f216-4647-acf5-23c31cfda3a3)\n\n\n\n## 贴图\n\n\n同样的，我们的产品也有一定的贴图能力。\n\n打开「贴图」，网格密度选择「标准」试试。\n\n\n![Image](https://github.com/user-attachments/assets/88aa60b9-4820-4863-bf38-c4dafd756e13)\n\n不过，我们的贴图能力还不够强，尤其是高精度的模型，贴图会出现破面的情况。\n\n这个问题我们还在修复。你可以优先测试「快速」和「标准」在的贴图能力\n\n\n## 全部功能\n\n\n以下是我们的全部功能\n \n![Image](https://github.com/user-attachments/assets/e5bc2cfc-9365-4c4b-b48d-92d8728e8eb7)\n![Image](https://github.com/user-attachments/assets/019d96b2-13b5-4d99-801a-d3a81c1c7da0)\n![Image](https://github.com/user-attachments/assets/e4f26024-6159-48a0-8149-eaf8a7f7c582)\n![Image](https://github.com/user-attachments/assets/22458c81-039f-43b9-9a68-35c4c54bb20e)\n![Image](https://github.com/user-attachments/assets/b79afab1-61ae-40cb-be38-b051f2e0d584)\n![Image](https://github.com/user-attachments/assets/00af1025-b07c-47ac-9c6a-de433f06371d)\n\n\n## ✨ 写在最后：未来已来，就在你的指尖\n\n还记得20年前，\"上网\"是件新鲜事；10年前，\"智能手机\"改变了生活；现在，AI正在改变创作的方式。\n\nFast3D不仅仅是个工具，它是一扇门——一扇通向\"人人都是创作者\"时代的大门。\n\n不需要昂贵的设备，不需要专业的技能，不需要漫长的学习。你需要的，只是一个想法，和点击鼠标的勇气。\n\n\n**所以，今天就去fast3d.io试试吧！**\n\n把你脑海中那个一直想实现的创意，变成能转动、能观赏、能分享的3D作品。\n\n相信我，当你看到自己的想法在屏幕上\"活\"起来的那一刻，你会和我一样惊叹：\n\n**\"原来，创造可以如此简单，如此快乐。\"**\n\n----------\n\n\n欢迎在评论区留下你的反馈，帮助我们不断改善产品，谢谢！\n\n",
    "created_at": "2025-07-17T03:32:33Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7292"
  },
  {
    "id": 7291,
    "title": "【工具自荐】 计算Rolbox的一款游戏Grow a  Garden calculator的利益最大化（最新发布）",
    "content": "## 工具名称：\n\ngrowagardencalc: Grow a  Garden calculator（最新发布）\n\n## 网址链接：\n\nhttps://www.growagardencalc.shop/\n\n## 工具简介：\n\n【适用人群】\n- Roblox“Grow a Garden”所有玩家，尤其是关注资产价值、频繁交易、追求高收益的用户。\n- 需要防骗、想要公平交易、希望科学规划资产的玩家。\n- 社区内容创作者、攻略作者、游戏分析师。\n\n【独特】\n- 采用[reddit上面](https://www.reddit.com/r/growagarden/comments/1le9g7j/i_made_an_even_better_fruit_calculator/)逆向工程还原的真实游戏估值公式，计算结果更精确。\n- 支持所有已知变异、宠物、活动，数据更新快。\n- 交易分析、资产评估一站式解决，提升玩家信任度。\n- 公开透明，免费使用，无需注册。\n\n【主要功能】\n- 作物/果实价值计算器：支持所有植物、变异、彩虹/金色等多重叠加，结果精确到小数点。\n- 交易分析器（WFL Calculator）：输入双方物品，自动判断 Win/Fair/Loss，防止交易被骗。\n- 价值-重量模式切换：支持目标价值反推所需重量。\n- 宠物经验、孵化速度、宠物成长等多种辅助计算。\n- 移动端友好，界面简洁，加载极快。\n- 持续更新，紧跟游戏新活动、新作物、新变异。\n\n\n工具页面截图：\n用的是chrome上的自带的截图工具，有点长哈~\n\n<img width=\"1122\" height=\"6966\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/726f2175-9b9c-4934-af49-717fa087bdf2\" />",
    "created_at": "2025-07-17T03:04:24Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7291"
  },
  {
    "id": 7290,
    "title": "【工具自荐】iForgot - 跨端跨平台的长期记忆管理工具，把你的记忆带给任何AI",
    "content": "# iForgot - 把你的记忆带给任何AI\n\nhttps://github.com/user-attachments/assets/85d9ef9d-9724-4754-88a2-61cdcf0758cd\n\n## 背景\n你每天会使用各种AI工具，比如ChatGPT/Gemini/DeepSeek/Grok...，当然也会有各种Agent，比如Cursor/Lovart/Manus... 有些工具支持了`长期记忆`的功能，但有些依然未支持，这个功能决定了AI是否能提供更好的个性化服务。\n\n所以你需要一个工具可以自动的收集你的记忆，它不仅支持平台内的`跨会话`而且还支持`跨平台`的记忆共享。它可以让你在这个AI工具日益增多、信息爆炸的时代依旧让每个agent都了解你。\n\n我们需要做的不再是 “提问” + “上下文”，而仅仅是 “提问” 就够了。\n\n这是iForgot诞生的原因，它非常简洁只有一个输入框内的`开关`，我们希望你不会察觉到它的存在，但却能感知到AI更懂你了。\n\n## 怎么用\n\n1. [安装](https://chromewebstore.google.com/detail/iforgot/npgkkepfplihidpakonifmnmihfmccmn)\n2. 打开`开关`（关闭`开关`代表着停止记忆的提取/迭代与注入）\n\n<img width=\"1336\" height=\"274\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8b82b690-d499-4306-b3df-6882a53d8825\" />\n\n3. 继续像往常一样使用这些工具，你的记忆会在这些平台见流转迭代，从现在开始每个AI工具都会更懂你。\n\n## 还有什么\n我们会逐步开放以下功能/端（已完成），来支持更多的场景：\n- iForgot Mobile（快捷指令/想记就记）\n- iForgot Desktop （记忆管理/全局记录）\n- iForgot MCP（更强大的记忆录入/消费方式）\n- iForgot API（API调用）\n- ...\n\n## 彩蛋\n- 体验后如果感觉不错，[Chrome Web Store](https://chromewebstore.google.com/detail/iforgot/npgkkepfplihidpakonifmnmihfmccmn) 五星+好评，未来我们会赠送给你一些增值服务，谢谢你的支持 ❤️\n- iForgot 是免费的\n\n\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/50e0c9f3-f67e-44a3-953e-6f6e37568172\" />\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0772be9c-161c-4113-b0bc-e91b594c2ca2\" />\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/eb88fa3e-8440-4f49-9b9d-41dd1a960ced\" />",
    "created_at": "2025-07-16T17:40:00Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7290"
  },
  {
    "id": 7289,
    "title": "【开源自荐】MeetSpot - 解决“我们去哪儿约？”难题的智能聚会点推荐系统",
    "content": "阮老师您好，自荐一个我独立开发的开源项目——MeetSpot，希望能被周刊收录。\n\n* **项目链接**：[https://github.com/JasonRobertDestiny/MeetSpot](https://github.com/JasonRobertDestiny/MeetSpot)\n* **Demo演示**：[https://www.bilibili.com/video/BV1aUK7zNEvo/](https://www.bilibili.com/video/BV1aUK7zNEvo/)\n\n---\n\n### 项目简介\n\n`MeetSpot` 是一个智能聚会地点推荐系统，旨在解决朋友、同事聚会时选择地点的难题。用户只需输入多个参与者的出发位置，系统会自动计算出所有人的**几何中心点**，并围绕该中心点智能推荐最合适的聚会场所（如咖啡馆、餐厅、图书馆等），让众口不再难调。\n\n这是一个轻量级的 Web 应用，无数据库依赖，后端采用 FastAPI，前端为纯原生 JavaScript，部署非常简单。\n\n### 功能特点\n\n* 🎯 **智能中心点计算**：根据多个（2-10个）参与者的位置，计算出几何中心，确保推荐的地点对每个人都相对公平。\n* 🏢 **多场景组合搜索**：支持同时选择多种场所类型进行搜索，例如想找一个“既能吃饭又能喝咖啡”的地方，可以同时搜索“餐厅”和“咖啡馆”。\n* 📊 **智能排序算法**：综合考虑地点评分、与中心点的距离、与各个参与者的距离、以及用户输入的特殊需求（如“安静”、“停车方便”），对结果进行加权排序。\n* 🗺️ **一键路线规划**：在推荐结果中，点击即可直接跳转至高德地图进行路线规划和导航，无缝衔接出行。\n* 🎨 **现代化前端**：使用原生 `Vanilla JS + HTML5` 构建，无前端框架依赖，界面简洁、响应式，加载速度快。\n* 🚀 **高性能后端**：基于 `FastAPI` 构建，性能出色，通过异步 `aiohttp` 请求高德 API，响应迅速。\n\n### 项目截图\n\n| 输入多个地点，一键推荐 | 支持多场景、多关键字搜索 |\n| :---: | :---: |\n| <img src=\"https://raw.githubusercontent.com/JasonRobertDestiny/MeetSpot/main/docs/show1.png\" width=\"400\"/> | <img src=\"https://raw.githubusercontent.com/JasonRobertDestiny/MeetSpot/main/docs/show2.png\" width=\"400\"/> |\n| **地图可视化呈现结果** | **智能排序与地点详情** |\n| <img src=\"https://raw.githubusercontent.com/JasonRobertDestiny/MeetSpot/main/docs/show3.png\" width=\"400\"/> | <img src=\"https://raw.githubusercontent.com/JasonRobertDestiny/MeetSpot/main/docs/show4.png\" width=\"400\"/> |\n\n<p align=\"center\">\n  <strong>一键跳转高德地图导航</strong><br>\n  <img src=\"https://github.com/user-attachments/assets/83ccab8a-3f31-4359-af0d-6c33f74ae153\" width=\"800\"/>\n</p>\n\n### 技术栈\n\n* **后端**：Python 3.11+, FastAPI, Pydantic, aiohttp\n* **前端**：Vanilla JavaScript (ES6+), HTML5, CSS3, Boxicons\n* **核心服务**：高德地图开放平台 (地理编码 & POI 搜索)\n\n感谢您抽空阅读，如果觉得这个项目有点意思，希望能得到推荐！",
    "created_at": "2025-07-16T14:10:49Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7289"
  },
  {
    "id": 7288,
    "title": "【工具自荐】免费在线 OG Image 生成，Meta tags检查器",
    "content": "\n---\n\n### 🧩 OG 图片生成 + Meta 标签检查工具\n\n<img width=\"1426\" height=\"865\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a632804b-087e-40c7-9b64-565ed2b7d33d\" />\n\n推荐一个非常实用的网站：[OpenGraphPro.com](https://www.opengraphpro.com/en)\n\n如果你经常写博客、做产品、发链接分享，一定遇到过这个问题：**社交平台上的链接预览图要么不显示、要么丑得离谱**。\n这个工具可以帮你快速解决这些问题。\n\n#### 💡 功能简介：\n\n* **OG Image 生成器**：上传一张图片，选择模板，自动生成精美的 Open Graph 分享图。无需 PS，适配 Twitter、Facebook、LinkedIn 等平台。\n* **Meta Tags 检查器**：一键抓取网页 Meta 信息，支持在线编辑，可视化预览，自动生成适配多种框架（如 HTML、Nextjs/React、Vue，SvelteKit，Angular，Astro等）的 Meta 代码,并可以对已有网站生成 OG 质量分析报告\n\n#### ⚙️ 适合人群：\n\n内容创作者、独立开发者、产品运营、SEO 从业者。\n\n#### 🌐 我的使用场景：\n\n我用它给项目自动生成网站 OG 图片，博客文章封面图 + 配套的 meta 标签，提升社交分享时的专业感和点击率，非常高效省心。\n\n---\n\n如果你有在维护网站或产品，不妨试试看：[https://www.opengraphpro.com/en](https://www.opengraphpro.com/en)\n\n<img width=\"1473\" height=\"1296\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/06d79aee-5941-4688-a468-4927308b5528\" />\n\n<img width=\"1152\" height=\"1233\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6932e999-817e-4843-aa07-170908d27b3d\" />\n\n---\n\n\n",
    "created_at": "2025-07-16T13:04:37Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7288"
  },
  {
    "id": 7287,
    "title": "【开源自荐】基于Next.js的SaaS启动模板better-saas,快速上线SaaS应用",
    "content": "Github仓库地址：[https://github.com/justnode/better-saas](https://github.com/justnode/better-saas)\n\n### better-saas解决了 SaaS 开发中 95% 的重复性工作。\n\n- 🏗️ **架构设计**：采用 Next.js 15 + App Router，性能提升 40%\n- 🔐 **认证系统**：Better Auth 多提供商支持，安全性达到企业级标准\n- 💳 **支付集成**：Stripe 完整集成，支持订阅、发票、退款全流程\n- 📁 **文件管理**：云存储 + 图像处理，媲美 Dropbox 的用户体验\n- 🌍 **国际化**：真正的多语言支持，不是简单的翻译\n- 🧪 **测试覆盖**：95% 代码覆盖率，包含单元、集成、E2E 测试\n\n\n### 🚀 技术栈：每一个选择都有理由\n\n| 技术 | 版本 | 选择理由 |\n|------|------|----------|\n| Next.js | 15 | 最新 App Router，性能和 SEO 双优化 |\n| TypeScript | 5.0+ | 类型安全，减少 90% 的运行时错误 |\n| Tailwind CSS | v4 | 现代 CSS 框架，开发效率提升 3x |\n| Better Auth | 最新 | 比 NextAuth 更现代，更好的 TypeScript 支持 |\n| Drizzle ORM | 最新 | 类型安全的 ORM，性能比 Prisma 快 2x |\n| Stripe | 最新 | 全球最成熟的支付平台 |\n| Cloudflare R2 | - | 比 AWS S3 便宜 90%，性能相当 |\n\n### 🎯 开发效率提升\n\n```\n传统开发方式：\n├── 认证系统开发：2-3 周\n├── 支付集成：1-2 周  \n├── 文件管理：1-2 周\n├── 国际化：1 周\n├── 测试编写：2-3 周\n├── 部署配置：1 周\n└── 总计：8-12 周\n\nBetter SaaS 方式：\n├── 项目初始化：5 分钟\n├── 自定义配置：1-2 天\n├── 业务逻辑开发：1-2 周\n└── 总计：1-2 周\n\n效率提升：400%-600%\n```\n\n### 🔧 技术指标\n\n```\n代码质量：\n├── TypeScript 覆盖率：100%\n├── 测试覆盖率：95%+\n├── 性能评分：95+ (Lighthouse)\n├── 安全评分：A+ (Security Headers)\n└── 可访问性：AA 级别\n\n开发体验：\n├── 热重载：< 100ms\n├── 构建时间：< 30s\n├── 部署时间：< 2min\n└── 错误恢复：自动化\n```\n\n- 🌐 **官方网站**: [better-saas.org](https://www.better-saas.org)\n- 📚 **完整文档**: [better-saas.org/zh/docs](https://www.better-saas.org/zh/docs)\n- 🐙 **GitHub 仓库**: [github.com/justnode/better-saas](https://github.com/justnode/better-saas)",
    "created_at": "2025-07-16T10:05:31Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7287"
  },
  {
    "id": 7286,
    "title": "【开源自荐】nmsz(牛马时钟)，可视化薪资计时器",
    "content": "<img width=\"276\" height=\"70\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/804147df-9e19-43e4-b1dd-c80c74b0a570\" />\n\n一个将上班时间内薪资变化可视化展示的小玩意儿，用单位时间的薪资来体现时间，也象征着打工人出卖时间以换取金钱。\n\n项目仓库地址：https://github.com/sansui-orz/nmsz",
    "created_at": "2025-07-16T09:12:08Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7286"
  },
  {
    "id": 7285,
    "title": "写错了，抱歉！！",
    "content": "# 公司介绍\n百度云盘是一款由百度公司推出的网络存储服务，主要功能包括文件存储、备份、共享和同步。 用户可以通过百度云盘将本地文件上传至云端，随时随地进行访问和管理，支持多设备同步、文件共享和协作。 百度云盘支持多种文件格式，包括文档、图片、视频和音频，文件传输速度快，安全性高。\n\n## 职位1：客户端研发工程师 (Kotlin, KMP)\n### 工作职责\n1. 负责百度网盘客户端在线预览业务的持续实现与落地，确保业务双端一致性体验和性能优化；\n2. 根据项目任务计划独立按时完成软件高质量编码和测试工作； \n3. 负责新产品的可行性研究及相关技术方案的研究和技术选型工作； \n4. 关注移动端技术发展趋势以及行业调研与分析，确保网盘业务场景服务体验处于业内领先位置，为用户带来更高效、更智能的工具体验。\n\n### 岗位要求\n1. 本科及以上学历，计算机相关专业，3-7 年移动端开发经验；\n2. 熟练掌握 Android Kotlin 语言开发技术，具备扎实的编程基础；\n3. 具备较强的学习能力和解决问题的能力，能够快速适应新技术；\n4. 熟悉跨端技术如 Flutter、KMP 等优先；\n5. 熟悉鸿蒙平台的开发经验者优先；\n6. 了解视频相关业务开发经验者优先；\n7. 能熟练使用 AI 工具，并愿意将其融入日常开发和产品创新。\n\n## 职位2：音视频端研发工程师 (C++)\n### 工作职责\n1. 承担网盘客户端音视频播放 SDK 功能的研发工作，确保业务功能的落地和性能优化；\n2. 负责项目任务计划独立按时完成软件高质量编码和测试工作； \n3. 负责新产品的可行性研究及相关技术方案的研究和技术选型工作； \n4. 关注音视频行业发展趋势以及行业调研与分析，确保网盘业务场景服务体验处于业内领先位置，为用户带来更高效、更智能的工具体验。\n\n### 职责要求\n1. 本科或以上学历，计算机软件相关专业；\n2. 熟悉 Linux 环境编程， 具备扎实的 C/C++、数据结构和算法基础 ;\n3. 熟悉 FFmpeg ，熟悉 H.264/H.265 等相关音视频编解码, 有视频领域相关的开发经验；\n4. 了解音视频、图像相关机器学习/深度学习相关领域知识，并具备相关经验；\n5. 能熟练使用 AI 工具，并愿意将其融入日常开发和产品创新。\n\n## 职位3：服务端研发工程师 (Go语言)\n### 工作职责\n1. 承担网盘视频转码业务系统研发工作，确保业务功能的落地和性能优化；\n2. 根据项目任务计划独立按时完成软件高质量编码和测试工作； \n3. 负责新产品的可行性研究及相关技术方案的研究和技术选型； \n4. 关注音视频行业，服务端技术发展趋势以及行业调研与分析，确保网盘业务场景服务体验业内领先，为用户带来更高效、更智能的工具体验。\n\n### 职责要求\n1. 本科或以上学历，计算机软件相关专业；\n2. 熟悉 GO 语言，Linux环境编程，有常见服务端中间件使用经验，具备扎实的数据结构和算法基础； \n3. 熟悉 FFmpeg ，熟悉 H.264/H.265 等相关音视频编解码, 有视频领域相关的开发经验优先；\n4. 了解视频相关机器学习、深度学习相关经验者优先；\n5. 能熟练使用 AI 工具，并愿意将其融入日常开发和产品创新。\n\n## 其他信息\n- 工作地：北京\n- 招聘等级：T4-T6\n- 邮箱：liuchenghui01#baidu.com\n-             ↑↑↑  联系我，带职位",
    "created_at": "2025-07-16T08:32:47Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7285"
  },
  {
    "id": 7284,
    "title": "【工具自荐】Slurmer - 用于 SLURM 作业管理的终端TUI应用",
    "content": "Slurm是高性能计算集群中最常用的开源作业调度程序和资源管理器\n\n📺 这是一个基于 Rust 和 Ratatui 的 TUI 应用，用于查看和管理 Slurm 作业。\n\nGitHub 地址：[Slurmer](https://github.com/wjwei-handsome/Slurmer)  \n\n\n### ✨ 功能特性一览：\n\n| 功能 | 描述 |\n|------|------|\n| 🔄 **实时作业监控** | 实时刷新并查看 SLURM 中的作业队列 |\n| 🔍 **高级筛选器** | 支持按用户名、分区、状态、QoS、作业名等字段过滤（支持正则） |\n| 📊 **可配置列视图** | 自由选择显示哪些作业信息字段，以及它们的显示顺序 |\n| 📝 **作业详情查看** | 可以直接在 TUI 中查看 job script 和运行日志 |\n| 🎮 **作业管理功能** | 支持选中并取消正在运行的作业 |\n\n### 一些效果截图\n\n![](https://github.com/wjwei-handsome/Slurmer/blob/main/images/monitor.png?raw=true)\n![](https://github.com/wjwei-handsome/Slurmer/blob/main/images/filter.png?raw=true)\n![](https://github.com/wjwei-handsome/Slurmer/blob/main/images/columns.png?raw=true)\n![](https://github.com/wjwei-handsome/Slurmer/blob/main/images/log.png?raw=true)\n![](https://github.com/wjwei-handsome/Slurmer/blob/main/images/script.png?raw=true)\n![](https://github.com/wjwei-handsome/Slurmer/blob/main/images/cancel.png?raw=true)\n\n欢迎使用和提建议",
    "created_at": "2025-07-16T08:17:19Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7284"
  },
  {
    "id": 7283,
    "title": "【工具自荐】免费在线PDF工具30+合集，纯前端实现",
    "content": "阮老师好 :)\n\n网址：https://pdf.imagestool.com/zh-CN/\n\n简介：\n\n1. 免费的在线PDF工具箱，不用登录，无限制使用，批量处理用完即走，纯前端实现，数据不会离开用户浏览器，隐私安全\n2. 目前支持30种PDF功能，例如拆分PDF、合并、排序、压缩、图片pdf互转、提取PDF内的图片文字和路径、PDF to html、PDF转长图等等，持续更新中\n3. 手机浏览器也能使用\n4. 处理完成后可选其他PDF工具继续处理\n\n预览：\n\n![Image](https://github.com/user-attachments/assets/eb6b7ae9-3cf0-419f-9ef0-8aa4b33920b1)",
    "created_at": "2025-07-16T05:45:54Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7283"
  },
  {
    "id": 7282,
    "title": "【工具自荐】客群采集小程序 - 一个免费的拓客小工具",
    "content": "✅ [客群采集-微信小程序](https://my-works.oss-cn-beijing.aliyuncs.com/images/download.jpg)：\n一个免费的商户信息采集小程序，基于地理位置以及地图API，从地图平台根据关键字等信息抓取商户信息。功能：\n1、丰富的采集方式：\n附近客源：以设定的位置为中心点，在指定范围内搜索特定的poi信息，适合周边范围的场景；\n区域客源：以关键字搜索特定“省-市-区”的客源信息，适合大范围的场景；\n行业客源：在区域客源的基础上，添加了行业关键字的设定，最多可以同时设置5个行业关键字；\n2、丰富的客源管理功能\n单次采集的信息会被设定为一次记录，记录可以查看到符合条件的所有客源信息。允许批量或单独对客源信息进行操作：\n1. 拨打电话：如果有采集到电话号码，可以调用系统的拨打电话功能；\n2. 导出通讯录：如果有采集到电话号码，允许保存到系统通讯录里；\n3. 文件导出：将所选的客源信息整合到文本文件里，并在微信聊天里进行分享；\n4. 地图展示：显示在地图中，查看更直观；\n导航：根据客源信息的地理位置信息调用微信的导航功能；\n等等。\n\n部分页面截图可查看[这里](https://developers.weixin.qq.com/community/develop/doc/000a8277754320aaf773c3a416640c)\n\n功能持续更新中，并且会一直免费提供，欢迎体验：\n![小程序码](https://my-works.oss-cn-beijing.aliyuncs.com/images/download.jpg)",
    "created_at": "2025-07-16T05:34:41Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7282"
  },
  {
    "id": 7281,
    "title": "【网站自荐】buzz0.com - 按日查看 hacker news  SHOW HN 产品",
    "content": "网址：https://buzz0.com\n介绍：一个用以方便查看每日 show hn 作品列表的工具。兼容 PC 和手机屏幕。\n\nPC 预览：\n\n<img width=\"2586\" height=\"1984\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/23b5b7c9-aa3d-41c8-a867-a52bc19afb96\" />\n\n手机上预览：\n\n<img width=\"1042\" height=\"1984\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d79defef-3fa7-4505-8c09-8aecb2788a16\" />\n\n同系列工具：\nhttps://upvote0.com producthunt 每日产品查看\nhttps://follow0.com  reddit 创业、程序版块帖子查看",
    "created_at": "2025-07-16T04:46:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7281"
  },
  {
    "id": 7280,
    "title": "【网站自荐】 paopaopaike.com 泡泡排课，让排课更简单",
    "content": "[https://www.paopaopaike.com](https://www.paopaopaike.com)\n\n### 泡泡排课，让排课更简单。\n---\n\n只需填写 [年级与班级](https://www.paopaopaike.com/grade-class)、[科目](https://www.paopaopaike.com/subject)、[教师](https://www.paopaopaike.com/teacher)、[教学场地](https://www.paopaopaike.com/facility)、[上课时间](https://www.paopaopaike.com/schedule)、[教学计划](https://www.paopaopaike.com/teaching-task) 和 [排课要求](https://www.paopaopaike.com/rules)，泡泡排课便能为你快速生成最优的[ 课程表](https://www.paopaopaike.com/timetables)。\n\n#### 简单、快捷、方便\n\n教学管理不再繁琐，助你轻松安排课程表，提升教学效率。\n体验智能化的教学管理服务，节省时间，专注于更重要的教育工作。\n\n#### 使用说明\n\n##### 步骤 1\n填写 [年级与班级](https://www.paopaopaike.com/grade-class)、[科目](https://www.paopaopaike.com/subject)、[教师](https://www.paopaopaike.com/teacher)、[教学场地](https://www.paopaopaike.com/facility)、[上课时间](https://www.paopaopaike.com/schedule)、[教学计划](https://www.paopaopaike.com/teaching-task) 内容\n\n##### 步骤 2\n填写 [排课要求](https://www.paopaopaike.com/rules) 内容(选填，没有排课要求不用填写)\n\n##### 步骤 3\n点击 [智能排课](https://www.paopaopaike.com/task)，等待系统生成[ 课程表](https://www.paopaopaike.com/timetables)\n\n##### 步骤 4\n查看或下载[ 课程表](https://www.paopaopaike.com/timetables)\n\n---\n\n<img width=\"1333\" height=\"839\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0a155d82-80d9-46cf-a16e-394c21ec1619\" />",
    "created_at": "2025-07-16T03:27:05Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7280"
  },
  {
    "id": 7279,
    "title": "【开源自荐】Weekday clock - 一个只显示今天是周几的钟表",
    "content": "创意来自一个叫做 Day Clock 的实体钟表，亚马逊还有商品链接，只不过价格高的吓人：\n\nhttps://www.amazon.com/stores/page/A831F4BA-DAD5-470C-A4CD-96555B68422A/\n\n<img width=\"1469\" height=\"491\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d33769b6-0a1d-4fe9-9eac-6965e7d42c49\" />\n\n访问地址：https://weekdayclock.1link.fun\n只显示钟表：https://weekdayclock.1link.fun?clockonly=1\n\n项目代码：https://github.com/jwenjian/weekday-clock",
    "created_at": "2025-07-16T03:26:10Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7279"
  },
  {
    "id": 7278,
    "title": "【开源自荐】多功能加速服务：提供 Docker 镜像加速、GitHub 文件加速、Docker离线镜像下载、在线搜索 Docker 镜像等功能。",
    "content": "## ✨ 特性\n\n- 🐳 **Docker 镜像加速** - 单域名实现 Docker Hub、GHCR、Quay 等多个镜像仓库加速，流式传输优化拉取速度。\n- 🐳 **离线镜像包** - 支持下载离线镜像包，流式传输加防抖设计。\n- 📁 **GitHub 文件加速** - 加速 GitHub Release、Raw 文件下载，支持`api.github.com`，脚本嵌套加速等等\n- 🤖 **AI 模型库支持** - 支持 Hugging Face 模型下载加速\n- 🛡️ **智能限流** - IP 限流保护，防止滥用\n- 🚫 **仓库审计** - 强大的自定义黑名单，白名单，同时审计镜像仓库，和GitHub仓库\n- 🔍 **镜像搜索** - 在线搜索 Docker 镜像\n- ⚡ **轻量高效** - 基于 Go 语言，单二进制文件运行，资源占用低，优雅的内存清理机制。\n- 🔧 **统一配置** - 统一配置管理\n\n\n### 项目地址：https://github.com/sky22333/hubproxy\n\n### 演示站：https://demo.52013120.xyz\n\n\n#### 预览\n\n<img width=\"2398\" height=\"1450\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5b64a09c-a826-4362-9765-c44363ffd11e\" />\n\n<img width=\"2455\" height=\"1434\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05dca424-db60-4fde-beea-5038398032cf\" />\n\n<img width=\"2398\" height=\"1438\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bb2c3a78-54eb-4215-a1fb-b9ef2267c304\" />",
    "created_at": "2025-07-16T02:48:59Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7278"
  },
  {
    "id": 7277,
    "title": "【工具推荐】AI地球缩放视频生成器 (AI Earth Zoom Out)",
    "content": "URL: https://aiearthzoomout.org/\n\nTime: 2025/07/15\n\nNote: 推荐一个超酷的AI网站：Earth Zoom Out。它能用AI将任意图片一键生成为专业的地球缩放短视频，实现从地面到太空的电影级运镜效果，视觉冲击力强，强烈建议关注。",
    "created_at": "2025-07-15T10:31:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7277"
  },
  {
    "id": 7276,
    "title": "【网站自荐】 HelloGame.io：即刻开玩，免费在线游戏新宇宙",
    "content": "[https://hellogame.io](https://hellogame.io)\n\n你是否曾感到片刻的无聊，想要立刻投入一场有趣的游戏，却被漫长的下载和复杂的安装过程劝退？现在，这一切都将成为过去！\n\n向你隆重介绍 **HelloGame.io**——一个汇集了成百上千款精品在线游戏的全新门户网站。我们的使命只有一个：为你提供最直接、最纯粹的游戏乐趣，无需任何等待。\n\n**HelloGame.io 有何与众不同？**\n\n1.  **零秒等待，即点即玩：** 忘掉“下载”和“安装”这两个词吧！在 HelloGame.io，你只需打开浏览器，点击你喜欢的游戏，即可在几秒钟内进入游戏世界。无论是电脑还是平板，只要有网络，快乐就无处不在。\n\n2.  **海量游戏，包罗万象：** 你是运筹帷幄的策略大师，还是眼疾手快的动作高手？是热爱烧脑的益智解谜，还是沉迷于风驰电掣的赛车竞速？在 HelloGame.io，我们精心挑选了涵盖所有类型的游戏。从经典的复古街机到最新的创意独立游戏，总有一款能点燃你的热情。\n\n3.  **100% 免费，无忧畅玩：** 我们坚信，快乐不应有门槛。HelloGame.io 上的所有游戏完全免费。没有隐藏费用，没有订阅要求，你唯一需要付出的，就是享受游戏的那份心情。\n\n4.  **简洁界面，轻松探索：** 我们设计了清爽、直观的网站界面，让你能轻松地通过分类、搜索或热门推荐，快速找到你的下一款心头好。发现新游戏，从未如此简单。\n\n别再让无聊占据你的宝贵时间了。现在就访问 **HelloGame.io**，对无聊说“拜拜”，向无尽的乐趣说“Hello”！\n\n你的下一款挚爱游戏，就在这里等你。\n\n立即访问：[https://hellogame.io](https://hellogame.io)\n\n![](https://img.zhangjy.me/hellogame.io.png)",
    "created_at": "2025-07-15T09:46:32Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7276"
  },
  {
    "id": 7275,
    "title": "【文章自荐】第一次赚美元！纯新手深度复盘网站出海，一文掌握全流程",
    "content": "希望可以站在新手的视角，分享网站出海的生意。\n文章链接：https://mp.weixin.qq.com/s/34x7hsP_lG-iACnyvjYBfw",
    "created_at": "2025-07-15T09:38:17Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7275"
  },
  {
    "id": 7274,
    "title": "【工具自荐】 Runcell Code Agent - Jupyter里的Cursor替代",
    "content": "cursor/copilot/claude code等为软件工程设计的code agent在处理jupyter(.ipynb)相关的编程与数据分析时，会有很大的局限：\n- 无法理解ipynb上下文里各种复杂类型的信息\n- 无法像人类一样控制jupyter的操作，大部分情况下都只能一口气生成所有的代码，无法自动调试，根据中间结果进行分析。\n\n为了能够在jupyter里使用可以完全自主运行调试，交付最终结果的Code Agent，我开发了runcell；它针对jupyter上下文信息的理解，jupyter控制等做了全新的设计，补充了jupyter下的agent可以调用的一些辅助开发的tool。\n\n<img width=\"3360\" height=\"2046\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/70e9219d-a9d6-4027-9da6-495367d4790b\" />\n\n用户只需要`pip install runcell`即可安装，并在jupyter lab中使用\n\n+ [官网runcell](https://runcell.dev)\n+ [视频介绍](https://www.bilibili.com/video/BV16KMQzUEPe/?share_source=copy_web&vd_source=57ac992756e57aeb910c02693db35eac)\n\nhttps://github.com/user-attachments/assets/a43c2c37-5772-4490-8357-2fec2bb638a8",
    "created_at": "2025-07-15T09:10:40Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7274"
  },
  {
    "id": 7273,
    "title": "【开源自荐】EPUB 双语无损翻译",
    "content": "## 简要\n\n**项目名:** epub-translator\n**GitHub:** https://github.com/oomol-lab/epub-translator\n**协议:** MIT\n\n## 功能特性\n\n- **多语言互译**：支持 英文、中文、日文、西班牙语、法语、德语等主流语言互译。\n- **无损翻译**：基于 AI 大模型 100% 保留原书的格式、插图、目录和排版\n- **双语对照**：支持双语对照，方便学习和阅读\n- **插入提示词**：指导 AI 翻译，如术语表，角色人名表等。\n- **AI 模型可选**：支持 DeepSeek、ChatGPT 等主流大模型\n- **高性能并行**：AI 请求多路并发，快速翻译整本书籍\n- **错误自恢复**：自动重试超时 & 速率限制，长书也能一次跑通\n\n## 安装\n\n```bash\npip install epub-translator\n```\n\n## 核心用法示例\n\n```python\nfrom epub_translator import LLM, translate, Language\n\nllm = LLM(\n  key=\"<LLM-API-KEY>\", # LLM 的 API key\n  url=\"https://api.deepseek.com\", # LLM 的 base URL\n  model=\"deepseek-chat\", # LLM 的模型名\n  token_encoding=\"o200k_base\", # 计算 tokens 个数的本地模型\n)\n\ntranslate(\n  llm=llm, # 上一步构造的 llm 对象\n  source_path=\"/path/to/epub/file\", # 要翻译的原 EPUB 文件\n  translated_path=\"/path/to/translated/epub/file\", # 翻译后的 EPUB 保存路径\n  target_language=Language.SIMPLIFIED_CHINESE, # 翻译目标语言，此例为简体中文。\n  user_prompt=\"Le Petit Prince 应该译为“小王子”。\", # 用户提示词，指导 AI 翻译 （可选）\n)\n```\n\n运行后即可得到保留原版版式的「双语 EPUB」，在 KOReader / Koodo Reader / Apple Books 等阅读器里直接打开即可\n\n## 实际效果\n\n<img width=\"1795\" height=\"656\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bfb4f098-e653-4567-b996-cf6f46345ad6\" />",
    "created_at": "2025-07-15T08:49:33Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7273"
  },
  {
    "id": 7272,
    "title": "【网站自荐】Dual-N-back：科学验证可以提升流体智力，多种练习模式。并且有可视化的训练记录",
    "content": "Link: https://n-backing.com\n\nDual-N-back是一款经过科学验证，每天练习20分钟，坚持一个月。可以有效提升流体智力也就是工作记忆的游戏\n\n<img width=\"1848\" height=\"820\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/44f3baaf-faa0-47a4-bd10-3a1b795ec0b0\" />\n\n<img width=\"799\" height=\"763\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6a4766c8-b5d9-459f-a074-f5fd87d4cfae\" />",
    "created_at": "2025-07-15T07:42:03Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7272"
  },
  {
    "id": 7271,
    "title": "【工具自荐】Echobell - 简单快速地将 Webhook 或 Email 转为 app 通知/电话",
    "content": "在 [Echobell](https://echobell.one) 创建一个频道后，会提供一个 webhook 和邮箱地址，调用这个 webhook 或向这个邮箱发送邮件，你将会收到一条 app 通知或者是电话。同时还可以将该频道分享给团队其他成员，以便共享重要的通知信息。\n\n常见的使用场景：\n\n- 服务器重要通知\n- 连接其他自动化流程以接收通知\n- 结合 TradingView 实现交易信号提醒\n- 将老系统的邮件通知转换为更及时的电话通知\n\n目前只支持 iOS 平台，下载地址：\n\n- [App Store](https://apps.apple.com/app/apple-store/id6743597198?pt=126931111&ct=Ruanyf&mt=8)\n- [官网](https://echobell.one)",
    "created_at": "2025-07-15T07:39:02Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7271"
  },
  {
    "id": 7270,
    "title": "【工具推荐】Configs 自动扫描出各种常见配置文件，shell配置文件编辑保存时自动执行 source ~/.zshrc",
    "content": "# Configs\n\n[https://github.com/iHongRen/configEditor](https://github.com/iHongRen/configEditor)\n\nConfigs 是一款 **macOS** **应用程序**，旨在帮助您轻松管理和编辑您的配置文件,基于 SwiftUI。大小仅几百KB.\n\n它会自动扫描各种编程语言和工具的常见配置文件，提供一个方便的界面来查看和编辑它们，并允许您添加自己的自定义配置文件。\n\n## 截图\n\n![](https://raw.githubusercontent.com/iHongRen/configEditor/main/screenshots/light.png)\n\n## 功能\n\n- **自动发现**：扫描您的主目录以查找常见的配置文件（例如，`.zshrc`、`.gitconfig`、`.vimrc`、`.npmrc` 等）。\n- **自动 source**: 当编辑 .zshrc 和 .bashrc 这类文件时，保存时自动执行 `source ~/.zshrc`，使修改立即生效。\n- **文件管理**：添加自定义配置文件，置顶常用文件以便快速访问，并删除自定义文件。\n- **代码编辑器**：集成代码编辑器，支持多种文件类型的语法高亮。\n- **搜索功能**：在侧边栏中按名称或路径搜索特定配置文件，并在当前打开的文件内容中进行搜索。\n- **缩放控制**：调整编辑器内容的缩放级别。\n- **外观选项**：在**浅色**和**深色**模式之间切换。\n- **键盘快捷键**：\n  - `Cmd + F`：在编辑器中显示/隐藏搜索栏。\n  - `Cmd + S`：保存文件。\n  - `Cmd + =` / `Cmd + +`：放大。\n  - `Cmd + -`：缩小。\n  - `Cmd + 0`：重置缩放。\n  - `Esc`：关闭搜索栏。\n- **上下文菜单操作**：在侧边栏中右键单击文件，可选择：\n  - 置顶/取消置顶\n  - 复制路径\n  - 在 Finder 中打开\n  - 在 VSCode 中打开\n  - 在 Cursor 中打开\n\n## 安装\n\n要安装和运行 Configs，您需要在 macOS 机器上安装 Xcode。\n\n1. **克隆仓库**：\n\n   ```bash\n   git clone https://github.com/iHongRen/configEditor.git\n   cd configEditor/Configs\n   ```\n\n2. **在 Xcode 中打开**：\n   在 Xcode 中打开 `Configs.xcodeproj` 文件。\n\n3. **构建应用程序**：\n   选择您的目标（例如，“My Mac”），然后单击 Xcode 中的“构建”按钮（⌘B）。`Configs.app` 将在 Xcode 项目导航器中的 `Products` 文件夹中生成。您可以右键单击 `Configs.app` 并选择“在 Finder 中显示”来找到它。\n\n4. **安装并运行**：\n   解压 [[configs.zip](https://github.com/iHongRen/configEditor/releases)](https://github.com/iHongRen/configEditor/releases) 后， 将 `Configs.app` 包拖到您的 `/Applications` 文件夹中。\n   打开终端并运行以下命令，使应用程序可执行：\n\n   ```bash\n   chmod +x /Applications/Configs.app/Contents/MacOS/Configs\n   ```\n\n   现在您可以从 `/Applications` 文件夹或 Launchpad 打开应用程序。\n\n   如果弹窗提示无法打开，打开 **系统偏好设置** > **隐私与安全性** > **安全性** > 允许以下来源的应用程序：**App Store与已知开发者** > **仍要打开**",
    "created_at": "2025-07-15T06:41:45Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7270"
  },
  {
    "id": 7269,
    "title": "【文章推荐】会用 GitHub 的华裔老太太竞选镇议员",
    "content": "北卡罗来纳州莫里斯维尔 (Morrisville) 镇旁边有很多科技公司，也是联想集团两个全球总部的所在地之一。\n\n最近两年当地政府不断加税，让当地民众很不满。在矛头都指向在任镇议员之时，在税务局上班的分析师程为培 (音译) ，一个五十多岁的华裔老太太，趁机抓住机会参与竞选。她不仅倡导减税，还脑洞大开，[建立](https://github.com/Patty-4-Morrisville/Patty-4-Morrisville)了一个 GitHub 储存库 [^1] ，拉程序员的票。\n\n据了解，程是无党派的二代移民，会讲中文，还当过数学老师和工程师。她从未结婚，也没生孩子。她的口号是用理工思维解决实际问题。这样让她在亚裔占 40% 的  Morrisville 很受欢迎。有人还建议她搭 AI 问答机器人来吸引眼球，于是她没花一分钱，用 [DeepWiki](https://deepwiki.com/Patty-4-Morrisville/Patty-4-Morrisville) 随便弄了个，效果还挺好。 [^2]\n\n如此史无前例的手段和无二的背景，还不知道能不能奏效。对手是民主党籍的白人，在位从政已有十多年了，名校 MBA 毕业。不过话说回来，对手虽然资历过硬，在任期间也没少被喷。这场选举说不定会有很戏剧化的结局。\n\n[^1]: <https://github.com/Patty-4-Morrisville/Patty-4-Morrisville>\n[^2]: <https://deepwiki.com/Patty-4-Morrisville/Patty-4-Morrisville>\n\n**AI 生成的政策示意图：**\n\n![Image](https://github.com/user-attachments/assets/d2da9c56-ddf2-4737-b6d3-3dba986ac9af)\n\n**程老太太的照片：**\n\n![Image](https://github.com/user-attachments/assets/46639ec3-b720-4034-b6d6-ab68a0167446)",
    "created_at": "2025-07-15T02:03:00Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7269"
  },
  {
    "id": 7268,
    "title": "【网站自荐】PoPo：为了给MMD二次元纸片人摆姿势，我Fine Tuning了大模型",
    "content": "Link: https://popo.love\n\nGithub: https://github.com/AmyangXYZ/PoPo\n\n不需要懂3D建模和复杂坐标变换也可以给喜欢的二次元模型摆姿势了 - 直接输入“弯腰”，“大笑”，“一边抬腿一边哭”\n\n用MMD角色姿势和动画Fine Tuning大模型，直接输出MMD纸片人专用的骨骼姿态和表情权重。也不需要从那些generic的动作捕捉，text-to-pose算法的landmark结果里再去解算MMD相关的坐标旋转参数。\n\n",
    "created_at": "2025-07-14T20:37:47Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7268"
  },
  {
    "id": 7267,
    "title": "【工具推荐】Free AI Prompt Generator to Craft Perfect Prompts  庞大的提示词库、智能提示词生成器",
    "content": "**产品名称**\n\nPromptMuse\n\n[官方地址：PromptMuse](https://promptmuse.net)\n\n<img width=\"2186\" height=\"1592\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/284d5df0-9f5f-45cd-ac80-637e00e03308\" />\n\n\n**标签**\n\nweb, AI, prompt, 工具, 生产力\n\n**推荐类型**\n\n【开发者自荐】\n\n**一句简介**\n\n适合初学者的完整提示词prompt工具包：庞大的提示库、智能提示词生成器，从 AI 新手轻松成为 Prompt Pro。\n\n**主要功能**\n\n**Prompt Library**（提示词库）\n- 精选并持续更新的高质量 prompt，覆盖广告文案撰写、网红营销策划、邮件模板生成、竞品分析等多种应用场景。\n- 每条 prompt 符合[CRISPE提示框架]，助力用户快速获得精准答案。\n\n**Prompt Generator**（智能引导生成器）\n- 通过分步提问，逐层细化用户需求，每一步都配有智能建议与自定义输入区。\n- 用户可点选采纳或输入个性化答案，轻松生成高度定制的 prompt，适合新手和有特殊需求的用户。",
    "created_at": "2025-07-14T14:16:12Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7267"
  },
  {
    "id": 7266,
    "title": "开源推荐：版本管理系统",
    "content": "## 项目地址\nhttps://github.com/opsre/version_manager.git\n\n## 项目简介\n\n**Version Manager** 是一款基于 Flask 框架开发的企业级版本管理平台，集成了 MySQL 数据库操作、FTP 文件存储、细粒度权限控制与操作日志，助力企业高效、安全地管理产品版本与文件。  \n本项目采用模块化、可扩展的架构设计，适合中大型团队协作与二次开发。\n\n---\n\n## 核心特性\n\n- **企业级架构**：清晰分层，易于维护与扩展\n- **多用户与权限管理**：支持角色分配、产品权限、操作日志审计\n- **版本与文件管理**：高效追踪产品版本，支持大文件上传与存储\n- **FTP 集成**：安全、稳定的文件存储方案\n- **RESTful API**：前后端分离，易于对接各类前端/第三方系统\n- **易于部署**：支持 Docker 一键部署，环境配置灵活\n- \n## 最佳使用方式案例\n在jenkins流水线中使用shell脚本version_lock.sh调用，实现版本的锁定与解锁。锁定停止发布，未锁定则继续进行。\n当测试在某个环境测试版本功能时，不会被打扰",
    "created_at": "2025-07-14T11:40:39Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7266"
  },
  {
    "id": 7265,
    "title": "【工具推荐】AI Free Background Remover 一键去除图片背景",
    "content": "工具地址：https://bgg.one \n\nAI 免费批量去除背景图片，生成的图片质量很高，因为在本地浏览器运行，隐私具有保障。\n\n[BgGone - background removal](https://bgg.one)\n\n<img width=\"608\" height=\"1107\" alt=\"free remove background free - bgg.one\" src=\"https://github.com/user-attachments/assets/d05c372e-d49e-4499-a042-531a416062a0\" />",
    "created_at": "2025-07-14T08:02:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7265"
  },
  {
    "id": 7264,
    "title": "【开源自荐】全网首个VSCode渐变色主题，你见过吗？",
    "content": "开源地址：https://github.com/shaobeichen/gradient-theme\n\nVSCode插件市场地址：https://marketplace.visualstudio.com/items?itemName=shaobeichen.gradient-theme\n\n多种主题展示：\n\n<img width=\"1978\" height=\"1284\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e28f2025-0096-4653-b125-cf2234642420\" />\n\n<img width=\"2024\" height=\"1292\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/aef1f162-9d20-49f9-a331-50b9641bd223\" />\n\n<img width=\"2132\" height=\"1376\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/175ec31f-b2db-479b-acc8-8c1ddb206d86\" />\n\n<img width=\"2390\" height=\"1642\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0bf18786-3201-46de-ad3c-10fcf9d280d7\" />\n",
    "created_at": "2025-07-14T06:12:35Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7264"
  },
  {
    "id": 7263,
    "title": "【游戏自荐】F1 赛车起跑挑战",
    "content": "微信小程序名称「赛车起跑挑战」\n\n简介：这款小程序模拟了真实 F1 的起跑灯，用作反应测试。\n\n操作步骤：\n1. 点击屏幕开始测试\n2. 每隔一秒会亮一盏红灯，还可以开启声音\n3. 等红灯熄灭，绿灯亮起的时候尽快点击屏幕！\n5. 红灯熄灭的的时间是随机的，禁止预判\n\n一共测三次，就会有最终成绩\n\n<img width=\"240\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5000d2c9-3508-469b-92fa-17145c4076c4\" />\n<img width=\"240\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c910d497-b21f-4ab7-878e-4142c1d6a5e1\" />\n<img width=\"240\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0dc465cd-32cf-451e-b258-89ed2e53cb25\" />",
    "created_at": "2025-07-14T03:54:34Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7263"
  },
  {
    "id": 7262,
    "title": "【工具自荐】v-rapper-mcp 直出尤大在 VueConf 2025 深圳的激情 rap 《大展宏图》",
    "content": "Repo: https://github.com/w2xi/v-rapper-mcp\n\n## How to use\n\nAdd the following `v-rapper-mcp` to your configuration:\n\n```json\n{\n  \"mcpServers\": {\n    \"v-rapper-mcp\": {\n      \"command\": \"npx\",\n      \"args\": [\n        \"v-rapper-mcp\"\n      ]\n    }\n  }\n}\n```\n\nAnd then, just enjoy it!!!\n\n<img width=\"641\" height=\"429\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/15a3a1fd-8bf4-4262-9ccd-c06b67d32bb1\" />",
    "created_at": "2025-07-14T03:13:43Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7262"
  },
  {
    "id": 7261,
    "title": "【工具自荐】一款关注长尾需求的工具站",
    "content": "产品介绍：\n这是一个专注于满足用户长尾需求的实用工具站，旨在为不同场景下有特殊工具需求的用户提供便捷支持。无论是开发者、设计师，还是普通互联网使用者，都能在这里找到适配自身小众需求的功能。目前，平台已上线 iframe 代码生成、随机密码生成，且所有功能均永久免费开放。我们坚持持续更新的理念，会不断根据用户反馈拓展工具类型，让每一个不常见却必要的需求都能得到高效解决。\n功能特征：\niframe 代码生成：无需复杂的代码知识，用户可通过简单设置快速生成符合要求的 iframe 嵌入代码，轻松实现网页内容的嵌入与展示，适用于网站建设、内容整合等场景，大幅简化代码编写流程。\n随机密码生成：支持自定义密码长度、字符组合（包含大小写字母、数字、特殊符号等），能快速生成安全性极高的随机密码，为各类账户的密码设置提供可靠保障，有效降低密码被破解的风险。\n参考abode功能的二维码：可生成具备 abode 相关功能的二维码，满足特定场景下对二维码功能的个性化需求，方便信息的快速传递与获取，提升信息交互效率。\n持续更新迭代：团队会密切关注用户的长尾需求反馈，不断研发并上线新的工具功能，确保工具站的实用性和时效性，持续为用户解决更多小众化问题。\n产品定价：\n本工具站所有功能永久免费，用户无需支付任何费用，即可无限制使用当前已有的 iframe 代码生成、随机密码生成等工具，以及未来持续更新的各类新功能。我们致力于通过免费且优质的服务，成为用户应对长尾需求时的得力助手。\n\n\n工具网址:\nhttps://toolhub.club/\n\n\n<img width=\"3456\" height=\"1744\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/52d42fc5-ac32-45eb-afaa-fefc21f7168f\" />",
    "created_at": "2025-07-14T02:58:18Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7261"
  },
  {
    "id": 7260,
    "title": "【工具自荐】一键把 wireshark/tcpdump 结果解析为可视化分析报告",
    "content": "## 工具名称\nTcpViz\n\n## 网址链接\n官网: https://tcpviz.com\n\n## 工具简介\n一个面向初级网络工程师或者对网络不熟悉的人的 SaaS 工具，致力于将复杂、耗时的 pcap 网络包分析过程自动化、可视化，一键生成分析报告，帮助工程师从海量数据包中快速定位网络问题。\n\n## 详细介绍\n相信很多工程师都经历过这样的场景：\n\n线上服务出现诡异的访问超时，怀疑是网络问题，于是你拿到了一个几十甚至上百兆的 pcap 抓包文件。接下来就是痛苦的开始：\n\n用 Wireshark 打开它，瞬间被成千上万条记录淹没，眼花缭乱。\n小心翼翼地构造过滤器 (ip.addr == x.x.x.x and tcp.port == xxxx)，试图找到关键的 TCP 会话。\n在数据流里肉眼寻找 TCP 重传、零窗口、高延迟等蛛丝马迹。\n如果遇到 TLS 加密，分析难度更是指数级上升。\n整个过程不仅极其耗时，而且对工程师的经验要求极高。等你好不容易找到点眉目，半天时间已经过去了。\n这个过程实在太痛苦了！我就在想，能不能有一个工具，能将这个“手工作坊式”的分析过程自动化？\n\n因此，我开发了 TcpViz。它就像一位 7x24 小时待命的网络专家。你只需要把 pcap 文件拖拽上传，它就会在后台完成所有繁琐的分析工作，并直接给你一份包含关键洞察的可视化报告：哪里出现了重传、哪个会话延迟最高、整体的网络健康状况如何……一切都一目了然。\n\n我的目标是让网络问题排查不再是大海捞针，而是像看一份体检报告一样简单清晰。\n\n## 主要功能\n🚀 一键上传与自动化分析：无需安装，拖拽 pcap 文件即可获得洞察。\n📊 直观的可视化报告：自动生成 TCP 性能、时序图、会话列表等易于理解的图表。\n📈 关键性能指标概览：快速识别 TCP 重传、零窗口、RTT 延迟等核心问题。\n🌐 纯 Web SaaS：跨平台，无需关心本地环境，随时随地可用。\n🛡️ 隐私与安全：我们尊重用户数据，分析过程在隔离环境中进行，报告可随时销毁。\n后续还有更多功能迭代，例如：\n🔍 深度会话下钻 ：支持对单个 TCP 流进行深入分析，查看详细交互。\n🛡️ 深度包检测：深度检测数据包分析出恶意的攻击来源\n\n## 工具页面截图\n![Image](https://github.com/user-attachments/assets/c8917a2a-e5fa-4ee8-ba61-ed47e10d9d34)\n\n![Image](https://github.com/user-attachments/assets/c6fbee8a-6a3b-45da-a51e-85963ba667c2)\n![Image](https://github.com/user-attachments/assets/0fd2a604-e377-46b3-b26a-1b74d056d9ea)\n\n\n\n",
    "created_at": "2025-07-13T14:04:35Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7260"
  },
  {
    "id": 7259,
    "title": "【工具自荐】帮您 24 小时监控站点、设备、API 的状态，咕咕监控是您的运维工具人",
    "content": "# 帮您 24 小时监控站点、设备、API 的状态，咕咕监控是您的运维工具人\n\n在数字化时代，服务的稳定性直接关系到用户体验和业务连续性。不管是独立开发者还是中小型企业，随着 Web 应用、API 数据接口或者设备越来越多，经常不知道什么时候某一个功能模块宕机了，而等发现宕机的时候可能已经是很多天以后了。对于孵化中的产品来说，这种情况更是会造成宝贵种子用户的流失。\n\n咕咕监控是一款专业的**网站、API 接口、服务器与各类 IP 设备**监控平台。通过分布式监测节点，提供稳定的检测服务与多渠道告警通知，让您告别手动检查的繁琐，实现真正的智能化运维。\n\n## 🚀 全平台覆盖，随时随地掌控服务状态\n\n目前应用已全面支持：\n\n- **[iOS 版本](https://www.gugujiankong.com/)**：完美适配 iPhone 和 iPad，原生体验流畅\n- **[Android 版本](https://www.gugujiankong.com/#download)**：兼容各种安卓设备，性能优化出色\n- **🎉 微信小程序版本**：重磅发布！无需下载，微信搜索「咕咕监控」即可体验\n\n### 📱 微信小程序：轻量化监控的新选择\n\n微信小程序版本的发布，标志着咕咕监控在便捷性方面的重大突破。作为团队协作和移动办公的重要补充，小程序版本具有以下特色功能：\n\n**🎛️ 实时概览面板**\n\n- Dashboard 一屏呈现所有监控状态\n- 异常项目红色高亮显示，一目了然\n- 关键指标数据可视化展示\n\n**⚡ 快速配置向导**\n\n- 模板化配置流程，从创建到生效仅需 30 秒\n- 支持网站、API、设备、SSL 证书等多种监控类型\n- 智能推荐监控参数设置\n\n**🔔 智能通知中心**\n\n- 告警消息分类管理，支持批量操作\n- 快速响应机制，一键确认处理\n- 通知历史记录，便于问题追踪\n\n**📈 数据分析与分享**\n\n- 内嵌 ECharts 图表，支持缩放交互\n- 监控数据可生成图片便于分享汇报\n- 离线缓存功能，网络不佳时仍可查看历史信息\n\n![咕咕监控主界面](https://devopenclub.parryqiu.com/blog-images/FireShot%20Capture%20191%20-%20%E5%92%95%E5%92%95%E7%9B%91%E6%8E%A7%20-%20%E4%B8%93%E6%B3%A8%E4%BA%8E%E7%BD%91%E7%AB%99%E3%80%81%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%81%E6%8E%A5%E5%8F%A3%E4%B8%8E%E8%AE%BE%E5%A4%87%E7%9B%91%E6%8E%A7%20-%20www.gugujiankong.com.png)\n\n## 🌐 网站在线监控：无侵入式的全方位守护\n\n对于网站类的连通监控，咕咕监控提供了灵活而强大的监控能力：\n\n**🔧 灵活的监控配置**\n\n- 支持 HTTP/HTTPS 协议检测\n- 可设置 1 分钟、5 分钟、15 分钟或 1 小时的监控频率\n- 自定义超时时间和重试次数\n- 支持 User-Agent 和请求头配置\n\n**📊 全面的性能监测**\n\n- 实时响应时间监控\n- 状态码检测与分析\n- 可用性统计与 SLA 计算\n- 性能趋势图表展示\n\n**🛡️ 安全无侵入**\n\n- 无需在服务器安装任何客户端\n- 采用外部节点检测，避免安全风险\n- 支持 SSL 证书监控，提前预警到期风险\n\n![网站监控界面](https://devopenclub.parryqiu.com/20210705100728.png)\n\n## 🔗 API 接口断言监控：精准的业务逻辑验证\n\n除了基础的连通性监控，咕咕监控在 API 监控方面提供了更加精细化的解决方案：\n\n**🎯 智能断言机制**\n\n- 支持 GET、POST、PUT、DELETE 等多种请求方式\n- 可配置请求参数、请求头和请求体\n- 断言类型支持 Number、String、Bool 以及 JSON 类型\n- 支持复杂的 JSON 路径断言\n\n**🚀 业务逻辑验证**\n\n- 不仅检测接口连通性，更验证返回数据的正确性\n- 支持多层级 JSON 数据断言\n- 可设置响应时间阈值监控\n- 适用于微服务架构的接口监控\n\n**📈 详细的接口分析**\n\n- 接口响应时间统计\n- 成功率和失败率分析\n- 错误类型分类统计\n- 接口性能趋势分析\n\n这种精准的监控方式特别适合现代微服务架构，因为后端接口的异常可能会影响到网站、移动 App、IoT 设备等多个终端的正常运行。\n\n![API 监控界面](https://devopenclub.parryqiu.com/20210705100744.png)\n\n## 💻 设备监控：硬件设施的健康管家\n\n对于服务器、路由器、交换机等网络设备，咕咕监控通过 PING 监控提供专业的连通性检测：\n\n**🔍 精准的连通性检测**\n\n- 基于 ICMP 协议的 PING 检测\n- 支持 IPv4 和 IPv6 地址监控\n- 可配置检测包大小和超时时间\n- 支持连续检测和故障确认机制\n\n**📊 详细的性能数据**\n\n- 最小、最大、平均响应时间统计\n- 丢包率监控和分析\n- 网络质量评估报告\n- 设备健康状况趋势图\n\n**🏢 企业级设备管理**\n\n- 支持设备分组管理\n- 可设置设备优先级\n- 支持批量导入设备信息\n- 设备状态批量查看\n\n![设备监控界面](https://devopenclub.parryqiu.com/20210221164257.png)\n\n## 🔔 多渠道告警：确保消息必达\n\n咕咕监控采用多渠道告警机制，确保重要消息能够及时送达：\n\n**📱 多样化通知方式**\n\n- App 推送通知（支持 iOS 和 Android）\n- 微信消息推送\n- 短信告警通知\n- 邮件通知（即将开放）\n\n**🎛️ 智能告警策略**\n\n- 可设置告警升级机制\n- 支持静默时段配置\n- 告警频率控制，避免消息轰炸\n- 支持告警模板自定义\n\n**👥 团队协作功能**\n\n- 支持多人接收告警\n- 可按项目分配责任人\n- 告警确认和处理流程\n- 值班安排和轮换机制\n\n## 🏆 用户价值与应用场景\n\n**💼 适用用户群体**\n\n- **独立开发者**：个人博客、小程序、API 服务监控\n- **创业团队**：缺乏专业运维的中小企业\n- **技术团队**：需要统一监控管理的开发团队\n- **运维人员**：需要轻量化监控解决方案的运维工程师\n\n**📈 核心价值体现**\n\n- **降低运维成本**：无需搭建复杂的监控系统\n- **提升响应速度**：第一时间发现并处理问题\n- **保障服务稳定**：7×24 小时不间断监控\n- **数据驱动决策**：详细的监控数据支撑业务优化\n\n## 🎯 技术优势与特色\n\n**🌍 分布式监测网络**\n\n- 全国多个城市部署监测节点\n- 10ms 级别的监控精度\n- 高可用架构设计，确保监控服务稳定\n\n**🔒 安全与隐私保护**\n\n- 数据传输采用 HTTPS 加密\n- 严格的权限控制机制\n- 符合相关安全标准和规范\n\n**🔧 易用性设计**\n\n- 简洁直观的用户界面\n- 向导式配置流程\n- 丰富的帮助文档和使用指南\n\n咕咕监控已为众多用户提供了可靠的监控服务，从个人开发者到企业用户，都能在这里找到适合的监控解决方案。通过这个轻量型的运维工具，您可以节约大量的人力与精力，无须自己构建复杂的健康监控系统，即可在设施出现健康异常时收到及时提醒，进行快速响应处理。\n\n**立即体验咕咕监控：**\n\n- 🌐 官网：[https://www.gugujiankong.com/](https://www.gugujiankong.com/)\n- 📱 微信小程序：搜索「咕咕监控」\n- 📲 移动应用：App Store 和各大安卓应用商店均可下载\n\n---\n\n_咕咕监控，让服务监控更简单、更可靠_ 🛡️\n",
    "created_at": "2025-07-13T13:47:07Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7259"
  },
  {
    "id": 7258,
    "title": "【工具自荐】一个户外轨迹导航软件",
    "content": "无广告，支持离线地图，等高线和 3D卫星地图，手机端功能完全免费。\n可以用运动记录或导入Gpx轨迹记录生成炫酷轨迹视频.\n\n![Image](https://github.com/user-attachments/assets/1537b737-b94b-4836-ae0c-f6246bbe4552)\n\n下载地址：\nhttps://apps.apple.com/cn/app/id6736378337\n\n轨迹演示视频\nhttps://cdn.onlytalk.top/tmp/flyover.mp4\n\nPS:\n感谢阮老师之前在文章中收录过我开发的另两款 App：顶瓜瓜-坐姿提醒、小鹿查单词 app。",
    "created_at": "2025-07-13T13:34:27Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7258"
  },
  {
    "id": 7257,
    "title": "【工具自荐】配置文件管理器：支持本地与远程配置文件的统一管理、编辑、刷新",
    "content": "# 工具名称\n配置文件管理器：支持本地与远程配置文件的统一管理、编辑、刷新\n\n# 网址链接\n代码仓库地址： [https://github.com/HeroIsUseless/configeditor](https://github.com/HeroIsUseless/configeditor)\n\n官网： [https://config-editor-page.vercel.app/](https://config-editor-page.vercel.app/)\n\n# 工具简介\n一个基于 Electron + React + TypeScript 的现代化配置文件管理器，支持本地与远程配置文件的统一管理、编辑、刷新和权限操作，界面美观，体验流畅。\n\n四、详细介绍：\n我挺烦改配置文件，比如说改个服务器的nginx配置文件：\n1. 首先要登服务器，我需要首先把服务器的用户名密码找出来\n2. 其次我需要找到nginx配置文件的位置，虽然是默认位置但我老是忘，每次都要百度一下nginx配置文件默认放在哪里\n3. 然后我需要用vim打开这个配置文件，我vim命令记得少，所以改起来就挺麻烦\n4. nginx的语法我记得不多，每次改我都要百度或用AI查语法\n5. 然后我需要重启服务器，重启命令我还是记不住，还是得百度现搜\n\n因此我怒造了一个配置文件管理器，只要将nginx文件导入进配置文件管理器后，后面想改nginx配置的时候就直接打开配置文件管理器，monaco-editor支持代码缩进和着色，附带AI窗口询问文件内容，一键保存和重启服务器，非常的方便。\n\n而且不仅可以管理配置文件用，还可以用来加载日志文件，当一个方便的日志查看器使用。\n\n<img width=\"1053\" height=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e715fdf3-e098-4536-b84f-5afa24d12a22\" />\n\n# 主要功能\n\n- 🌈 简洁直观的用户界面，支持浅色/深色主题\n- 🗂️ 快速管理和刷新多个本地/远程配置文件\n- 🔒 支持 sudo 权限保存和命令执行\n- 🖥️ 文件路径一键复制，实时状态监控\n- 🤖 内置 AI 助手，智能分析和辅助编辑\n- 🛠️ 支持自定义刷新命令，适配多种场景\n- 🧩 支持拖拽排序、搜索、批量管理\n\n# 工具页面截图\n\n<img width=\"1053\" height=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e715fdf3-e098-4536-b84f-5afa24d12a22\" />",
    "created_at": "2025-07-13T08:25:22Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7257"
  },
  {
    "id": 7256,
    "title": "【工具自荐】免费发布平台",
    "content": "名字：\nstarter best： \n\n网址：\nhttps://starterbest.com/\n\n\n简短描述：\nLaunch Product , Starter Best\n\n\n详细描述：\n\nStarter Best is a friendly platform that helps you find the coolest new apps, websites, and tech products every day. We highlight handpicked launches so you can stay on top of trends, discover useful tools, and share your own project with a growing community.\n",
    "created_at": "2025-07-13T07:29:48Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7256"
  },
  {
    "id": 7255,
    "title": "【开源自荐】纯Rust开源音视频流媒体服务",
    "content": "## 介绍\n\nXiu是使用纯Rust开发的直播流媒体框架，目标是让开发者方便、快捷的搭建直播流媒体服务。它即支持流行的流媒体协议，如RTMP/HTTP-FLV/HLS等，可以开箱即用，也能方便的对其它协议进行扩展，进行按需开发。\n\n目前支持的功能包括：\n\n-  支持多平台（Linux/Mac/Windows）\n- 支持RTMP\n- 支持发布和订阅H264/AAC 直播流；\n- 支持秒开（Gop cache）；\n- 支持转换到HLS/HTTP-FLV协议；\n- 支持部署集群；\n- 支持RTSP\n- 支持通过TCP（Interleaved）和UDP发布或订阅H.265/H.264/AAC流；\n- 支持转换到RTMP/HLS/HTTP-FLV协议；\n- 支持WebRTC（Whip/Whep）\n- 支持使用Whip发布rtc流；\n- 支持使用Whep订阅rtc流；\n- 支持转换到RTMP/HLS/HTTP-FLV协议；\n- 支持订阅HLS/HTTPFLV直播流\n- 支持命令行或者配置文件配置服务\n- 支持HTTP API/notify\n- 支持查询流信息；\n- 支持流事件通知；\n- 支持token鉴权\n- 支持把直播流录制成HLS协议(m3u8+ts)文件\n\n\n\n\n## 链接\n【github】 https://github.com/harlanc/xiu\n【官网】https://www.rustxiu.com/zh-cn/",
    "created_at": "2025-07-13T03:27:33Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7255"
  },
  {
    "id": 7254,
    "title": "【工具自荐】极简网页版API调试神器",
    "content": "# 🚀 WebCurl - 极简网页版API调试神器\n\n> **https://github.com/o8oo8o/WebCurl**\n\n> **⚡ 一个文件搞定所有API测试需求 | 🎯 替代Postman的轻量级选择 | 🔒 数据本地化，安全无忧**\n\n[![Go Version](https://img.shields.io/badge/Go-1.19+-blue.svg)](https://golang.org)\n[![License](https://img.shields.io/badge/License-MIT-green.svg)](LICENSE)\n[![Platform](https://img.shields.io/badge/Platform-Windows%20%7C%20Linux%20%7C%20MacOS%20%7C%20ARM-lightgrey.svg)]()\n\n## ✨ 为什么选择 WebCurl？\n\n还在为API调试工具而烦恼吗？Postman太臃肿？curl命令行太复杂？试试 **WebCurl** 吧！\n\n🎉 **一个8MB的二进制文件 = 完整的API测试解决方案**\n\n💡 **源码极简**：仅2个文件（`index.html` + `main.go`）实现完整功能\n\n### 🌟 核心优势对比\n\n| 特性 | WebCurl | Postman | curl |\n|------|---------|---------|------|\n| **安装复杂度** | ⭐ 一个文件 | ⭐⭐⭐ 需要安装 | ⭐⭐ 命令行 |\n| **跨域支持** | ✅ 完美解决 | ✅ 原生支持 | ✅ 原生支持 |\n| **文件大小** | 10MB        | 200MB+      | 系统自带 |\n| **离线使用** | ✅ 完全离线 | ❌ 需要登录 | ✅ 完全离线 |\n| **数据安全** | ✅ 本地存储 | ❌ 云端同步 | ✅ 本地存储 |\n| **信创兼容** | ✅ 完美支持 | ❌ 有限支持 | ✅ 完美支持 |\n| **IPv6支持** | ✅ 完美支持 | ✅ 支持 | ✅ 原生支持 |\n| **源码简洁** | ✅ 仅2个文件 | ❌ 复杂项目 | ❌ 复杂项目 |\n| **实时通信** | ✅ WebSocket+SSE | ❌ 仅HTTP | ❌ 仅HTTP |\n| **调试接口** | ✅ 内置EchoServer | ❌ 需额外工具 | ❌ 需额外工具 |\n\n## 📖 简介\n\n本项目是一个极致轻量、跨平台、无依赖的 HTTP 请求转发与调试工具，**本质上就是一个网页版的API测试与调试工具**，适合接口开发、调试、测试等多种场景。\n\n- **前端**：纯原生 HTML+JS+CSS，无任何第三方库或依赖，开箱即用，加载速度极快。\n- **后端**：仅使用 Golang 标准库，无任何第三方依赖，安全可靠。\n- **源码极简**：整个项目仅包含2个文件（`index.html` + `main.go`），代码结构清晰，易于理解和维护。\n- **产物**：编译后仅有一个约 14M 的单一二进制文件（含前端页面），无需安装、无需环境、无需依赖，直接运行。\n- **平台支持**：支持 Windows、Linux、MacOS、ARM、x86_64、信创（国产芯片/操作系统）等主流及国产平台，真正做到\"一次编译，到处运行\"。\n- **网络支持**：完美支持 IPv4 和 IPv6 网络协议，适应各种网络环境。\n- **实时通信**：原生支持 WebSocket 和 SSE（Server-Sent Events），满足实时数据推送需求。\n- **内置调试服务**：集成强大的EchoServer，提供完整的请求回显和响应控制功能。\n- **适用场景**：接口联调、API 测试、前端跨域调试、信创环境接口测试、离线/内网环境接口调试等。\n- **数据本地化存储,保障安全**：所有接口信息、历史记录、变量、全局头等均仅存储于本地浏览器（localStorage），不会同步到云端或外部服务器，保障接口数据的私密性与安全性，适合企业内网、敏感环境使用。\n\n**主要用途**：API 测试与调试,替代某些需要登录才能使用工具(xxxxMan,xxxFox)\n\n- 支持多种请求体格式（form-data、x-www-form-urlencoded、json、text、xml、binary）\n- 支持文件上传、下载\n- 支持请求重试、超时、SSL 验证、重定向等高级选项\n- 支持 WebSocket 和 SSE（Server-Sent Events）实时通信\n- 内置美观易用的前端页面，支持接口历史、变量、全局头、接口集合管理\n- 支持命令行参数自定义监听端口、静态目录、日志、SSL 等\n- **内置EchoServer调试服务**：提供完整的请求回显、响应控制、流式通信功能\n\n---\n\n![演示截图](https://gitee.com/o8oo8o/public/raw/master/webcurl_01.png)\n\n---\n\n![演示截图](https://gitee.com/o8oo8o/public/raw/master/webcurl_02.png)\n\n---\n\n## 🛠️ 功能特性\n\n### 🔥 核心功能\n- **🌐 网页版 Postman 体验**：无需安装客户端，浏览器即用，界面美观，功能丰富。\n- **🔄 HTTP 请求转发**：前端通过 `/api/forward` 接口将请求参数提交给后端，后端代为转发并返回结果，突破浏览器跨域限制。\n- **支持 HTTP CONNECT 代理隧道**：支持 HTTP CONNECT 方法，可作为 HTTPS/SSH 等协议的代理隧道，适用于 curl、ssh、ncat 等工具的代理转发。\n- **📁 多种请求体支持**：支持 `form-data`（含多文件上传）、`x-www-form-urlencoded`、`json`、`text`、`xml`、`binary`。\n- **🔧 请求头自定义**：支持自定义任意请求头。\n- **📤 文件上传/下载**：支持多文件上传，响应内容可直接下载。\n- **🔄 请求重试与超时**：可配置重试次数、重试间隔、超时时间。\n- **🔒 SSL 验证与重定向**：可选择是否校验 SSL 证书、是否自动跟随重定向。\n- **📚 前端功能丰富**：接口历史、接口集合、变量替换、全局请求头、导入导出等。\n- **⚙️ 命令行灵活配置**：支持自定义监听地址、端口、静态目录、日志、SSL 证书等。\n- **⚡ 极致轻量**：单一二进制文件，体积仅约 10M，部署、迁移、分发极其方便。\n- **💾 无依赖、易运维**：无需数据库、无需外部依赖，直接运行。\n- **🖥️ 跨平台/信创兼容**：支持主流操作系统及国产软硬件平台，适合信创环境、内网、离线等特殊场景。\n- **🌐 网络协议支持**：完美支持 IPv4 和 IPv6 网络协议，适应各种网络环境。\n- **🔌 实时通信支持**：原生支持 WebSocket 和 SSE（Server-Sent Events），满足实时数据推送需求。\n\n### 🎯 EchoServer 调试服务\n- **🔄 智能请求回显**：自动解析并回显请求的URL、方法、请求头、请求体（文本、表单、文件、二进制等）。\n- **🎛️ 灵活响应控制**：支持通过自定义请求头或URL参数灵活控制响应内容和行为。\n- **📊 多种响应格式**：支持JSON、XML、Text等多种响应格式。\n- **⏱️ 响应延迟控制**：可自定义响应延迟时间，模拟网络延迟场景。\n- **📥 下载响应控制**：支持将响应内容作为文件下载。\n- **🔌 流式通信支持**：SSE和WebSocket接口支持流式数据推送。\n- **🎯 自定义数据队列**：支持预设响应数据，实现自定义流式推送。\n- **🛡️ 健壮性保障**：内置panic恢复机制，防止服务崩溃。\n\n### 🌐 静态文件服务器\n- **📁 完整文件服务**：类似Nginx的静态文件服务器功能，支持所有常见文件类型。\n- **🎨 丰富MIME支持**：自动识别HTML、CSS、JS、图片、音频、视频、字体等文件类型。\n- **🔒 安全防护**：防止路径遍历攻击，确保文件访问安全。\n- **⚡ 高性能**：支持大文件传输，内置缓存控制。\n- **🌍 CORS支持**：内置跨域资源共享支持，适合前端开发。\n- **📱 移动友好**：支持移动设备访问，响应式设计。\n\n### 🧰 常用工具\n- **JWT解析**：支持一键解析 JWT Token，快速查看 Payload 信息，便于调试鉴权接口。\n- **UUID生成**：支持生成标准 UUID，方便接口测试与数据填充。\n- **时间戳转换**：支持毫秒/秒时间戳与日期时间的相互转换，适配多种场景。\n- **Base64编解码**：支持 Base64 字符串的编码与解码，便于处理二进制与文本数据。\n- **Token生成器**：支持自定义规则生成随机 Token，适合接口测试、模拟登录等场景。\n\n\n---\n\n## 🚀 快速开始\n\n### 1️⃣ 编译 & 运行（30秒搞定）\n\n**源码结构极简**：\n```\nWebCurl/\n├── index.html    # 前端界面（纯原生HTML+JS+CSS）\n└── main.go       # 后端服务（Go标准库）\n```\n\n```bash\n# 编译\ngo build -o WebCurl main.go\n\n# 运行（默认 0.0.0.0:4444，内嵌前端页面）\n./WebCurl\n\n# 浏览器访问\nhttp://localhost:4444\n```\n\n### 2️⃣ 命令行参数\n\n| 参数                | 说明                                   | 默认值                |\n|---------------------|----------------------------------------|-----------------------|\n| `--host`            | 监听地址                               | 0.0.0.0               |\n| `--port`            | 监听端口                               | 4444                  |\n| `--webroot`         | 静态文件根目录（为空用内嵌 index.html）| 空                    |\n| `--daemon`          | 后台运行（支持 Windows/Linux/Mac）     | false                 |\n| `--echo-server`     | 是否开启EchoServer调试服务              | true                  |\n| `--log-level`       | 日志级别（error, info, debug）         | error                 |\n| `--log-file`        | 日志文件路径                           | post_api.log          |\n| `--log-size`        | 日志文件大小限制（K/M/G）              | 100M                  |\n| `--ssl-cert`        | SSL 证书文件路径                       | ssl_cert.pem          |\n| `--ssl-cert-key`    | SSL 证书密钥路径                       | ssl_cert.key          |\n| `--upload-dir`      | form-data上传文件保存目录（为空仅透传） | 空                    |\n| `--stdout-log`      | 是否在控制台打印日志，true为同时输出到控制台和文件，false仅输出到文件 | true                  |\n\n#### 启动示例\n\n```bash\n# 默认（0.0.0.0:4444，内嵌index.html，开启EchoServer）\n./WebCurl\n\n# 指定端口和host\n./WebCurl --host 127.0.0.1 --port 8888\n\n# 指定静态目录\n./WebCurl --webroot /tmp/www\n\n# 控制日志是否输出到控制台\n./WebCurl --stdout-log=false\n\n# 开启静态文件服务器模式（指定目录）\n./WebCurl --webroot /mnt/webroot\n\n# 关闭EchoServer调试服务\n./WebCurl --echo-server=false\n\n# 后台运行（Linux/MacOS/Windows）\n./WebCurl --daemon\n\n# 组合\n./WebCurl --host 0.0.0.0 --port 9000 --webroot /tmp/www --daemon --stdout-log=false\n\n```\n\n### 🐳 容器化部署 · 极速上云\n\n### 🚀 一键 Docker 部署\n\nWebCurl 天生适合容器化，支持 Docker/Kubernetes 等主流云原生环境，轻松实现弹性扩展与自动化运维！\n\n#### 1️⃣ Docker 镜像构建与运行\n\n```bash\n# 构建镜像\ndocker build -t webcurl:2.2 .\n\n# 运行容器（默认 0.0.0.0:4444）\ndocker run -d -p:4444:4444 --name webcurl  webcurl:2.2\n\n# 指定数据/静态目录挂载\ndocker run -d --name webcurl -p 4444:4444 -v /usr/share/nginx/html/:/usr/local/WebCurl/webroot webcurl:2.2 /usr/local/WebCurl/WebCurl --webroot=/usr/local/WebCurl/webroot\n```\n\n#### 2️⃣ Kubernetes 极速部署\n\nWebCurl 完美兼容 K8S，支持无状态部署、弹性伸缩、健康检查等企业级需求。\n\n**示例 Deployment 配置：**\n\n```yaml\n######################################\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: webcurl\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: webcurl\n  template:\n    metadata:\n      labels:\n        app: webcurl\n    spec:\n      containers:\n      - name: webcurl\n        image: webcurl:2.2\n        ports:\n        - containerPort: 4444\n#        args: [\"/usr/local/WebCurl/WebCurl\",\"--echo-server=true\",\"--port=4444\"]\n---\napiVersion: v1\nkind: Service\nmetadata:\n  name: webcurl\nspec:\n  type: NodePort\n  ports:\n    - port: 4444\n      targetPort: 4444\n      nodePort: 30444\n  selector:\n    app: webcurl\n######################################\n```\n\n> 只需 `kubectl apply -f webcurl.yaml`，即可在 K8s 集群中弹性部署 WebCurl！\n\n### 🌈 容器化优势\n\n- **极致轻量**：单一二进制+极简镜像，启动快、资源占用低\n- **云原生友好**：无状态设计，天然适配 K8S、Docker、OpenShift 等平台\n- **弹性扩展**：支持副本横向扩展，轻松应对高并发\n- **自动化运维**：支持健康检查、日志挂载、配置注入\n- **一键迁移**：镜像即服务，随时随地部署到任意云/集群/本地\n\n---\n\n**WebCurl，让 API 调试与测试像部署静态网站一样简单，轻松上云，随时随地，安全高效！**\n\n---\n\n## 🎯 适用场景\n\n### 💼 企业级应用\n- **内网环境**：数据不出内网，安全可控\n- **信创环境**：完美支持国产芯片和操作系统\n- **离线部署**：无网络环境也能正常使用\n- **团队协作**：配置可导出分享，便于团队统一\n\n### 👨‍💻 开发者日常\n- **接口联调**：前后端接口调试必备\n- **API测试**：自动化测试前的接口验证\n- **跨域调试**：完美解决前端跨域问题\n- **文件上传测试**：支持多文件上传测试\n- **接口调试**：EchoServer提供完整的请求回显和响应控制\n\n### 🔧 运维测试\n- **接口监控**：定期测试关键接口状态\n- **性能测试**：支持重试和超时配置\n- **SSL测试**：SSL证书验证测试\n- **重定向测试**：自动跟随重定向测试\n- **实时通信测试**：WebSocket连接和SSE事件流测试\n- **网络延迟模拟**：EchoServer支持响应延迟控制\n\n### 🌐 静态文件服务\n- **网站托管**：快速部署静态网站，支持HTML、CSS、JS等\n- **文件分享**：企业内部文件分享和下载服务\n- **开发环境**：前端开发时的本地文件服务器\n- **文档服务**：API文档、技术文档的在线访问\n- **资源托管**：图片、视频、音频等多媒体资源托管\n- **CDN替代**：小型项目的CDN服务替代方案\n\n---\n\n## 📖 前端使用说明\n\n### 1. 访问页面\n\n启动后，浏览器访问 `http://localhost:4444`，即可进入 Postman 风格的调试页面。\n\n### 2. 请求模式自动切换\n\n- 前端会自动请求 `/api/mode`，如返回 `{ \"mode\": \"proxy\" }`，则所有请求将通过后端 `/api/forward` 转发，解决跨域问题。\n- 否则，前端直接用 fetch 发起请求。\n\n### 3. 发送请求（代理模式）\n\n- 支持 GET/POST/PUT/DELETE/PATCH/HEAD/OPTIONS 等方法\n- 支持多种请求体格式、文件上传、请求头自定义\n- 支持变量替换、全局头、接口集合、历史记录等\n- 支持请求参数、重试、超时、SSL 验证、重定向等高级选项\n\n---\n\n## 🔧 后端接口说明\n\n### 1. `/api/forward`（POST）\n\n用于前端通过 form-data 方式提交请求参数，由后端转发到目标接口。\n\n#### 支持的 form-data 字段\n\n| 字段名         | 类型/说明         | 示例/说明                                  |\n|----------------|------------------|--------------------------------------------|\n| url            | string           | 目标接口地址                               |\n| time_out       | int              | 超时时间（秒），0为不超时                  |\n| retry_count    | int              | 重试次数，0为不重试                        |\n| retry_delay    | int              | 重试间隔（秒），0为无间隔                  |\n| method         | string           | 请求方法，默认 GET                         |\n| body_type      | string           | 请求体类型，见下表                         |\n| headers        | json字符串       | `[{\"name\":\"X-Token\",\"value\":\"abc\"}]`       |\n| file_info      | json字符串       | `[{\"field_name\":\"files\",\"file_name\":\"a.txt\"}]` |\n| files          | 文件             | 支持多文件上传                             |\n| body           | string           | 请求体内容（json/xml/text等）              |\n| verify_ssl     | Y/N              | 是否校验SSL，默认Y                         |\n| follow_redirect| Y/N              | 是否自动跟随重定向，默认Y                  |\n\n#### body_type 支持\n\n- `form-data`：多文件上传，表单参数\n- `x-www-form-urlencoded`：标准表单\n- `json`：application/json\n- `text`：text/plain\n- `xml`：application/xml\n- `binary`：二进制文件上传\n- `none`：无请求体\n\n### 2. `/api/mode`（GET）\n\n返回当前后端模式，前端据此判断是否需要通过后端转发。\n\n**返回示例**\n\n```json\n{ \"mode\": \"proxy\" }\n```\n\n### 3. EchoServer 调试接口\n\n#### 3.1 `/api/echo`（所有HTTP方法）\n\n**功能**：智能请求回显，支持灵活的响应控制。\n\n**特性**：\n- 支持所有HTTP方法（GET、POST、PUT、DELETE、PATCH、HEAD、OPTIONS等）\n- 自动解析并回显请求的URL、方法、请求头、请求体\n- 支持文本、表单、文件上传、二进制等多种请求体类型\n- 支持通过自定义请求头或URL参数灵活控制响应\n\n**响应控制参数**：\n\n| 请求头                  | 作用                                                | 示例值                         |\n|-------------------------|---------------------------------------------------|--------------------------------|\n| X-Response-Status-Code  | 控制HTTP响应状态码                                | 201、404、500                  |\n| X-Response-Location     | 设置响应Location头                               | https://www.qq.com             |\n| X-Response-Headers      | 批量设置响应头（JSON字符串，键值对）              | {\"X-Foo\":\"Bar\"}              |\n| X-Response-Type         | 控制响应体格式（json/xml/text）                 | json、xml、text                      |\n| X-Response-Sleep        | 控制响应延迟（单位：毫秒）                       | 200、1000                      |\n| X-Response-Body         | 指定Base64编码的响应body内容（优先级最高）        | `eyJtc2ciOiJoZWxsbyJ9`         |\n| X-Response-Download     | 控制响应为下载，指定下载文件名                     | data.txt、result.json          |\n\n**参数传递方式**：\n- 支持请求头方式：`curl -H \"X-Response-Status-Code: 202\" http://localhost:4444/api/echo`\n- 支持URL参数方式：`curl \"http://localhost:4444/api/echo?X-Response-Status-Code=202\"`\n- **请求头优先级高于URL参数**\n\n**基本用法示例**：\n```bash\n# 普通请求\ncurl -X GET http://localhost:4444/api/echo\ncurl -X POST -d 'Hello World' http://localhost:4444/api/echo\n\n# 表单与文件上传\ncurl -X POST -F 'text=Hello' -F 'file=@/path/to/file' http://localhost:4444/api/echo\n\n# 控制响应状态码\ncurl -H \"X-Response-Status-Code: 202\" http://localhost:4444/api/echo\n\n# 控制响应类型\ncurl -H \"X-Response-Type: xml\" http://localhost:4444/api/echo\ncurl -H \"X-Response-Type: text\" -d \"a simple text body\" http://localhost:4444/api/echo\n\n# 控制响应延迟\ncurl -H \"X-Response-Sleep: 500\" http://localhost:4444/api/echo\n\n# 自定义响应体（Base64编码）\ncurl -H \"X-Response-Body: eyJtc2ciOiJoZWxsbyJ9\" http://localhost:4444/api/echo\n\n# 下载响应内容\ncurl -H \"X-Response-Download: data.txt\" http://localhost:4444/api/echo -OJ\n```\n\n**响应结构**：\n```json\n{\n  \"method\": \"POST\",\n  \"url\": \"http://localhost:4444/api/echo\",\n  \"headers\": [\n    {\"key\": \"Content-Type\", \"value\": \"application/json\"},\n    ...\n  ],\n  \"body\": \"Hello World\"\n}\n```\n\n#### 3.2 `/api/sse/echo`（SSE流式接口）\n\n**功能**：Server-Sent Events流式回显，适合前端流式消费。\n\n**特性**：\n- 支持所有HTTP方法\n- 返回SSE流，每条消息为JSON\n- 支持自定义响应参数\n- 支持流式数据推送\n\n**额外参数**：\n- `X-Response-Sse-Count`：SSE消息条数，默认100\n- `X-Response-Sleep`：每条SSE消息间隔（毫秒），默认500\n\n**用法示例**：\n```bash\n# 基本SSE请求\ncurl http://localhost:4444/api/sse/echo\n\n# POST带body\ncurl -X POST -d 'Hello SSE' http://localhost:4444/api/sse/echo\n\n# 控制SSE消息条数和间隔\ncurl -H \"X-Response-Sse-Count: 5\" -H \"X-Response-Sleep: 1000\" http://localhost:4444/api/sse/echo\n\n# SSE上传文件\ncurl -X POST -F 'file=@/path/to/file' http://localhost:4444/api/sse/echo\n```\n\n#### 3.3 `/api/ws/echo`（WebSocket接口）\n\n**功能**：WebSocket流式回显，适合前端WebSocket流式消费。\n\n**特性**：\n- 支持WebSocket协议，升级连接后推送多条消息\n- 支持所有HTTP方法（WebSocket仅升级GET，其他方法通过header传递）\n- 支持自定义响应参数\n\n**额外参数**：\n- `X-Response-Websocket-Count`：WebSocket消息条数，默认100\n- `X-Response-Sleep`：每条消息间隔（毫秒），默认500\n\n**用法示例**：\n```bash\n# WebSocket基本请求（需WebSocket客户端）\nwscat -c ws://localhost:4444/api/ws/echo\n\n# 控制消息条数和间隔\nwscat -c \"ws://localhost:4444/api/ws/echo?X-Response-Websocket-Count=5&X-Response-Sleep=1000\"\n\n# WebSocket自定义响应内容（Base64）\nwscat -c \"ws://localhost:4444/api/ws/echo?X-Response-Body=eyJtc2ciOiJoZWxsbyB3cyJ9\"\n```\n\n#### 3.4 自定义数据队列接口\n\n**`POST /api/sse/set`**：设置SSE响应的消息队列\n**`POST /api/ws/set`**：设置WebSocket响应的消息队列\n\n**功能**：预设响应数据，实现自定义流式推送。\n\n**请求体格式**：\n```json\n[\n  {\"value\": {\"v\": 1, \"data\": \"mydata\"}},\n  {\"value\": {\"v\": 2, \"data\": 123}},\n  {\"value\": \"mydata\"},\n  {\"value\": null},\n  {\"value\": 123}\n]\n```\n\n#### 3.5 响应模式控制\n\n通过请求头 `X-Response-Mode` 控制SSE/WS响应行为：\n\n- `default`（默认）：原有回显逻辑，自动回显请求内容\n- `user`：从预设队列中依次取出value作为响应体\n- `react`：连接建立后等待用户推送数据（WebSocket专用）\n\n**用法示例**：\n```bash\n# 设置SSE队列\ncurl -X POST -H \"Content-Type: application/json\" \\\n  -d '[{\"value\":{\"v\":1,\"data\":\"mydata\"}}, {\"value\":{\"v\":2,\"data\":123}}]' \\\n  http://localhost:4444/api/sse/set\n\n# SSE user模式消费\ncurl -H \"X-Response-Mode: user\" http://localhost:4444/api/sse/echo\n\n# 设置WS队列\ncurl -X POST -H \"Content-Type: application/json\" \\\n  -d '[{\"value\":{\"v\":1,\"data\":\"mydata\"}}, {\"value\":{\"v\":2,\"data\":123}}]' \\\n  http://localhost:4444/api/ws/set\n\n# WS user模式消费\nwscat -c \"ws://localhost:4444/api/ws/echo?X-Response-Mode=user\"\n```\n\n### 4. HTTP CONNECT 代理隧道支持\n\n**功能**：支持 HTTP CONNECT 方法，可作为 HTTPS/SSH 等协议的代理隧道。\n\n- 可直接作为 curl、ssh、ncat 等工具的 HTTP 代理服务器。\n- 通过 CONNECT 建立 TCP 隧道，支持 HTTPS、WebSocket、SSH 等协议的转发。\n- 适合企业内网、开发测试等需要代理隧道的场景。\n\n**用法示例**：\n\n```bash\n# curl 通过 HTTP 代理访问 HTTPS 站点\ncurl -k -x http://localhost:4444 https://www.example.com\n\n# ssh 通过 HTTP 代理\nssh -o \"ProxyCommand ncat --proxy 127.0.0.1:4444 --proxy-type http %h %p\" user@host\n```\n\n- 该功能无需额外配置，服务启动后自动支持。\n- 日志中会记录 CONNECT 隧道的建立与关闭。\n\n---\n\n## 🎨 前端高级功能\n\n- **📊 接口历史**：自动保存最近 50 条请求历史，支持一键加载、导入导出、清空\n- **📚 接口集合**：支持多集合管理，接口保存、导入导出、删除\n- **🔧 变量管理**：支持变量定义与替换，便于环境切换\n- **🎛️ 全局请求头**：支持全局头配置，自动合并到每次请求\n- **⚙️ 请求配置**：支持 SSL 验证、重定向、超时、重试、缓存、mode、credentials、referrerPolicy 等高级 fetch 选项\n- **💾 导入导出**：支持全部配置一键导入导出，便于迁移和备份\n\n---\n\n## 🔍 常见问题\n\n### ❓ 为什么需要后端转发？\n> 由于浏览器同源策略，前端直接请求第三方接口会遇到 CORS 限制。通过本工具的后端转发，前端只需请求本地服务即可，后端再代为请求目标接口，绕过跨域限制。\n\n### ❓ 如何上传多个文件？\n> 在前端选择 `form-data`，每个文件都可单独选择，支持多文件上传。后端会自动处理。\n\n### ❓ 如何保存上传的文件到指定目录？\n> 启动时通过 `--upload-dir=/your/path` 参数指定目录，form-data上传的文件会自动保存到该目录（存在则覆盖）。目录需提前创建并有写权限。\n\n### ❓ 如何自定义请求头？\n> 在前端\"请求头\"标签页添加即可，支持变量替换。\n\n### ❓ 如何切换为直接请求（不走代理）？\n> 只需关闭后端服务或修改 `/api/mode` 返回内容，前端会自动切换为直连模式。\n\n### ❓ 数据安全吗？\n> 所有数据仅存储在浏览器本地（localStorage），不会上传到任何服务器。企业内网、敏感环境使用无忧。\n\n### ❓ 支持哪些平台？\n> 支持Windows、Linux、MacOS、ARM架构，包括国产信创平台。一次编译，到处运行。同时完美支持IPv4和IPv6网络协议。\n\n### ❓ 源码有多复杂？\n> 整个项目仅包含2个文件：`index.html`（前端界面）和`main.go`（后端服务），代码结构极其简洁，易于理解和维护。\n\n### ❓ 支持哪些通信协议？\n> 除了传统的HTTP/HTTPS请求，还原生支持WebSocket（双向通信）和SSE（Server-Sent Events，单向实时推送），满足各种实时通信需求。\n\n### ❓ EchoServer有什么用？\n> EchoServer提供完整的请求回显和响应控制功能，适合接口调试、自动化测试、网络延迟模拟等场景。支持多种响应格式和流式通信。\n\n### ❓ 如何关闭EchoServer？\n> 启动时添加 `--echo-server=false` 参数即可关闭EchoServer调试服务。\n\n### ❓ 如何开启静态文件服务器模式？\n> 使用 `--webroot` 参数启动静态文件服务器模式。所有API接口将失效，变成一个纯静态文件服务器。\n\n### ❓ 静态文件服务器支持哪些文件类型？\n> 支持所有常见文件类型：HTML、CSS、JS、图片（PNG/JPG/GIF/SVG）、音频（MP3/WAV）、视频（MP4）、字体文件、PDF、压缩包等。会自动设置正确的MIME类型。\n\n---\n\n## 🤝 贡献与反馈\n\n- 🐛 欢迎提交 issue 或 PR，完善功能和文档。\n- 💡 如有建议或 bug，欢迎反馈！\n\n---\n\n## 📄 License\n\nMIT\n\n---\n\n如需进一步定制或有疑问，欢迎联系作者。\n\n---\n\n**⭐ 如果这个项目对你有帮助，请给我们一个Star！**\n\n**💬 有任何问题或建议，欢迎在GitHub上讨论！**\n\n---\n\n*让API调试变得简单而优雅* ✨\n",
    "created_at": "2025-07-12T15:20:07Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7254"
  },
  {
    "id": 7253,
    "title": "【网站自荐】一键删除markdown格式，发即刻更方便",
    "content": "我是一个AI从业者和自媒体博主，我会在obsidian里面编辑好稿子，然后发布到各个平台，很让我无语的一点是，很多平台不支持markdown，我精心设计好的文案排版全部变成了** xx **。\n\n所以，我做了一个在线工具，可以直接转换markdown为纯文本格式，但是也保留一些符号、序号等，另外，我还让AI来帮我优化这些平台的稿子，他会给我加一些表情，我很喜欢。\n\n网址是 https://stripmd.thistools.app AI免费使用！",
    "created_at": "2025-07-12T15:19:53Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7253"
  },
  {
    "id": 7252,
    "title": "【App自荐】告别拖延，轻松自律！OKRise星伴行：用“游戏化+OKR”助你高效达成目标",
    "content": "让时间管理像玩游戏一样有趣，让自律成为习惯而非负担！\n\n你是否还在为拖延症烦恼？是否觉得目标遥不可及，自律总是“三天打鱼，两天晒网”？我们理解你的困扰，也相信改变可以更轻松、更有趣！\n\n隆重介绍「OKRise星伴行」—— 一款融合游戏化奖励机制与科学OKR工作法的智能时间管理工具！ 它不只是记录待办事项，更是你高效生活、无痛自律的贴心伙伴。\n\n🎮 为什么说OKRise能帮你“无痛自律”？\n我们深知，纯粹靠意志力对抗拖延往往收效甚微。OKRise的核心理念是：将枯燥的自律过程，变成一场充满乐趣和即时反馈的“游戏”！\n\n游戏化奖励机制，动力源源不断：\n\n即时反馈： 完成任务、完成专注、坚持打卡？立刻获得积分、徽章等奖励！就像游戏里打怪升级一样，每一次微小的成就都带来正向激励。\n虚拟商店： 积累的积分可在APP内兑换心仪的虚拟或现实激励（根据设定），让努力看得见、摸得着（或想象得到）！\n成就系统： 解锁各种成就，记录你的成长轨迹，满足你的收集欲和成就感。\n科学OKR工作法，目标清晰可量化：\n\n化繁为简： OKRise将专业的OKR（目标与关键结果）工作法简化融入个人目标管理。帮你清晰定义目标 (Objective)，并设定可衡量、有时限的关键结果 (Key Results)。\n聚焦重点： 告别模糊的愿望，聚焦于真正推动目标达成的关键行动。\n进度追踪： 直观看到目标及关键结果的完成进度，心中有数，行动更有方向。\n🛠 强大而全面的功能模块，一站式管理你的工作与生活\nOKRise集多种高效工具于一身，满足你全方位的规划与执行需求：\n\n任务管理： 清晰创建、分类、优先级排序你的待办事项。\n智能日历： 可视化安排日程，任务、习惯、专注时间一目了然，避免时间冲突。\n番茄专注： 内置经典番茄工作法，25分钟专注 + 5分钟休息，帮你进入心流状态，大幅提升效率。\n习惯打卡： 培养好习惯，戒除坏习惯。每日打卡，追踪连续天数，让坚持变得简单。\n目标与OKR： 核心模块，助你设定、拆解、追踪人生大小目标。\n奖励中心： 游戏化核心，在这里领取你的努力成果，兑换激励！\n🌟 OKRise星伴行能为你带来什么？\n更少时间达成目标： 通过OKR聚焦关键行动，避免无效努力。\n有效摆脱拖延： 游戏化的即时奖励和趣味性，让启动任务不再困难。\n持续保持动力： 成就感和可见的奖励，成为你持续行动的内驱力。\n让自律变得轻松： “无痛”是核心！用愉悦感代替压迫感，让自律自然融入生活。\n工作生活平衡管理： 无论是工作项目、学习计划、健身目标，还是个人兴趣培养，OKRise都能完美胜任。\n🚀 立即开始你的“高效游戏人生”！\n别再让拖延和低效偷走你的时间与梦想。OKRise星伴行，用科学的方法和游戏的乐趣，为你架起通往目标的高效桥梁。\n\n👉 现在就访问官网了解更多详情并下载体验：\nhttps://www.okrise.cn/\n\n让自律上瘾，让目标触手可及。加入OKRise星伴行，开启你的高效、有趣、充满成就感的人生新篇章！",
    "created_at": "2025-07-12T11:10:48Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7252"
  },
  {
    "id": 7250,
    "title": "【网站自荐】高仿 YC 的 Hacker News 中文社区",
    "content": "推荐一个刚上线的新站：CatchIdeas 中文极客社区，可以理解为“高仿 Hacker News 的中文版”，主打技术人分享与极简内容驱动体验。\n\n社区保留了 HN 的极简风格与交互逻辑，并针对中文用户做了本地化改造，支持发帖、评论、点赞等功能。\n\n目前注册即送 1000 krama（积分），可用于投票与发帖，开放注册通道，无需邀请码即可体验。  \n👉 [点击注册体验](https://news.catchideas.com/invite-register.php)\n\n**亮点特色：**\n\n- 高仿 HN，支持中文极客社区互动  \n- 极简、无广告、专注内容  \n- 注册即送积分，降低参与门槛  \n\n欢迎感兴趣的朋友尝鲜体验，一起建设一个更适合中文用户的 Hacker News。\n\n[CatchIdeas 中文极客社区预览]\n\n<img width=\"2560\" height=\"1264\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/87397d3e-0be1-4b15-9e78-d7c98afbe379\" />\n\n<img width=\"2560\" height=\"1264\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3c94b046-723d-4ef9-8a34-0ef3c14dcb8b\" />\n\n你就说高不高仿吧！\n\n",
    "created_at": "2025-07-11T07:12:46Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7250"
  },
  {
    "id": 7249,
    "title": "【工具自荐】Veo3.bot：免费访问自带音频的 Google Veo 3 AI 视频生成功能",
    "content": "一、工具名称：Veo3.bot：免费访问自带音频的 Google Veo 3 AI 视频生成功能\n\n二、网址链接：https://veo3.bot/\n\n三、工具简介：创建自带音频和唇形同步的 Veo 3 AI 视频 — 免费且无地区限制！\n\n四、详细介绍：\n\nVeo3.bot 让你能免费访问 Google Veo 3 AI 视频生成模型。不受地区限制，并提供慷慨的免费试用，让任何人都可以探索 Veo 3 的强大功能，只需点击几下就可以创建 1080p的视频。无论您是想通过视频获利的自媒体博主，还是只是想试玩一下，Veo3.bot 都可以轻松生成高质量的 AI 视频。\n\nVeo3.bot 的主要功能：\n1. 自带音频和唇形同步：可以自动生成画外音、音效和唇形同步的视频——所有这些都得益于 Veo 3 先进的音频文本对齐技术。\n2. 支持Veo 3 Quality 和 Veo 3 Fast：根据您的需求，可以选择更高质量渲染的Veo 3 Quality模型，或生成速度更快更便宜的Veo 3 Fast模型。\n3. 文本转视频和图像转视频：输入文本提示或上传参考图像——Veo3.bot 支持这两种输入类型，让您拥有完全的创作掌控权。\n4. 无需登录即可免费试用：无需注册或安装任何软件，只需访问 veo3.bot 即可创建视频。\n\n体验前所未有的 Google Veo 3视频生成——简单、快速，免费，立即访问 Veo3.bot。\n\n五、工具页面截图：\n\n<img width=\"1280\" height=\"683\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/481546d0-911b-42e6-ab31-89ebc9140e4b\" />\n\n<img width=\"1280\" height=\"683\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0e40b7f3-7158-4551-8c01-ed75e3052c84\" />\n\n<img width=\"1280\" height=\"683\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ab6fa359-78c5-40fb-b2b9-108359cddee4\" />",
    "created_at": "2025-07-11T03:33:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7249"
  },
  {
    "id": 7248,
    "title": "【网站自荐】ruanzhu.pro——AI软著生成器",
    "content": "网站名称：AI软著生成器\n网址：https://ruanzhu.pro/\n\n核心功能：\nAI软著生成器是一款基于人工智能技术的在线工具，旨在帮助用户快速生成软件著作权（软著）申请所需的文档材料，简化申请流程，提高效率。\n\n主要特点：\n\n智能生成文档：通过AI自动生成符合规范的软件著作权申请文档，包括源代码、用户手册、功能说明等。\n\n模板化操作：提供标准化模板，用户只需填写关键信息即可生成专业材料，降低撰写难度。\n\n高效省时：大幅缩短传统手动编写文档的时间，尤其适合个人开发者、创业团队或企业批量申请。\n\n合规性强：生成的文档符合国家版权局对软件著作权申请的要求，减少因格式问题导致的驳回风险。\n\n用户友好：界面简洁，操作流程清晰，无需专业知识即可轻松上手。\n\n适用人群：\n\n独立开发者或程序员\n\n科技公司或IT团队\n\n创业公司需快速申请软著保护知识产权\n\n高校师生及科研人员\n\n优势：\n相比传统人工撰写，AI软著生成器能显著降低成本，提升效率，尤其适合对软著申请流程不熟悉的用户。\n\n访问方式：\n通过官网 https://ruanzhu.pro/ 在线使用，无需下载安装。",
    "created_at": "2025-07-11T03:31:00Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7248"
  },
  {
    "id": 7247,
    "title": "【工具自荐】浏览器查找增强插件，支持大小写、单词、正则、自定义高亮样式、检测 DOM 变化自动更新结果等",
    "content": "已上架 Chrome 和 edge：\n\nchrome：https://chromewebstore.google.com/detail/find-whatever-regex-auto/pdpkckoiaiinjlhddhcoknjhdncepnbo\nedge：https://microsoftedge.microsoft.com/addons/detail/find-whatever-regex-a/dfmiobmbhchkjnehfkgpoddfkhonafmk\n\n<img width=\"454\" height=\"123\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/637c80a8-0a0b-40d2-9351-78d537f75078\" />",
    "created_at": "2025-07-11T03:26:10Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7247"
  },
  {
    "id": 7246,
    "title": "【工具自荐】客群采集：一个免费的拓客助手 小程序",
    "content": "✅ [客群采集-微信小程序](https://my-works.oss-cn-beijing.aliyuncs.com/images/download.jpg)：拓客小工具，基于地理位置以及一些开放的api去采集商户信息，并围绕这些信息提供了一系列的小功能，例如：数据导入导出、拨打电话、保存通讯录、导航等等。功能免费，欢迎体验～\n小程序码：\n![客群采集-微信小程序](https://my-works.oss-cn-beijing.aliyuncs.com/images/download.jpg)",
    "created_at": "2025-07-11T02:50:13Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7246"
  },
  {
    "id": 7245,
    "title": "【自荐】跨境欧洲出海知识库",
    "content": "开启欧洲跨境之路\n网址：https://01234567.feishu.cn/wiki/AjBqwyp5yisP60kvNGAchQtSn7b\n介绍：我整理了一份《开启欧洲跨境之路》的知识库，面向正在考虑做欧洲市场的跨境卖家。\n资料覆盖了几十个欧洲平台（Allegro、Cdiscount、eMAG 等）、30 多个国家的入驻要求、运营思路、对比分析，按国家、平台、选品、投流等模块结构化整理。\n不带广告、不卖服务，只希望帮更多人少走弯路。内容每天更新，目前已开放免费查阅。\n",
    "created_at": "2025-07-10T16:13:54Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7245"
  },
  {
    "id": 7244,
    "title": "【网站自荐】：沙爆方块拼图 体验最具沉浸感的沙爆方块拼图游戏，享受策略布局与沙流物理的完美结合，随时随地挑战自我，解锁无限乐趣！",
    "content": "《沙爆方块拼图》是一款创新的沙流物理拼图游戏，融合了经典方块拼图的策略性与沙流模拟的沉浸感。玩家需要在方格中放置三种不同形状的彩色方块，方块落下后会转化为沙流，玩家需巧妙布局，形成同色沙流的完整横线以清除并得分。游戏没有时间限制，适合任何年龄段的玩家，既能放松心情，又能锻炼思维。无需下载，支持离线游戏，随时随地畅玩。\n\n网站地址：https://sand-blast-block-puzzle.com/\n\n![Image](https://github.com/user-attachments/assets/160eefbe-a131-4dc5-93c2-465c0e9eaa9b)\n\n![Image](https://github.com/user-attachments/assets/3a9716e6-69fa-4fe4-951f-eea8bd646bd9)",
    "created_at": "2025-07-10T09:09:01Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7244"
  },
  {
    "id": 7243,
    "title": "【网站自荐】生成式AI API平台，支持各种类型、风格的AI模型。支持定制化，私有模型部署。",
    "content": "**官网**：[Vmodel AI](https://vmodel.ai/models/?utm_source=wechat)\n**特点**：\n* **多样化模型支持**：提供丰富的AI API，包括 Talk Photo、AI 视频生成、Flux、图片无损放大、去背景、移除物体等功能。\n* **高性价比**：价格相较其他平台更具竞争力，用户量达到一定规模可享受额外折扣。\n* **特色模型优化**：如 Talk Photo、换脸等模型经过深度优化，生成效果显著优于同类产品。\n* **专业服务支持**：提供专属 1 对 1 客服支持，确保接入与使用无忧。\n<img width=\"1920\" height=\"911\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9b4fcbd0-426e-4f31-9880-1b57b8b0b9b5\" />",
    "created_at": "2025-07-10T07:44:28Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7243"
  },
  {
    "id": 7242,
    "title": "【网站自荐】EasyName：一个用于Business Name Generator的名字生成器",
    "content": "业务名称生成器\n输入业务描述，通过ai生成域名并给出域名的评分\nhttps://www.easyname.ai/",
    "created_at": "2025-07-10T06:30:06Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7242"
  },
  {
    "id": 7241,
    "title": "【开源自荐】Pointer: 集合对象树、交叉表、聊天树于一体的 AI 桌面应用",
    "content": "Pointer 是一款 AI 驱动的聊天工具，具有独创的对象树和交叉表构建系统。\n\n- Github: [https://github.com/experdot/pointer](https://github.com/experdot/pointer) [MIT]\n- Blog: [https://www.cnblogs.com/experdot/p/18974641](https://www.cnblogs.com/experdot/p/18974641)\n\n## 以构建《小说设定》为例：\n\n### 构建对象树结构\n通过与AI简短对话，即可快速生成小说大纲要素。\n\n<img width=\"2560\" height=\"1361\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1c5b5c0b-585d-424b-8609-ff8ba449d6f3\" />\n\n### 交叉生成关系\n选中大纲要素，即可生成交叉关系\n<img width=\"2560\" height=\"1361\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0e48fdcc-91a8-47eb-882b-81897b76b950\" />\n\n### 基于交叉关系对话\n选中一个交叉单元格，即可自由对话与生成。\n\n<img width=\"2560\" height=\"1361\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1886fd66-ad7d-41a5-add0-71ec86685342\" />",
    "created_at": "2025-07-10T03:31:04Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7241"
  },
  {
    "id": 7240,
    "title": "推荐一款笔记，可以边学边练，带终端，带版本控制，也可以连自己服务器，https://www.skillup.host/1/docker/docker_practice/introduction/what.md",
    "content": "这个是功能列表\n现在开发公测阶段\n<img width=\"789\" height=\"791\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dcfbb8ef-94f5-4277-9c1e-9d63f55d7197\" />",
    "created_at": "2025-07-10T03:07:49Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7240"
  },
  {
    "id": 7239,
    "title": "【工具自荐】免费在线转换工具，已支持 300+小工具",
    "content": "嘿，大家好！最近我弄了个在线格式转换网站：ConvertTool。\n\n大概花了半个月时间，前端用 jQuery，前端页面使用 DeepSeek生成 ，代码使用 qwen3‑thinking实现,目前已经支持 300+ 种格式转换：\n\n* **文档类**：DOC、PDF、PPT、TXT……\n* **图片类**：GIF、SVG、PNG、JPG……\n* **音视频**：MP3、WAV、MOV、MP4……\n* **其他**：TXT ↔ CSV ....\n\n<img width=\"3358\" height=\"1628\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/849ca433-3102-45b6-854a-2f06820503d1\" />\n\n简单来说： 你需要转换文件？👉 访问 ConvertTool.org  👉 选择工具 -> 上传文件 -> 一键转换 -> 下载结果！就这么简单!\n\n感兴趣的话，戳这里试试看：\n\n👉 [https://converttool.org](https://converttool.org)\n\n欢迎收藏、分享给需要的朋友！",
    "created_at": "2025-07-09T12:30:49Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7239"
  },
  {
    "id": 7238,
    "title": "【网站自荐】JobLeap.cn——你的AI智能求职全能助手",
    "content": "官网地址：www.jobleap.cn\n\n<img width=\"3212\" height=\"1524\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5fa0faea-49bd-42a6-9ac7-d0cb713b3c11\" />\n\nJobLeap.cn——你的AI智能求职全能助手\n\nJobLeap.cn 是一款基于人工智能技术打造的新一代智能职业发展平台，专注于为校招和社招求职者提供一站式的全方位职业发展服务。无论你是技术人群、应届毕业生，还是有转行需求的职场人士，JobLeap.cn 都能帮助你精准匹配岗位、科学规划职业路径，显著提升求职效率和面试通过率。\n\n每日，JobLeap.cn 利用大数据和机器学习技术，从海量岗位中自动筛选最适合你的职位，精准推送，避免盲目投递，节省筛选时间。同时，平台提供丰富的简历模板和AI智能优化建议，帮助你打造专业简历，突出核心竞争力，让HR一眼识别你的亮点。\n\n面试准备方面，JobLeap.cn 通过模拟真实岗位面试场景，帮助用户提前适应面试流程，提升应答技巧和自信心。更有基于大数据的面试押题功能，预测目标岗位的高频问题，助你有的放矢地准备，显著提高面试成功率。每次模拟面试结束后，还会生成详细复盘报告，指出优缺点并给出改进建议，帮助你持续提升表现。\n\nJobLeap.cn 的优势还包括：\n\n- **AI驱动的精准岗位推荐**：结合用户技能、经验和职业目标，实现个性化职位推荐，突破传统求职的被动局限。\n\n- **全链条求职支持**：涵盖简历制作、职位筛选、面试准备、面试复盘等求职关键环节，提供科学、高效的职业发展支持。\n\n- **适合多种求职群体**：无论是校园招聘还是社会招聘，技术岗、产品岗、市场岗等多岗位类型均有专业模板和针对性服务。\n\n- **界面友好，操作便捷**：技术人群和应届毕业生均能快速上手，专注提升核心竞争力。\n\n加入JobLeap.cn，让AI助力你的求职之路更加高效顺畅，轻松拿下理想offer，开启智能求职新时代",
    "created_at": "2025-07-09T09:19:59Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7238"
  },
  {
    "id": 7237,
    "title": "【工具自荐】数据科学专用的Code Agent - Jupyter Agent 插件",
    "content": "[Runcell](https://runcell.dev) 是一个Jupyter中的AI Agent插件，它可以根据需求自动编写代码，分析数据，修复bug，甚至配置本地环境。\n\n可以理解runcell 是 Jupyter 生态(Jupyter Lab/Notebook) 中的Cursor，专注为Jupyter 用户提供Agent的自动化功能。\n\nDemo:\n\nhttps://github.com/user-attachments/assets/18283219-31ec-46e7-afc8-fa5d97659f69\n\n用户只需要使用`pip install runcell`即可安装，并在Jupyter中使用",
    "created_at": "2025-07-09T07:23:17Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7237"
  }
]