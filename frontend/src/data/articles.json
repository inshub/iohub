[
  {
    "id": 7434,
    "title": "[开源推荐] FolioSpace 个人作品集展示页面",
    "content": "### 项目地址\n[https://github.com/SimonAKing/FolioSpace](https://github.com/SimonAKing/FolioSpace)\n\n### 项目描述\n\nFolioSpace 是一个 3D 的个人作品集展示页，可以创建具有流畅转场动画的体验。\n亮点包括：\n1. 沉浸式 3D 展示效果\n2. MiniMap 快捷导航\n3. 全设备响应式适配\n4. GitHub API实时数据同步，对开源爱好者更加适用\n\n### 演示\n\n![Image](https://github.com/user-attachments/assets/a209129e-f4fb-4cff-8432-a2eccb5fefd1)\n\n[Live Demo](https://simonaking.com/projects/)",
    "created_at": "2025-08-02T07:53:42Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7434"
  },
  {
    "id": 7433,
    "title": "【工具自荐】《纽约时报》Connections 游戏答案和解题提示工具站，支持 MCP",
    "content": "[Connections Hint](https://connectionshint.cc) 收集了《纽约时报》Connections 游戏从上线至今每一期的答案和解谜提示，完全免费，每日更新。\n\n## 功能介绍\n\n- 实时查看当日完整答案与分级线索\n- 专业解题策略、常见失误剖析与进阶攻略\n- 完整历史题库归档，支持按月/日期检索\n- 支持 MCP [Connections Hint MCP](https://github.com/wytxer/connections-mcp-server)\n\n## 访问地址\n\n[Connections Hint](https://connectionshint.cc)\n",
    "created_at": "2025-08-02T07:47:59Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7433"
  },
  {
    "id": 7432,
    "title": "【文章自荐】Cursor 开发复杂项目过程记录和利弊分析",
    "content": "一行代码没写，通过自然语言用 Cursor 实现了一个抽奖项目 ，涉及到实时通信、状态维护、数据库读写等，AI 编程的利弊也迅速凸显出来。\n\n记录了开发过程，以及遇到的问题和解决方案。\n\n生成的代码完全开源：[https://github.com/wind-liang/lottery](https://github.com/wind-liang/lottery)\n\n视频演示：[一行代码没写，用 Cursor 实现的抽奖系统演示](https://www.bilibili.com/video/BV1Yo86zhENH/?share_source=copy_web&vd_source=57ff17a6f0b3b002c6b2eca57af07900)\n\n文章记录：[Cursor 开发复杂项目过程记录和利弊分析](https://zhuanlan.zhihu.com/p/1934967911946101121)",
    "created_at": "2025-08-02T07:32:17Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7432"
  },
  {
    "id": 7431,
    "title": "【开源自荐】GPT-Load 智能密钥轮询的多渠道 AI 代理",
    "content": "一个高性能、企业级的 AI 接口透明代理服务，专门为需要集成多种 AI 服务的企业和开发者设计。采用 Go 语言开发，具备智能密钥管理、负载均衡和完善的监控功能，专为高并发生产环境而设计。\n\n## 功能特性\n\n- **透明代理:** 完全保留原生 API 格式，支持 OpenAI、Google Gemini 和 Anthropic Claude 等多种格式\n- **智能密钥管理:** 高性能密钥池，支持分组管理、自动轮换和故障恢复\n- **负载均衡:** 支持多上游端点的加权负载均衡，提升服务可用性\n- **智能故障处理:** 自动密钥黑名单管理和恢复机制，确保服务连续性\n- **动态配置:** 系统设置和分组配置支持热重载，无需重启即可生效\n- **企业级架构:** 分布式主从部署，支持水平扩展和高可用\n- **现代化管理:** 基于 Vue 3 的 Web 管理界面，直观易用\n- **全面监控:** 实时统计、健康检查、详细请求日志\n- **高性能设计:** 零拷贝流式传输、连接池复用、原子操作\n- **生产就绪:** 优雅关闭、错误恢复、完善的安全机制\n- **双重认证体系:** 管理端与代理端认证分离，代理认证支持全局和分组级别密钥\n\n## 支持的 AI 服务\n\nGPT-Load 作为透明代理服务，完整保留各 AI 服务商的原生 API 格式：\n\n- **OpenAI 格式:** 官方 OpenAI API、Azure OpenAI、以及其他 OpenAI 兼容服务\n- **Google Gemini 格式:** Gemini Pro、Gemini Pro Vision 等模型的原生 API\n- **Anthropic Claude 格式:** Claude 系列模型，支持高质量的对话和文本生成\n\n## 界面展示\n\n<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/screenshot/dashboard.png\" alt=\"仪表盘\" width=\"600\" />\n\n<br/>\n\n<img src=\"https://raw.githubusercontent.com/tbphp/gpt-load/refs/heads/main/screenshot/keys.png\" alt=\"仪表盘\" width=\"600\" />",
    "created_at": "2025-08-02T06:31:17Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7431"
  },
  {
    "id": 7430,
    "title": "【工具自荐】一个轻量、有趣的 Meme 音效搜索站",
    "content": "👀 最近偶然做了一个非常轻量的工具站，分享给大家娱乐一下～\n\n📢 [memesounds.online](https://www.memesounds.online/) 是一个收集了海量 Meme 音效的小站（目前支持中文/英文搜索），可以在线播放、复制链接、甚至直接下载 mp3，用来做表情包、视频剪辑、直播音效、整活都挺方便。\n\n🧩 特点是：\n\t•\t✅ 无广告、免登录、即开即用\n\t•\t🔍 支持关键词搜索（比如搜“啊对对对”就能找到了）\n\t•\t🎧 网页/手机端都能用（也可以收藏当作表情包神器）\n\n🌱 项目还在持续更新中，欢迎感兴趣的朋友体验下：\n👉 https://www.memesounds.online/\n\n如果你是做视频、做直播、整活狂人，希望它能帮你省点时间、带来点灵感 😆",
    "created_at": "2025-08-02T06:21:35Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7430"
  },
  {
    "id": 7429,
    "title": "【自荐】时隔1年，依然有价值的博客文章-了解原理让大语言模型AI成为你的打工人",
    "content": "https://iaiuse.com/posts/508a6067\n\n先说结论\nChatGPT 不仅是为了推广 GPT 技术的一种方式，也是一个展示软件开发商技术能力的示例。\n虽然Prompt作为接口方式有其局限性，但它提供了与AI交互的直观方式。\n未来可能有更多的方式，因为 Prompt 丢失了肢体语言，语气语调\n在 AI 时代更要注意它带来的信息茧房，更重视自己的行业积累。\n应警惕过度依赖AI而忽视独立思考的重要性。\n虽然AI为某些人提供了盈利的机会，但这通常归功于他们原有的商业模式和策略。\nAI本身没有意识，人类不应将自己的感知错误归咎于它。\n目前的模型通过预测下一个Token来生成文本，这限制了我们判断其是否具有真正的智能。\n它是技术和工程的结晶，对于推动创新和实用应用具有重要价值。\n它的成功只是赌对了，但远远不是终局。\n虽然AI目前不能实现大幅度减少工作时间的愿景，但这种设想激励着技术进步。\n目前阶段它只是内卷手段，剧场中你站起来早而已。\n无法多了一个老板给我们的狗链子，AI 的使用迟早是标配。\n这个过程中，我们该 996 还得 996。\n下班老板找不到我们这个美好的愿望，在几十年前有电话开始就一去不复返了。\n\n\n作者: Richardson\n链接: https://iaiuse.com/posts/508a6067\n来源: AIMeticulously\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。",
    "created_at": "2025-08-02T04:15:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7429"
  },
  {
    "id": 7428,
    "title": "不会写代码的产品经理，24小时打造爆款法语单词游戏SUTOM",
    "content": "当游戏创意遇上智能工具，技术不再是创作壁垒\n作为零编程基础的产品经理，我仅用24小时就上线了风靡朋友圈的法语单词游戏 [[sutom](https://sutom.fun/)]首日突破5000玩家，72小时引爆20+玩家社群。以下是完整开发纪实：<meta charset=\"utf-8\"><div data-page-id=\"NDxwdaZfWokuSQxtY01cduEKnRe\" data-lark-html-role=\"root\" data-docx-has-block-data=\"true\"><h3 class=\"heading-3 ace-line old-record-id-DnpedKm2koHpkexup9Zcv7j7nOd\">🎮 游戏核心机制解析</h3><div class=\"ace-line ace-line old-record-id-Xkcxd76zRoda73x9j2acaO1Hnwc\">技术文档揭示的精密设计：</div><div style=\"text-align:center\" data-type=\"image\" data-ace-gallery-json=\"{&quot;items&quot;:[{&quot;uuid&quot;:&quot;861c0384-583a-42dc-9e69-4d49e91509db&quot;,&quot;height&quot;:1290,&quot;width&quot;:1840,&quot;currHeight&quot;:1290,&quot;currWidth&quot;:1840,&quot;natrualHeight&quot;:1290,&quot;natrualWidth&quot;:1840,&quot;pluginName&quot;:&quot;imageUpload&quot;,&quot;scale&quot;:1,&quot;src&quot;:&quot;https%3A%2F%2Finternal-api-drive-stream.feishu.cn%2Fspace%2Fapi%2Fbox%2Fstream%2Fdownload%2Fpreview%2FTvFibK5XLozzADxjEpRctfmrnPe%2F%3Fpreview_type%3D16&quot;,&quot;file_token&quot;:&quot;TvFibK5XLozzADxjEpRctfmrnPe&quot;,&quot;image_type&quot;:&quot;image/png&quot;,&quot;size&quot;:157609,&quot;comments&quot;:[]}]}\" class=\"image-uploaded gallery old-record-id-HYEDdSllEo8z7MxeJ0McluwOnvb\"><img src=\"https://yeeeeeee.feishu.cn/space/api/box/stream/download/asynccode/?code=ZDk5NzNlNjVjN2FjMTMyNDdlZjhkN2Y0N2EzMjhjYjZfQzNWYkpPR2s2R2NhdWxCNXhSSGMweloyRWY0a0puNTZfVG9rZW46VHZGaWJLNVhMb3p6QUR4akVwUmN0Zm1yblBlXzE3NTQxMDE0NDM6MTc1NDEwNTA0M19WNA\" data-single-block=\"true\" data-snapshot=\"eyJoaWRkZW4iOmZhbHNlLCJhdXRob3IiOiI3NTE2ODk1NTE1OTg5MTQ3NjUwIiwidHlwZSI6ImltYWdlIiwicGFyZW50X2lkIjoiTkR4d2RhWmZXb2t1U1F4dFkwMWNkdUVLblJlIiwicmV2aXNpb25zIjpbXSwiaW1hZ2UiOnsiY2FwdGlvbiI6eyJ0ZXh0Ijp7ImFwb29sIjp7Im5leHROdW0iOjAsIm51bVRvQXR0cmliIjpudWxsfSwiaW5pdGlhbEF0dHJpYnV0ZWRUZXh0cyI6eyJ0ZXh0IjpudWxsLCJhdHRyaWJzIjpudWxsfX19LCJ0b2tlbiI6IlR2RmliSzVYTG96ekFEeGpFcFJjdGZtcm5QZSIsInNpemUiOjE1NzYwOSwic2NhbGUiOjEsImhlaWdodCI6MTI5MCwicm90YXRpb24iOjAsIm1pbWVUeXBlIjoiaW1hZ2UvcG5nIiwid2lkdGgiOjE4NDAsIm5hbWUiOiJkZWVwc2Vla19tZXJtYWlkXzIwMjUwODAyX2ZmMWU5Ni5wbmciLCJjcm9wIjpbMCwwLDAsMF19LCJjb21tZW50cyI6W10sImxvY2tlZCI6ZmFsc2UsImFsaWduIjoiY2VudGVyIn0=\" data-suite=\"eyJmaWxlVG9rZW4iOiJUdkZpYks1WExvenpBRHhqRXBSY3RmbXJuUGUiLCJvYmpUeXBlIjoiZG9jeCIsIm9ialRva2VuIjoiSFlFRGRTbGxFbzh6N014ZUowTWNsdXdPbnZiIiwib3JpZ2luU3JjIjoiaHR0cHM6Ly9pbnRlcm5hbC1hcGktZHJpdmUtc3RyZWFtLmZlaXNodS5jbi9zcGFjZS9hcGkvYm94L3N0cmVhbS9kb3dubG9hZC9wcmV2aWV3L1R2RmliSzVYTG96ekFEeGpFcFJjdGZtcm5QZS8/cHJldmlld190eXBlPTE2In0=\" data-src=\"https://internal-api-drive-stream.feishu.cn/space/api/box/stream/download/all/TvFibK5XLozzADxjEpRctfmrnPe/?mount_node_token=HYEDdSllEo8z7MxeJ0McluwOnvb&amp;mount_point=docx_image\" data-width=\"1840\" data-height=\"1290\" data-lark-image-uri=\"drivetoken://TvFibK5XLozzADxjEpRctfmrnPe\" data-lark-image-width=\"1840\" data-lark-image-height=\"1290\"></div><div class=\"ace-line ace-line old-record-id-F2UYdybRUoDpoTxqokAczWK9nWj\">特色技术实现（源自源码）：</div><pre style=\"white-space:pre;\" class=\"ace-line ace-line old-record-id-ABRydbZT0o9sFhxwRMece0zKn9e\"><code class=\"language-Java\" data-lark-language=\"Java\" data-wrap=\"false\"><div>// 单词验证核心逻辑\nconst validateGuess = (guess, solution) =&gt; {\n  const result = [];\n  const solutionChars = [...solution];\n  \n  // 第一轮：标记完全匹配的字母\n  guess.forEach((char, i) =&gt; {\n    if (char === solutionChars[i]) {\n      result[i] = { status: 'correct', letter: char };\n      solutionChars[i] = null; // 标记已匹配\n    }\n  });\n  \n  // 第二轮：标记存在但位置错误的字母\n  guess.forEach((char, i) =&gt; {\n    if (!result[i]) {\n      const foundIndex = solutionChars.indexOf(char);\n      if (foundIndex &gt; -1) {\n        result[i] = { status: 'present', letter: char };\n        solutionChars[foundIndex] = null;\n      } else {\n        result[i] = { status: 'absent', letter: char };\n      }\n    }\n  });\n  \n  return result;\n};</div></code></pre><div data-type=\"divider\" class=\" old-record-id-MT5odtppzopMONxzacscdcDsn8g\"><hr></div><h3 class=\"heading-3 ace-line old-record-id-Ucyvdkaj5oYJkTxFjSTcfOPwnKg\">🚀 24小时开发全纪实</h3><div class=\"ace-line ace-line old-record-id-XPeodmcCyoPEPLxxFoJcQ1gTnrh\">非技术者的智能开发路线：</div><div data-type=\"sheet\" class=\" old-record-id-P9ttdHwLgowz9hx7iGPclKkFnsb\"><!--StartFragment--><meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\"><style><!--br {mso-data-placement:same-cell;}--> td {white-space:nowrap;border:0.5pt solid #dee0e3;font-size:10pt;font-style:normal;font-weight:normal;vertical-align:middle;word-break:normal;word-wrap:normal;}</style><byte-sheet-html-origin data-id=\"\" data-version=\"4\" data-is-embed=\"true\" data-grid-line-hidden=\"false\" data-copy-type=\"col\">\n时间段 | 关键任务 | 技术实现\n-- | -- | --\n09:00-10:30 | 游戏规则设计 | 用ChatGPT生成规则文档与测试用例\n11:00-13:00 | 前端界面开发 | Vue组件库 + AI生成配色方案\n14:00-16:00 | 游戏逻辑构建 | Copilot编写验证算法 + 本地存储系统\n16:30-18:30 | 后端服务搭建 | ChatGPT生成Node.js API + 词库管理\n19:00-21:00 | 部署与优化 | Vercel自动部署 + Lighthouse性能调优\n\n</byte-sheet-html-origin><!--EndFragment--></div><div class=\"ace-line ace-line old-record-id-S7Uid777dods4zx0OAycyIp8n6d\">核心技术组件：</div><ol start=\"1\" class=\"list-number1\"><li style=\"text-align:left\" class=\"ace-line ace-line old-record-id-VBg5doxjFo42i0x6PfZc86NEnzf\" data-list=\"number\"><div>动态词库引擎：根据日期哈希值选择当日单词</div></li><li style=\"text-align:left\" class=\"ace-line ace-line old-record-id-Voa3d42dLoksrHxjZtwcillin5f\" data-list=\"number\"><div>状态持久化：localStorage保存玩家进度</div></li><li style=\"text-align:left\" class=\"ace-line ace-line old-record-id-H0qRdPHbboPWOkx1DaAc5U5znIb\" data-list=\"number\"><div>分享系统：Canvas实时生成战绩卡片</div></li><li style=\"text-align:left\" class=\"ace-line ace-line old-record-id-WXNsdRlLUo6fFNxcPKVclvAXnNc\" data-list=\"number\"><div>响应式设计：自适应移动端与桌面体验</div></li></ol></div><span data-lark-record-data=\"{&quot;isCut&quot;:false,&quot;rootId&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;parentId&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;blockIds&quot;:[2579,2580,2581,2582,2583,2584,2585,2586,2587,2588,2589,2590,2591,2592],&quot;recordIds&quot;:[&quot;DnpedKm2koHpkexup9Zcv7j7nOd&quot;,&quot;Xkcxd76zRoda73x9j2acaO1Hnwc&quot;,&quot;HYEDdSllEo8z7MxeJ0McluwOnvb&quot;,&quot;F2UYdybRUoDpoTxqokAczWK9nWj&quot;,&quot;ABRydbZT0o9sFhxwRMece0zKn9e&quot;,&quot;MT5odtppzopMONxzacscdcDsn8g&quot;,&quot;Ucyvdkaj5oYJkTxFjSTcfOPwnKg&quot;,&quot;XPeodmcCyoPEPLxxFoJcQ1gTnrh&quot;,&quot;P9ttdHwLgowz9hx7iGPclKkFnsb&quot;,&quot;S7Uid777dods4zx0OAycyIp8n6d&quot;,&quot;VBg5doxjFo42i0x6PfZc86NEnzf&quot;,&quot;Voa3d42dLoksrHxjZtwcillin5f&quot;,&quot;H0qRdPHbboPWOkx1DaAc5U5znIb&quot;,&quot;WXNsdRlLUo6fFNxcPKVclvAXnNc&quot;],&quot;recordMap&quot;:{&quot;DnpedKm2koHpkexup9Zcv7j7nOd&quot;:{&quot;id&quot;:&quot;DnpedKm2koHpkexup9Zcv7j7nOd&quot;,&quot;snapshot&quot;:{&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;locked&quot;:false,&quot;children&quot;:[],&quot;text&quot;:{&quot;initialAttributedTexts&quot;:{&quot;text&quot;:{&quot;0&quot;:&quot;🎮 游戏核心机制解析&quot;},&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+b&quot;}},&quot;apool&quot;:{&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]},&quot;nextNum&quot;:1}},&quot;align&quot;:&quot;&quot;,&quot;folded&quot;:false,&quot;type&quot;:&quot;heading3&quot;,&quot;comments&quot;:[],&quot;revisions&quot;:[],&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;}},&quot;Xkcxd76zRoda73x9j2acaO1Hnwc&quot;:{&quot;id&quot;:&quot;Xkcxd76zRoda73x9j2acaO1Hnwc&quot;,&quot;snapshot&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;comments&quot;:[],&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;children&quot;:[],&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+c&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;技术文档揭示的精密设计：&quot;}}},&quot;align&quot;:&quot;&quot;,&quot;folded&quot;:false,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;revisions&quot;:[],&quot;locked&quot;:false,&quot;hidden&quot;:false}},&quot;HYEDdSllEo8z7MxeJ0McluwOnvb&quot;:{&quot;id&quot;:&quot;HYEDdSllEo8z7MxeJ0McluwOnvb&quot;,&quot;snapshot&quot;:{&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;type&quot;:&quot;image&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;revisions&quot;:[],&quot;image&quot;:{&quot;caption&quot;:{&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:0,&quot;numToAttrib&quot;:null},&quot;initialAttributedTexts&quot;:{&quot;text&quot;:null,&quot;attribs&quot;:null}}},&quot;token&quot;:&quot;TvFibK5XLozzADxjEpRctfmrnPe&quot;,&quot;size&quot;:157609,&quot;scale&quot;:1,&quot;height&quot;:1290,&quot;rotation&quot;:0,&quot;mimeType&quot;:&quot;image/png&quot;,&quot;width&quot;:1840,&quot;name&quot;:&quot;deepseek_mermaid_20250802_ff1e96.png&quot;,&quot;crop&quot;:[0,0,0,0]},&quot;comments&quot;:[],&quot;locked&quot;:false,&quot;align&quot;:&quot;center&quot;}},&quot;F2UYdybRUoDpoTxqokAczWK9nWj&quot;:{&quot;id&quot;:&quot;F2UYdybRUoDpoTxqokAczWK9nWj&quot;,&quot;snapshot&quot;:{&quot;comments&quot;:[],&quot;locked&quot;:false,&quot;hidden&quot;:false,&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+d&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;特色技术实现（源自源码）：&quot;}}},&quot;folded&quot;:false,&quot;type&quot;:&quot;text&quot;,&quot;revisions&quot;:[],&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;children&quot;:[],&quot;align&quot;:&quot;&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;}},&quot;ABRydbZT0o9sFhxwRMece0zKn9e&quot;:{&quot;id&quot;:&quot;ABRydbZT0o9sFhxwRMece0zKn9e&quot;,&quot;snapshot&quot;:{&quot;revisions&quot;:[],&quot;align&quot;:&quot;&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;children&quot;:[],&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0|r+j1*0+2&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;// 单词验证核心逻辑\\nconst validateGuess = (guess, solution) =&gt; {\\n  const result = [];\\n  const solutionChars = [...solution];\\n  \\n  // 第一轮：标记完全匹配的字母\\n  guess.forEach((char, i) =&gt; {\\n    if (char === solutionChars[i]) {\\n      result[i] = { status: 'correct', letter: char };\\n      solutionChars[i] = null; // 标记已匹配\\n    }\\n  });\\n  \\n  // 第二轮：标记存在但位置错误的字母\\n  guess.forEach((char, i) =&gt; {\\n    if (!result[i]) {\\n      const foundIndex = solutionChars.indexOf(char);\\n      if (foundIndex &gt; -1) {\\n        result[i] = { status: 'present', letter: char };\\n        solutionChars[foundIndex] = null;\\n      } else {\\n        result[i] = { status: 'absent', letter: char };\\n      }\\n    }\\n  });\\n  \\n  return result;\\n};&quot;}}},&quot;folded&quot;:false,&quot;caption&quot;:{&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:0,&quot;numToAttrib&quot;:{}},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;|1+b&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;javascript\\n&quot;}}}},&quot;comments&quot;:[],&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;wrap&quot;:false,&quot;type&quot;:&quot;code&quot;,&quot;locked&quot;:false,&quot;language&quot;:&quot;Java&quot;}},&quot;MT5odtppzopMONxzacscdcDsn8g&quot;:{&quot;id&quot;:&quot;MT5odtppzopMONxzacscdcDsn8g&quot;,&quot;snapshot&quot;:{&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;type&quot;:&quot;divider&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;comments&quot;:[],&quot;revisions&quot;:[],&quot;locked&quot;:false,&quot;hidden&quot;:false}},&quot;Ucyvdkaj5oYJkTxFjSTcfOPwnKg&quot;:{&quot;id&quot;:&quot;Ucyvdkaj5oYJkTxFjSTcfOPwnKg&quot;,&quot;snapshot&quot;:{&quot;locked&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;children&quot;:[],&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+c&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;🚀 24小时开发全纪实&quot;}}},&quot;folded&quot;:false,&quot;type&quot;:&quot;heading3&quot;,&quot;comments&quot;:[],&quot;revisions&quot;:[],&quot;hidden&quot;:false,&quot;align&quot;:&quot;&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;}},&quot;XPeodmcCyoPEPLxxFoJcQ1gTnrh&quot;:{&quot;id&quot;:&quot;XPeodmcCyoPEPLxxFoJcQ1gTnrh&quot;,&quot;snapshot&quot;:{&quot;locked&quot;:false,&quot;children&quot;:[],&quot;align&quot;:&quot;&quot;,&quot;type&quot;:&quot;text&quot;,&quot;comments&quot;:[],&quot;revisions&quot;:[],&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;text&quot;:{&quot;0&quot;:&quot;非技术者的智能开发路线：&quot;},&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+c&quot;}}},&quot;folded&quot;:false,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;}},&quot;P9ttdHwLgowz9hx7iGPclKkFnsb&quot;:{&quot;id&quot;:&quot;P9ttdHwLgowz9hx7iGPclKkFnsb&quot;,&quot;snapshot&quot;:{&quot;revisions&quot;:[],&quot;locked&quot;:false,&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;token&quot;:&quot;SurCsbr1NhjB83tvjTNc4zkxn6g_zlTgrQ&quot;,&quot;type&quot;:&quot;sheet&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;comments&quot;:[]}},&quot;S7Uid777dods4zx0OAycyIp8n6d&quot;:{&quot;id&quot;:&quot;S7Uid777dods4zx0OAycyIp8n6d&quot;,&quot;snapshot&quot;:{&quot;type&quot;:&quot;text&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;comments&quot;:[],&quot;revisions&quot;:[],&quot;locked&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;text&quot;:{&quot;0&quot;:&quot;核心技术组件：&quot;},&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+7&quot;}}},&quot;folded&quot;:false,&quot;hidden&quot;:false,&quot;children&quot;:[],&quot;align&quot;:&quot;&quot;}},&quot;VBg5doxjFo42i0x6PfZc86NEnzf&quot;:{&quot;id&quot;:&quot;VBg5doxjFo42i0x6PfZc86NEnzf&quot;,&quot;snapshot&quot;:{&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;children&quot;:[],&quot;type&quot;:&quot;ordered&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;comments&quot;:[],&quot;revisions&quot;:[],&quot;locked&quot;:false,&quot;hidden&quot;:false,&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;text&quot;:{&quot;0&quot;:&quot;动态词库引擎：根据日期哈希值选择当日单词&quot;},&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+k&quot;}}},&quot;align&quot;:&quot;left&quot;,&quot;folded&quot;:false,&quot;seq&quot;:&quot;1&quot;}},&quot;Voa3d42dLoksrHxjZtwcillin5f&quot;:{&quot;id&quot;:&quot;Voa3d42dLoksrHxjZtwcillin5f&quot;,&quot;snapshot&quot;:{&quot;revisions&quot;:[],&quot;children&quot;:[],&quot;text&quot;:{&quot;apool&quot;:{&quot;nextNum&quot;:1,&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]}},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+o&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;状态持久化：localStorage保存玩家进度&quot;}}},&quot;align&quot;:&quot;left&quot;,&quot;folded&quot;:false,&quot;seq&quot;:&quot;auto&quot;,&quot;type&quot;:&quot;ordered&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;comments&quot;:[],&quot;locked&quot;:false,&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;}},&quot;H0qRdPHbboPWOkx1DaAc5U5znIb&quot;:{&quot;id&quot;:&quot;H0qRdPHbboPWOkx1DaAc5U5znIb&quot;,&quot;snapshot&quot;:{&quot;comments&quot;:[],&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;text&quot;:{&quot;apool&quot;:{&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]},&quot;nextNum&quot;:1},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+j&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;分享系统：Canvas实时生成战绩卡片&quot;}}},&quot;align&quot;:&quot;left&quot;,&quot;type&quot;:&quot;ordered&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;hidden&quot;:false,&quot;children&quot;:[],&quot;folded&quot;:false,&quot;seq&quot;:&quot;auto&quot;,&quot;revisions&quot;:[],&quot;locked&quot;:false}},&quot;WXNsdRlLUo6fFNxcPKVclvAXnNc&quot;:{&quot;id&quot;:&quot;WXNsdRlLUo6fFNxcPKVclvAXnNc&quot;,&quot;snapshot&quot;:{&quot;revisions&quot;:[],&quot;hidden&quot;:false,&quot;text&quot;:{&quot;initialAttributedTexts&quot;:{&quot;text&quot;:{&quot;0&quot;:&quot;响应式设计：自适应移动端与桌面体验&quot;},&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+h&quot;}},&quot;apool&quot;:{&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]},&quot;nextNum&quot;:1}},&quot;align&quot;:&quot;left&quot;,&quot;folded&quot;:false,&quot;children&quot;:[],&quot;seq&quot;:&quot;auto&quot;,&quot;type&quot;:&quot;ordered&quot;,&quot;parent_id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;comments&quot;:[],&quot;locked&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;}},&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;:{&quot;id&quot;:&quot;NDxwdaZfWokuSQxtY01cduEKnRe&quot;,&quot;snapshot&quot;:{&quot;doc_info&quot;:{&quot;options&quot;:[&quot;editors&quot;,&quot;edit_time&quot;],&quot;deleted_editors&quot;:null,&quot;option_modified&quot;:null,&quot;editors&quot;:[&quot;7516895515989147650&quot;]},&quot;parent_id&quot;:&quot;&quot;,&quot;comments&quot;:null,&quot;hidden&quot;:false,&quot;author&quot;:&quot;7516895515989147650&quot;,&quot;children&quot;:[&quot;HlakdKymboZRD9xXOywcjIcwnyh&quot;,&quot;MuJHdDNqZoVb9TxQQN5c8bNVnkc&quot;,&quot;SHhMdjlkYozOYaxmaTicD5lOnQb&quot;,&quot;DnpedKm2koHpkexup9Zcv7j7nOd&quot;,&quot;Xkcxd76zRoda73x9j2acaO1Hnwc&quot;,&quot;HYEDdSllEo8z7MxeJ0McluwOnvb&quot;,&quot;F2UYdybRUoDpoTxqokAczWK9nWj&quot;,&quot;ABRydbZT0o9sFhxwRMece0zKn9e&quot;,&quot;MT5odtppzopMONxzacscdcDsn8g&quot;,&quot;Ucyvdkaj5oYJkTxFjSTcfOPwnKg&quot;,&quot;XPeodmcCyoPEPLxxFoJcQ1gTnrh&quot;,&quot;P9ttdHwLgowz9hx7iGPclKkFnsb&quot;,&quot;S7Uid777dods4zx0OAycyIp8n6d&quot;,&quot;VBg5doxjFo42i0x6PfZc86NEnzf&quot;,&quot;Voa3d42dLoksrHxjZtwcillin5f&quot;,&quot;H0qRdPHbboPWOkx1DaAc5U5znIb&quot;,&quot;WXNsdRlLUo6fFNxcPKVclvAXnNc&quot;,&quot;T29MdmURQokPoyxSPoHcVAuFn3f&quot;,&quot;HTAUdlnXFoyUdDxvz8rcQQsMngd&quot;,&quot;CTMjdROvWow1Dyx4ZZdcUTZInZP&quot;,&quot;ULfsd8nxlol3bCxJ3xNcB1MEnSh&quot;,&quot;H8ypdmwkaog4V4x0o5vcmuM2nVb&quot;,&quot;JcwndLkPUoPjJUxy10wclDETnpf&quot;,&quot;AHTMdumRsoyTbcxTRkrcsaA1n9d&quot;,&quot;JVCCdyIPBoU3Bix06YfchxfCnye&quot;,&quot;ER3FdEoPJo2zPoxiWr3cNSQNnRc&quot;,&quot;RLuKdmdyqopO5kxeLuHcLwAjnQf&quot;,&quot;COxmdhMoVowBCdxXiccc47L7nVe&quot;,&quot;XQ1yd8nzQoYsdWxeM5Ecqa7nnad&quot;,&quot;C3wAdZPVXoOtI9xt2D0cNXqvnsf&quot;,&quot;RezDd6GTyogjZCx2gaQcchvDnrh&quot;,&quot;IJlxdILjao9iAUxxzhdcwEKZnQf&quot;,&quot;MUd0dbrpyonbQIxKaX5cx6Jynme&quot;,&quot;GqUrdgpaionDOQxXRwkcOApYnVb&quot;,&quot;DtHPdtvXAodt0uxM5WucnPxQnNh&quot;,&quot;P1YqdFAoqo2JW7xccJAcJ7BInpd&quot;,&quot;YdcedPCT1oxnCzx0t9gc46LRnlc&quot;,&quot;HeeldMxDxo7RdMxz7hrcJkTpn4d&quot;,&quot;EcMvdXZr8oksXPx6Ih6cOY3cndc&quot;,&quot;GIundxujDoiYUmxY5wlc5nmHnLb&quot;,&quot;GYRVdbwXqo3hCExmqnLcKI0InDc&quot;,&quot;VO8ndPr1ooCaWwxwkdrcFG7fn4b&quot;,&quot;LQczdcXnpocjIyxkmQOcYXwBnDg&quot;,&quot;QDeJdI1jLomOwCxzrT1cRhH2nHf&quot;,&quot;AZrpdFF9joNM6Ox8QWTc2b0Kn2f&quot;,&quot;IvXbdYBJao92Cux3oQ7c8Hmqn2g&quot;,&quot;SPi3dBUCroZ59mxq0Bjc30jHnjg&quot;],&quot;text&quot;:{&quot;apool&quot;:{&quot;numToAttrib&quot;:{&quot;0&quot;:[&quot;author&quot;,&quot;7516895515989147650&quot;]},&quot;nextNum&quot;:1},&quot;initialAttributedTexts&quot;:{&quot;attribs&quot;:{&quot;0&quot;:&quot;*0+u&quot;},&quot;text&quot;:{&quot;0&quot;:&quot;不会写代码的产品经理，24小时打造爆款法语单词游戏SUTOM&quot;}}},&quot;align&quot;:&quot;&quot;,&quot;type&quot;:&quot;page&quot;,&quot;revisions&quot;:null,&quot;locked&quot;:false}}},&quot;payloadMap&quot;:{&quot;Xkcxd76zRoda73x9j2acaO1Hnwc&quot;:{&quot;level&quot;:1},&quot;F2UYdybRUoDpoTxqokAczWK9nWj&quot;:{&quot;level&quot;:1},&quot;XPeodmcCyoPEPLxxFoJcQ1gTnrh&quot;:{&quot;level&quot;:1},&quot;S7Uid777dods4zx0OAycyIp8n6d&quot;:{&quot;level&quot;:1}},&quot;extra&quot;:{&quot;channel&quot;:&quot;saas&quot;,&quot;pasteRandomId&quot;:&quot;57c57111-1b1e-445a-8827-5589032b4675&quot;,&quot;mention_page_title&quot;:{},&quot;external_mention_url&quot;:{},&quot;isEqualBlockSelection&quot;:true},&quot;isKeepQuoteContainer&quot;:false,&quot;selection&quot;:[{&quot;id&quot;:2579,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:11},&quot;recordId&quot;:&quot;DnpedKm2koHpkexup9Zcv7j7nOd&quot;},{&quot;id&quot;:2580,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:12},&quot;recordId&quot;:&quot;Xkcxd76zRoda73x9j2acaO1Hnwc&quot;},{&quot;id&quot;:2581,&quot;type&quot;:&quot;block&quot;,&quot;recordId&quot;:&quot;HYEDdSllEo8z7MxeJ0McluwOnvb&quot;},{&quot;id&quot;:2582,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:13},&quot;recordId&quot;:&quot;F2UYdybRUoDpoTxqokAczWK9nWj&quot;},{&quot;id&quot;:2583,&quot;type&quot;:&quot;block&quot;,&quot;recordId&quot;:&quot;ABRydbZT0o9sFhxwRMece0zKn9e&quot;},{&quot;id&quot;:2584,&quot;type&quot;:&quot;block&quot;,&quot;recordId&quot;:&quot;MT5odtppzopMONxzacscdcDsn8g&quot;},{&quot;id&quot;:2585,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:12},&quot;recordId&quot;:&quot;Ucyvdkaj5oYJkTxFjSTcfOPwnKg&quot;},{&quot;id&quot;:2586,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:12},&quot;recordId&quot;:&quot;XPeodmcCyoPEPLxxFoJcQ1gTnrh&quot;},{&quot;id&quot;:2587,&quot;type&quot;:&quot;block&quot;,&quot;recordId&quot;:&quot;P9ttdHwLgowz9hx7iGPclKkFnsb&quot;},{&quot;id&quot;:2588,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:7},&quot;recordId&quot;:&quot;S7Uid777dods4zx0OAycyIp8n6d&quot;},{&quot;id&quot;:2589,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:20},&quot;recordId&quot;:&quot;VBg5doxjFo42i0x6PfZc86NEnzf&quot;},{&quot;id&quot;:2590,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:24},&quot;recordId&quot;:&quot;Voa3d42dLoksrHxjZtwcillin5f&quot;},{&quot;id&quot;:2591,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:19},&quot;recordId&quot;:&quot;H0qRdPHbboPWOkx1DaAc5U5znIb&quot;},{&quot;id&quot;:2592,&quot;type&quot;:&quot;text&quot;,&quot;selection&quot;:{&quot;start&quot;:0,&quot;end&quot;:17},&quot;recordId&quot;:&quot;WXNsdRlLUo6fFNxcPKVclvAXnNc&quot;}],&quot;pasteFlag&quot;:&quot;d34cd519-e475-4d3d-a63a-f0baf398040d&quot;}\" data-lark-record-format=\"docx/record\" class=\"lark-record-clipboard\"></span>\n\n🌟 引爆传播的技术细节\n病毒式传播引擎设计：\n// 战绩分享卡片生成核心\nfunction generateShareCard(attempts) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n  \n  // 绘制动态结果矩阵\n  attempts.forEach((attempt, row) => {\n    attempt.forEach(({ status }, col) => {\n      ctx.fillStyle = STATUS_COLORS[status]; // 🟩🟨⬜️对应颜色\n      ctx.fillRect(col * 40, row * 40, 36, 36);\n    });\n  });\n  \n  // 添加个性化文案\n  ctx.fillText(`我在SUTOM.fr用${attempts.length}次猜出今日单词！`, 20, 200);\n  return canvas.toDataURL();\n}\n传播数据：\n- 分享转化率：62%\n- 平均传播深度：3.2层\n- K因子：1.78（每个用户带来1.78个新用户）\n\n给非技术创客的终极建议\n1. 技术杠杆法则：\n用AI处理算法（Copilot） + 云服务处理架构（Vercel） + 现成UI组件（Vue）\n2. 最小可行技术栈：\n- 前端：Vue.js + TailwindCSS\n- 后端：Netlify Functions\n- 存储：浏览器localStorage\n- 部署：Vercel/Netlify\n3. 智能调试三板斧：\n  - 对AI说：\"解释这段代码的潜在边界问题\"\n  - 要求：\"为这个函数添加错误处理逻辑\"\n  - 指令：\"将代码重构为更简洁的ES6语法\"\n\n立即体验技术奇迹\nSUTOM证明：在智能工具时代，技术实现力不再是创意的瓶颈。这款完全由非技术背景打造的游戏，现在每天吸引上万玩家挑战法语单词：\n🔥 立即挑战今日单词：\nhttps://sutom.fun/\n📦 完整开源项目：\nhttps://github.com/win-wiz/sutom-game\n📚 技术文档参考：\nhttps://github.com/win-wiz/sutom-game/tree/main/doc\n当你看到玩家分享彩色字母矩阵时，就会理解：\n技术只是工具，而人类的创意永远是最稀缺的资源\n明天，你的创意会改变什么？",
    "created_at": "2025-08-02T02:25:41Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7428"
  },
  {
    "id": 7425,
    "title": "【Base 迪拜】测试专家｜35K-50k 18薪｜包食宿",
    "content": "\n-学历要求：本科\n-年龄要求：22-40优先\n-国籍要求：不限\n\n福利：\n  年终奖保底：1个月-4个月薪资\n  每年30天带薪休假（往返机票报销）\n  提供工签、医疗保险、每月团建、节日红包\n\n【岗位职责】\n\n1.执行产品的功能测试、接口测试和系统测试，发现缺陷并及时记录，协助开发定位问题原因，并验证缺陷修复的有效性，直到问题解决关闭。\n2.负责公司自动化测试与性能测试一体化平台的整体架构设计与搭建；\n3.制定平台开发规范、技术选型和扩展方案，推动测试工具链标准化与流程自动化；\n4.领导并组织团队完成核心模块研发与迭代，包括脚本管理、数据驱动、分布式执行、监控告警、报表展示等；\n5.与研发、运维、产品等团队紧密协作，深度集成 CI/CD 流程，确保平台在多环境下稳定交付；\n6.跟踪业界最新测试技术与工具，评估并引入合适的开源或商业方案，持续提升团队测试效率和质量，主导关键项目测试工作，承担团队中高级别质量把控任务。\n\n 【任职要求】\n\n1.五年以上软件测试或测试平台开发经验，其中至少两年担任自动化测试框架／平台搭建负责人，具备风险识别和测试闭环能力\n2.精通 Java、Python 或 Groovy 中至少一种语言，具备扎实的编码和脚本开发能力；\n3.熟悉主流自动化测试框架（如 Selenium、Appium、Playwright）及性能测试工具（如 JMeter、Locust、Gatling），能设计性能测试场景，分析 TPS、响应时间、瓶颈定位等。\n4.掌握分布式任务调度与执行技术（如 Kubernetes、Docker、消息队列）；\n5.熟练运用 Prometheus、Grafana、ELK 等监控与日志中台，具备性能数据可视化经验，具备一定的代码调试能力或日志分析能力；\n6.精通 Git、Jenkins/GitLab CI、Maven/Gradle 等 DevOps 工具链；\n7.拥有大型测试平台或中台系统的架构设计与实践经验，能够独立撰写高可用、高并发系统的设计文档，有能力指导初中级测试工程师，推动团队技术成长。\n\n工作地点：迪拜未来博物馆对面",
    "created_at": "2025-08-01T11:21:19Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7425"
  },
  {
    "id": 7424,
    "title": "【工具自荐】B站学习神器，生成视频思维导图，与AI实时对话，根据字幕跳转对应的位置",
    "content": "一款专为bilibili用户设计的浏览器插件，它结合了视频内容互动与AI技术。一键生成当前视频内容的思维导图，AI总结视频内容，提问视频内容，视频时间线等功能。基于智谱AI模型，注册获取对应的API KEY 即可免费使用。\n\n演示效果\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3da44cf8-6180-4dc6-8bb6-b5ffa4494ed3\" />\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8c351725-e5ed-495a-9e1d-fb714c652ce2\" />\n<img width=\"1280\" height=\"800\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a1309330-e102-42a9-bcde-ee34c853ae5d\" />\n\n下载思维导图\n<img width=\"3308\" height=\"3100\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/83ef71f7-f3a9-4da5-8472-e408f257f12f\" />\n\n\n链接：https://chromewebstore.google.com/detail/bilibili-ai/jcklggahkmngcnfakpmadejmajobjjeg",
    "created_at": "2025-08-01T02:15:38Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7424"
  },
  {
    "id": 7423,
    "title": "【开源自荐】深度指南：独立开发如何做推广",
    "content": "一份完整的独立开发者推广策略指南，重点关注前期、免费推广以及小型付费投流正循环的建立。\n\n开源地址： https://github.com/MaskerPRC/independent-development-marketing",
    "created_at": "2025-07-31T19:53:52Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7423"
  },
  {
    "id": 7422,
    "title": "【工具自荐】Shapify AI：一款收录 ai 3d 模型的工具平台",
    "content": "\n## 工具简介\n\nShapify AI 是一个 AI 3D 模型生成器目录网站。\n\n它收录和整理了市面上优秀的、由 AI 驱动的 3D 工具平台，目的是帮助用户能够快速发现将图像、文本或视频转换为 3D 模型的工具\n\n## 主要功能\n\nShapify AI 致力于成为一个涵盖所有 AI 3D 技术的综合平台，收录的工具主要包括以下几类：\n\n1. 图像转3D模型 (Image to 3D)：将静态图片转换为 3D 模型\n2. 文本转3D模型 (Text to 3D)：通过输入文字描述，从想象中创造 3D 模型\n3. 视频转3D模型 (Video to 3D)：通过视频来重建现实场景与物体\n4. 模型优化与精炼 (Optimize and Refine)：提供相关工具来优化和完善你的模型。\n\nhttps://www.shapify.ai/\n\n<img width=\"1409\" height=\"767\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/778d1b7b-3a1d-4cc6-be61-f2244dfc84ff\" />",
    "created_at": "2025-07-31T12:54:09Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7422"
  },
  {
    "id": 7421,
    "title": "【工具自荐】一款专门为创作者和角色扮演者打造的，高度可定制人物关系原型生成工具",
    "content": "# 工具名称\nCharacter Headcanon Generator\n# 工具地址\n[Character Headcanon Generator](https://www.headcanon-generator.app/)\n# 工具特点\n- 多模型支持\n您可以在不同的 AI 模型（Google Gemini pro, GLM, groq）之间切换，以获得多样化的写作风格和语调。\n- 深度定制\n用户可以选择性格特征、习惯、世界观等等\n- 一键复制和分析功能\n# 如何使用？\n1. 输入人物名称\n2. 选择人物性格特点，支持自定义输入\n3. 选择当前世界观背景\n4. 选择角色特征长度\n5. 选择模型或默认模型\n6. 点击生成即可\n\n# 工具截图\n\n<img width=\"2924\" height=\"3934\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3d4ed0a2-6e8f-428c-8b4a-3fbea7b6e272\" />\n<img width=\"3022\" height=\"1604\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/49fb90a6-4535-43f9-835c-c2c979f2e82c\" />",
    "created_at": "2025-07-31T12:42:44Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7421"
  },
  {
    "id": 7420,
    "title": "【开源自荐】Context Space：一键管理和连接外部数据的开源平台",
    "content": "无论是构建一个智能AI助手、一个SaaS产品，还是一个自动化工作流，作为开发者我们都需要处理各种外部数据和服务，比如常用的GitHub、stripe、notion等等。\n\n然而，每当我们需要接入一个新的服务时，通常意味着一系列重复且繁琐的工作：\n\n- 研究API文档：每个服务的API都自成一派，学习成本高。\n- 处理OAuth认证：为每个服务实现一遍完整的OAuth 2.0流程，处理回调、刷新令牌。\n- 管理API密钥：如何安全地存储和轮换几十个服务的API密钥？这是一个巨大的安全挑战，一不小心就可能将敏感信息泄露在代码仓库中。\n- 编写重复代码：为每个服务编写几乎一样的客户端、错误处理和重试逻辑。\n\n\n这些繁杂的配置流程不仅消耗了大量宝贵的开发时间，也带来了持续的安全和维护成本。\n\n为了解决这个痛点，我们开发并开源了 Context Space ：**一个致力于将复杂的数据集成变为一键操作的开源平台。**\n\n### 项目简介\n\nContext Space 是一个开源的、可自部署的平台，提供一个统一的接口，让你能够安全、高效地管理和连接各种外部数据源。它将所有复杂的认证、API调用和安全管理工作都封装起来，让你用一个极其简单的统一接口就能在cursor和claude code里调用外部数据。\n\n目前，Context Space已经内置支持38+主流服务，包括：\n- 开发工具: GitHub\n- 团队协作: Slack, Notion, Figma, Zoom\n- 商业SaaS: HubSpot, Stripe\n- 公共数据: Spotify, TMDB\n- 以及更多...\n\n<img width=\"1274\" height=\"711\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5fd8f364-fd80-40d6-8d8d-5b615e9bbb31\" />\n\n  \n### 核心特点：实现外部数据的一键连接\n\n**1. 统一的API接口**\n\n在Context Space中，无论是从GitHub拉取issue，还是向Slack发送消息，都使用完全相同的API格式，连接不同的外部服务就像调用一个函数一样简单。\n\n// 使用统一的客户端\nimport { contextSpace } from './lib/client';\n\n// 获取GitHub仓库的Issues\nconst issues = await contextSpace.invoke(\"github\", \"list_issues\", {\n  owner: \"context-space\",\n  repo: \"context-space\"\n});\n\n// 向Slack频道发送消息\nawait contextSpace.invoke(\"slack\", \"post_message\", {\n  channel: \"#general\",\n  text: \"Hello from Context Space!\"\n});\n\n**2. 企业级的安全保障**\n\nContext Space在后端集成了HashiCorp Vault，这是一个业界领先的密钥管理工具。所有服务的OAuth令牌和API密钥都被加密存储在Vault中，并且支持自动刷新，从根本上杜绝了密钥泄露的风险。\n\n**3. 优化开发者的产品体验**\n\n我们深知开发者的痛点，因此在产品体验上做了大量优化：\n\n- 交互式工作台 (Playground)：在Web界面可以直接测试和调用任何已连接的服务，实时查看返回结果，极大地方便了调试过程。\n- 一键集成AI开发工具：Context Space提供了独创的cursor://深度链接功能，只需点击一个按钮，就能将所有服务能力一键注入Cursor，无需手动编辑任何JSON配置文件。\n  \n### Context Space的应用场景\n\n- AI应用开发者：快速为AI Agent赋予与真实世界交互的能力，让它能读写代码、收发消息、处理支付。\n- SaaS产品团队：想要为产品快速上线丰富的第三方集成功能，提升产品竞争力。\n- 独立开发者和初创公司：希望将精力聚焦在核心业务创新上，而不是被基础设施拖慢脚步。\n- 自动化爱好者：构建比Zapier更灵活、成本更低的个人或团队自动化工作流。\n  \n### 开源共享\n\n我们选择将Context Space完全开源，让每个开发者和团队都能没有后顾之忧。\n- 完全透明：可以审查每一行代码，确保没有安全后门。\n- 灵活自部署：将Context Space部署在自己的服务器上，数据和凭证由自己完全掌控。\n- 自由扩展：轻松添加官方尚未支持的私有服务或API。\n  \n\n我们相信，未来的应用开发，应该建立在更高效、更安全的数据连接基础之上，Context Space是我们为实现这一愿景迈出的第一步。\n\n我们诚挚地邀请开发者们来体验这个能极大提升开发效率的开源平台。\n\n- GitHub仓库 (欢迎Star⭐): https://github.com/context-space/context-space\n- 在线体验/官方网站: https://context.space/\n  \n我们真正想做的是创造有价值的业务逻辑，而不是日复一日地搭建数据管道。使用Context Space，一起告别繁琐的配置工程，把时间还给创造本身。",
    "created_at": "2025-07-31T11:43:07Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7420"
  },
  {
    "id": 7419,
    "title": "【工具自荐】TracePlay：一款微信小程序，将运动轨迹可视化为3D动画，利好徒步、骑行跑步爱好者",
    "content": "# 工具名称\nTracePlay\n\n# 工具地址\n微信小程序搜索 “TracePlay”，或者微信扫描以下二维码\n\n<img src='https://github.com/user-attachments/assets/aba9cef3-de5e-46dc-8fbc-0fd172a55641' width='200'/>\n\n# 工具描述\n- 记录骑行、徒步等运动轨迹，轨迹可以添加照片\n- 也可以导入其他平台（如行者、两步路、AllTrail、Strava等）的轨迹的GPX\n- 缩放地图搜索路线\n- **将轨迹制作成 3D 轨迹动画**\n\n视频演示：https://www.bilibili.com/video/BV11k82zNECN\n\n<img width=\"314\" height=\"608\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/be340a17-b852-4308-a84e-c586d1362aed\" />\n<br/>\n\n<img src='https://github.com/user-attachments/assets/00908f9e-abcc-4ae8-8518-5ea8e4e3d884' width='400'/>\n\n<img src='https://github.com/user-attachments/assets/4978e807-e70d-4e23-aaab-4e14c039abd1' width='400'/>\n",
    "created_at": "2025-07-31T11:15:41Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7419"
  },
  {
    "id": 7418,
    "title": "【开源自荐】Meta Dashboard：大模型时代的超级AI独立开发者项目管理工具",
    "content": "***这是一个专为独立开发者设计的全栈项目管理面板，用它来管理个人AI产品独立开发多个项目的进展。***\n\n体验地址： https://100.agitao.net/\nGitHub: https://github.com/your-username/meta-dashboard\n\n### 界面UI\n\n<img width=\"2267\" height=\"1542\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8ad382e2-3c84-425a-92ac-dd0199c46445\" />\n\n<img width=\"2280\" height=\"1581\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1378c4a1-333b-4c8c-b72f-f6e4b348faae\" />\n\n### **核心亮点：**\n- **AI项目生成器**：输入创意描述，大模型自动生成完整的项目结构和技术方案\n- **项目全生命周期跟踪**：从创意到上线的完整记录，包括进度更新、里程碑管理和开发笔记\n- **个人品牌建设**：内置简历管理系统，自动聚合项目作品集，一键生成公开简历\n- **多平台认证**：支持 GitHub、Google 和微信公众号以及微信开放平台登录，支持账号密码登录，适配不同用户群体\n\n技术栈采用 Vue.js 3 + Node.js + SQLite，轻量化部署，开箱即用。特别适合想要系统化管理多个项目的独立开发者。\n\n项目完全开源，还在持续更新中。如果你也在做独立开发，这个工具值得试试。\n\n### **详细介绍**\n\n#### ✨ 功能特性\n\n##### 🤖 AI增强开发\n- **AI项目生成器** - 基于OpenAI API，从创意描述自动生成完整项目结构\n- **智能项目分析** - AI辅助项目规划和技术栈推荐\n- **多语言支持** - 中英文双语AI生成，适配国际化开发\n\n##### 📊 项目管理核心\n- **可视化看板** - 直观展示100个AI项目的进展状态\n- **项目历史追踪** - 完整记录进度更新、状态变更、里程碑和手动笔记\n- **全局活动时间线** - 跨项目的统一历史视图，掌控全局开发节奏\n- **任务管理** - 支持新增任务，Markdown格式详细描述\n\n##### 👤 个人品牌建设\n- **简历管理系统** - 版本控制、状态跟踪、一键发布公开简历\n- **项目作品集** - 自动聚合项目成果，展示开发历程\n- **开发者档案** - 记录技能成长轨迹和项目经验\n\n##### 💬 社区互动\n- **想法征集系统** - 用户提交创意想法，社区投票排名，AI转化优秀想法为项目\n- **智能投票机制** - 每人每个想法最多投2票，每日投票限制，防止刷票\n- **评论系统增强** - 支持图片、视频等多媒体附件上传预览\n- **团队协作** - 基于角色的权限管理（admin/viewer）\n- **微信生态集成** - 支持微信登录、群二维码管理\n\n##### 🛠️ 开发者友好\n- **OAuth多平台** - GitHub、Google、微信账号登录\n- **国际化** - 完整的中英文双语界面\n- **云存储集成** - OSS文件上传服务，支持多种文件格式\n- **响应式设计** - 适配移动端和桌面端开发场景\n\n##### 📈 数据洞察\n- **管理员统计面板** - 项目数据可视化分析\n- **进度追踪** - 量化开发效率和项目完成情况\n- **站点配置管理** - 灵活的平台参数配置\n\n\n<img width=\"2338\" height=\"1557\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/25bd70b3-8b80-4bbe-acb9-96a04c9fba73\" />\n\n<img width=\"2154\" height=\"1566\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/16e980b0-43c1-483f-825b-173d0030981b\" />\n\n<img width=\"2274\" height=\"1551\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b1c0d601-b383-4397-9ece-bed4aa9a5511\" />\n\n<img width=\"2250\" height=\"1513\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/33c9f70e-b6c1-46f6-a46c-afc154b666a3\" />\n\n<img width=\"2239\" height=\"1563\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3dd38ccc-6893-4e18-b4df-ece4a612b7c4\" />\n\n<img width=\"2177\" height=\"1585\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f7fa83b6-c720-44b6-b50a-45e6a0265a5a\" />\n\n<img width=\"2117\" height=\"1561\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/71afa6c3-f769-465d-b1f5-4ebcf1e644b1\" />\n",
    "created_at": "2025-07-31T10:38:39Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7418"
  },
  {
    "id": 7417,
    "title": "【工具推荐】飞搜侠 -  一款在线飞书文档搜索工具,快速找到公开的高质量飞书文档",
    "content": "# 飞搜侠 - 飞书文档搜索工具,快速找到公开的高质量飞书文档 \n\n## 工具地址\n[https://www.feisoo.com](https://www.feisoo.com/#ruanyf)\n\n## 工具介绍\n现在很多大佬喜欢把教程放在飞书上，如果不是被人分享，这些文档几乎很难搜索到，所以飞书文档一直是高品质资源的代名词。\n\"飞搜侠\"就是一款专注于搜索飞书文档的软件，它能够通过关键词，快速搜索到飞书文档，并且能够直接打开或复制链接。\n目前软件完全免费无限制、界面也很简单清爽。\n\n工具支持在网页端、安卓端中使用\n\n## 工具界面\n\n<img width=\"3022\" height=\"1548\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9f76fc46-28fb-4054-a81e-e1db3ceb966d\" />\n\n<img width=\"3022\" height=\"1550\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5ee16820-c1f0-4933-9cf0-38a8da78645f\" />",
    "created_at": "2025-07-31T10:06:01Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7417"
  },
  {
    "id": 7416,
    "title": "【工具推荐】 InsTokViewer - 一款免登录、无限制的Instagram账号帖子批量下载器",
    "content": "## 工具名称\n**InsTokViewer**\n\n## 工具地址\n[https://www.instokviewer.com](https://www.instokviewer.com)\n\n## 工具描述\n可免登录自由搜索Instagram账号，查看ins帖子、Stroy、Highlight信息，支持批量下载博主所有帖子的图片与视频；\n\n对于无法注册instagram账号，又需要查看instagram平台的内容创作者们来说，这是一个内容搬运神器；工具免登录、免费无限制，界面也很简单清爽；\n\n<img width=\"3022\" height=\"1560\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b663f4c-2278-45fe-8288-c0a7393f98e3\" />\n\n<img width=\"3022\" height=\"1554\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05bab816-cdf3-4b59-9679-fef2e86c7921\" />\n\n<img width=\"3022\" height=\"1548\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1172c00a-8a33-48ec-a3a6-e74b876d7d8f\" />\n\n<img width=\"3022\" height=\"1546\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/1aaa4ecb-8e08-4a6f-a623-392b1573c8ab\" />",
    "created_at": "2025-07-31T09:08:39Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7416"
  },
  {
    "id": 7415,
    "title": "【开源自荐】GithubStarsManager — 用 AI 管理你的 GitHub Stars Repo，追关注仓库的release更新（纯vibe coding）",
    "content": "一款管理Github star的应用。为“随手 Star、事后难找”的开发者而生。自动同步星标仓库、AI 归类与摘要、语义搜索、订阅 Release 并一键下载。比手动标签更聪明，比 GitHub 自带更省心。\n\n![Image](https://github.com/user-attachments/assets/906cbc37-5459-4e02-83fb-ea07b31fc8d1)\n![Image](https://github.com/user-attachments/assets/d699706e-cfd4-41e7-a542-37eb98c1fff4)\n\n\n核心价值\n- 不再迷路：几百上千个 Stars，AI 自动归拢，想找就能找到\n- 省时追更：订阅 Release，更新集中呈现，直接下载，不再刷时间线\n- 开箱即用：提供打包客户端，无需环境运行\n\n主要功能\n- 星标一键同步：填入 GitHub Token，自动拉取所有 Star 仓库\n- AI 自动分析：读取 README 生成摘要、标签、分类（内置提示词模板）\n- 语义搜索：用自然语言搜仓库（无需记仓库名）\n- Release 追踪：对指定仓库订阅 Release，最新版本集中查看\n- 一键下载：在发布页直接展开并下载发布资产\n- 智能过滤：用关键词过滤关心的更新（如 dmg/mac/arm64/aarch64 等）\n- 中英双 Wiki：按语言自动跳转 deepwiki（英）或 zread（中）\n\n适合谁\n- Star 多到找不到的开发者\n- 需要系统追踪release更新的人\n- 不想手动打标签的“懒人型”高效用户\n\n上手步骤\n1) 设置 GitHub Token 与 AI Key\n2) 一键同步 Stars\n3) 使用默认 AI 模板进行分析\n4) 订阅想追更的仓库（铃铛）\n5) 在发布页过滤并下载\n\n链接\n- GitHub（含打包客户端）：https://github.com/AmintaCCCP/GithubStarsManager\n- 文档：https://zread.ai/AmintaCCCP/GithubStarsManager\n\n> P.S: 这个应用是完全用vibe coding写的，因为我一句代码都不会写。用了周末限免的bolt.new和免费的kiro。作为一个不会编程的人，第一次凭借AI做一个产品。",
    "created_at": "2025-07-31T08:45:12Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7415"
  },
  {
    "id": 7414,
    "title": "【工具自荐】专为目前Roblox平台爆火的一款模拟游戏Grow a Garden玩家精心制作的强大工具（最新版）",
    "content": "# 工具名称\nGrow a Garden Calculator Tool\n# 在线地址\n[grow a garden calculator tool](https://growagarden-calculator.tools)\n# 如何使用计算器使用起来非常方便，而且简单易懂。操作方法如下：\n\n步骤 1：选择作物\n首先从下拉菜单中选择您要处理的作物（例如蓝莓、苹果或土豆）。\n\n第 2 步：选择突变\n接下来，选择你的作物所含的突变。你可以从以下选项中进行选择：\n震惊\n金的\n天界\n以及更多\n如果您的作物有多个突变，计算器会自动合并它们的影响。\n\n步骤 3：应用增强功能\n您可以启用影响最终值的可选奖励：\n好友提升\n双倍销售活动\n权重乘数\n这些有助于更准确地反映游戏内状况。\n\n步骤 4：获取最终值\n计算器将立即显示：\n\n农作物总价值（谢克尔）\n主动乘数\n常规作物和变异作物价值的比较\n您还可以输入作物的数量及其重量，以实现大丰收。\n\n工具主要页面截图：\n\n<img width=\"2804\" height=\"1442\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/710e8e6b-c1e0-4d57-8ef4-809e09cfb1de\" />\n\n<img width=\"2588\" height=\"2666\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ffb94ceb-4f83-402d-8848-1f2da2dc15c5\" />",
    "created_at": "2025-07-31T08:43:25Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7414"
  },
  {
    "id": 7413,
    "title": "【工具自荐】AI 播客翻译器 Bayt — 听力口语跟读资讯的神器",
    "content": "我是 Mac 应用 Eye Monitor 和桌面便利贴的开发者 Mason。本周我在 iOS 上发布了一款 **AI 播客软件 — Bayt**，我真诚地邀请大家成为 Bayt 的早期用户。\n\n**Bayt 能将各国语言的播客内容，通过 AI 转换成自然流畅的中文音频，并提供原文 + 中文的双语字幕**。即使你对外语不熟练，也能轻松收听全球高质量播客节目。\n\n如果你：\n\n1、对世界各地的知识和文化感兴趣，希望拓宽视野；\n\n2、喜欢科技、艺术、教育、故事等内容；\n\n3、想听外语播客却被语言挡住了门槛；\n\n4、正在学习一门语言，想通过真实语料提升听力和口语，或进行影子跟读；\n\n那我相信 Bayt 会是一个很棒的工具。\n\n📱 App Store 下载链接：[https://apps.apple.com/app/apple-store/id6748532039?pt=121796720&ct=launch&mt=8](https://apps.apple.com/app/apple-store/id6748532039?pt=121796720&ct=mail&mt=8)\n\n核心功能：\n\n1、英语、日语、韩语、西班牙语、葡萄牙语、德语等语言的播客均可转换成中文音频\n\n2、真实自然的语音\n\n3、高质量的翻译质量\n\n4、提供中文和原文双语字幕\n\n5、不同讲话人的识别\n\n6、倍速、双语切换、播客搜索、收藏等功能\n\n我真诚邀请大家成为 Bayt 的早期用户，也欢迎将使用体验反馈给我。如果你喜欢这个产品，也欢迎分享给朋友 😊\n\n如有任何疑问或建议，请随时联系我：cswenshuo@gmail.com\n\n<img width=\"1320\" height=\"2868\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5791974b-772f-4628-a8e4-74823a3d67cb\" />\n<img width=\"1320\" height=\"2868\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f7f28abf-1a08-4e9b-9a7d-fa7344d79bef\" />\n<img width=\"1125\" height=\"2436\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4c36343a-5d76-4af4-b33b-7deea11a05e7\" />",
    "created_at": "2025-07-31T08:30:13Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7413"
  },
  {
    "id": 7412,
    "title": "MiroTalk：安全的点对点通信、可扩展的多人会议、一对一通话、直播广播及高效日程管理平台",
    "content": "🔹 **MiroTalk SFU – 可扩展的多人视频会议**\n\n<img width=\"1280\" height=\"720\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0dc292a4-855b-4ecc-8684-5d10fbb15589\" />\n\n\nMiroTalk SFU 是基于选择性转发单元（SFU）架构的专业开源视频会议解决方案。性能稳定、可扩展，支持浏览器内现代协作功能，适用于远程办公、在线教育和直播活动。\n🔗 Live Demo: [sfu.mirotalk.com](https://sfu.mirotalk.com/)\n📂 代码仓库: [GitHub Repo](https://github.com/miroslavpejic85/mirotalksfu)\n\n---\n\n🔹 **MiroTalk P2P – 安全的点对点视频通信**\n\n<img width=\"1280\" height=\"720\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9cc5949a-5b8f-446c-9a01-b1e7f5e17823\" />\n\nMiroTalk P2P 是一个开源的网页应用，实现用户之间直接加密的点对点视频、音频和文字通信，无需依赖媒体服务器。设计简洁，注重隐私和快速部署，适合小团队或个人交流。\n🔗 Live Demo: [p2p.mirotalk.com](https://p2p.mirotalk.com/)\n📂 代码仓库: [GitHub Repo](https://github.com/miroslavpejic85/mirotalk)\n\n---\n\n🔹 **MiroTalk C2C – 一对一实时通信**\n\n<img width=\"1280\" height=\"720\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/865789e8-f61a-4ece-8392-d4f385083ce5\" />\n\nMiroTalk C2C 是一个轻量级开源方案，专为一对一视频和语音通话设计。便于集成到客服系统、远程咨询或内部工具，提供简洁高效的浏览器通信体验。\n🔗 Live Demo: [c2c.mirotalk.com](https://c2c.mirotalk.com/)\n📂 代码仓库: [GitHub Repo](https://github.com/miroslavpejic85/mirotalkc2c)\n\n---\n\n🔹 **MiroTalk BRO – 轻量级多人视频会议**\n\n<img width=\"1280\" height=\"720\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/00ea81d5-951d-4103-8a33-6b013d5845bb\" />\n\nMiroTalk BRO 是一个轻量级的多人视频会议解决方案，适合中小团队快速搭建会议系统，支持稳定的视频和音频交流。\n🔗 Live Demo: [bro.mirotalk.com](https://bro.mirotalk.com/)\n📂 代码仓库: [GitHub Repo](https://github.com/miroslavpejic85/mirotalkbro)\n\n---\n\n🔹 **MiroTalk WEB – 高效的在线日程管理工具**\n\n<img width=\"1280\" height=\"720\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2c6c45af-df33-4baf-b4ea-94891d2012e1\" />\n\nMiroTalk WEB - WebScheduler 是一个开源的在线日程和会议安排工具，帮助团队更好地管理时间和任务，支持多用户协作。\n\n🔑 **演示登录信息：**\n - 用户名：demo\n - 邮箱：demo@gmail.com \n - 密码：Demo@123\n\n🔗 Live Demo: [webrtc.mirotalk.com](https://webrtc.mirotalk.com/)\n📂 代码仓库: [GitHub Repo](https://github.com/miroslavpejic85/mirotalkwebrtc)\n\n",
    "created_at": "2025-07-31T05:51:02Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7412"
  },
  {
    "id": 7411,
    "title": "【开源自荐】HowLongFresh 智能化查询食物保质期的网站",
    "content": "### 产品介绍\n\n  HowLongFresh\n是一个AI驱动的食物保鲜指南，通过智能识别技术和权威数据库，帮助用户了解食物的最佳保存时间，减少食物浪费。支持文字搜索和拍照识别，为您提供冷藏、冷冻和常温条件下的专业储存建议。\n\n  ### 功能特征\n\n  - AI智能识别：拍照上传即可识别食物，准确率达95%以上\n  - 权威数据支持：基于USDA FoodKeeper和StillTasty数据库\n  - 全面分类浏览：覆盖10大类别，包含2000+种常见食物\n  - 中英双语支持：提供本地化的食物保鲜知识服务\n\n### 访问地址\nwww.howlongfresh.site",
    "created_at": "2025-07-31T04:37:16Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7411"
  },
  {
    "id": 7410,
    "title": "【开源自荐】用AI一键整理标签页, chrome浏览器的copilot",
    "content": "AIpex是一款基于Plasmo的浏览器插件，让你灵活地在多个标签页中切换，快速打开历史记录，利用AI一键整理标签页\n\n> 项目地址:[https://github.com/buttercannfly/AIPex]( https://github.com/buttercannfly/AIPex)\n\n你是否也厌倦了在20+标签中切换，你是否厌倦了当需要AI能力时还需要切换到Chatgpt, Claude页面?\n你是否也是Raycast的忠实用户，想用使用快捷键完全绝大多数工作，那么这个开源项目值得你关注。\n\n主要功能:\n\n- 💬 任意位置AI 聊天室： 直接在网页中进行 自然对话、代码生成、文本处理，告别网页切换！\n\n- ⚡️ 50+ 效率动作： 执行预设命令 快速完成常见任务 (打开历史记录、书签等)，大幅节省时间。\n\n- 🔍 智能命令与过滤： 使用 高级指令 精准筛选模型响应或执行特定操作。\n\n- 🧩 一键整理标签页：使用AI理解标签含义，准备快速地归类\n\n<img width=\"1404\" height=\"782\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ed69ffe2-d660-4c75-bc8e-1093389c67d0\" />\n\n技术栈：Plasmo + React，代码简洁易懂，可以作为开发浏览器插件以及AI Chatbot的学习案例。",
    "created_at": "2025-07-31T03:04:06Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7410"
  },
  {
    "id": 7409,
    "title": "【开源自荐】Everything AI Chat - 让文件搜索支持自然语言的桌面客户端",
    "content": "这个工具彻底改变了传统文件搜索的体验。你只需要用自然语言描述想找的文件，AI会自动转换为Everything的精确搜索语法，让你在数万个文件中毫秒级找到目标。\n\n开源地址： https://github.com/MaskerPRC/everything-ai-chat\n\n<img width=\"1500\" height=\"1000\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8b8e0672-bfb9-4dd3-a21e-871e75b80c97\" />\n\n<img width=\"1799\" height=\"1200\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f6445cbb-ec12-4834-ace7-dceacdcf7fb4\" />\n\n<img width=\"1799\" height=\"1200\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/83c00bfa-ca49-40b3-8490-8d16cc2798fc\" />\n\n**核心亮点：**\n\n🧠 **AI自然语言搜索**：输入\"今天修改的PDF文件\"、\"大于10MB的视频\"，AI自动转换为专业搜索语法  \n⚡ **极速搜索体验**：基于Everything引擎，支持大容量硬盘的毫秒级响应  \n🔧 **一键智能连接**：自动搜索Everything安装位置，多策略定位，零配置启动  \n🎨 **现代化界面**：Vue 3 + 自定义标题栏，响应式设计，搜索历史智能管理  \n\n**特别适合：**\n\n- 程序员需要在海量代码文件中精确定位的情况\n- 设计师管理大量素材和项目文件\n- 研究人员整理和查找文档资料  \n- 普通用户告别低效的Windows搜索\n\n**搜索示例对比：**\n```\n自然语言: \"昨天下载的压缩包\"\nAI转换为: *.zip;*.rar dm:yesterday\n传统方式: 需要手写复杂Everything语法或在文件夹中慢慢翻找\n```\n\n**技术栈：** Electron + Vue 3 + OpenAI API + Everything HTTP API，代码架构清晰，支持Windows 7-11全系统。\n\n**技术创新点：**\n- 三级进程管理策略（优雅关闭→强制终止→高级终止）\n- 多策略自动发现Everything安装位置（注册表+路径+快捷方式）\n- 智能端口发现和配置文件自动化\n- 本地优化规则 + AI双重查询优化机制\n\n这个项目展示了如何用现代技术包装传统工具，让专业软件变得人人可用。即使是Everything的高级语法，普通用户也能通过自然语言轻松掌握。",
    "created_at": "2025-07-30T14:51:36Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7409"
  },
  {
    "id": 7408,
    "title": "谁在招人？（2025年8月）",
    "content": "这里是免费的程序员招聘服务。\n\n如果你们团队正在招人，欢迎把招聘信息发在这个帖子里面。请简要描述，岗位名称、工作地点、岗位要求、团队简介、联系方式等等。\n\n**注意：同一个团队如果招聘多个岗位，请写在一起，不要分成多个部分张贴。**\n\n读者可以咨询，但请不要发布与招聘无关的内容，禁止对公司或岗位进行评论或抱怨。如果有意应聘，请直接与发帖人联系。\n\n谢绝中介和猎头发帖，违者拉黑。\n\n## 历史帖\n\n程序员的招聘往往长期有效，大家别忘了查看上月的岗位。\n\n- 2025年： [7月](https://github.com/ruanyf/weekly/issues/7169)，[6月](https://github.com/ruanyf/weekly/issues/6965)，[5月](https://github.com/ruanyf/weekly/issues/6771)，[4月](https://github.com/ruanyf/weekly/issues/6443)，[3月](https://github.com/ruanyf/weekly/issues/6189)，[2月](https://github.com/ruanyf/weekly/issues/6012)，[1月](https://github.com/ruanyf/weekly/issues/5830)\n- 2024年：[12月](https://github.com/ruanyf/weekly/issues/5610)，[11月](https://github.com/ruanyf/weekly/issues/5445)，[10月](https://github.com/ruanyf/weekly/issues/5253)，[9月](https://github.com/ruanyf/weekly/issues/5090)， [8月](https://github.com/ruanyf/weekly/issues/4911)，[7月](https://github.com/ruanyf/weekly/issues/4743)，[6月](https://github.com/ruanyf/weekly/issues/4550)，[5月](https://github.com/ruanyf/weekly/issues/4390)，[4月](https://github.com/ruanyf/weekly/issues/4204)，[3月](https://github.com/ruanyf/weekly/issues/4075)，[2月](https://github.com/ruanyf/weekly/issues/4002)，[1月](https://github.com/ruanyf/weekly/issues/3814)\n- 2023年：[12月](https://github.com/ruanyf/weekly/issues/3684)，[11月](https://github.com/ruanyf/weekly/issues/3599)，[10月](https://github.com/ruanyf/weekly/issues/3529)，[9月](https://github.com/ruanyf/weekly/issues/3425)，[8月](https://github.com/ruanyf/weekly/issues/3324)，[7月](https://github.com/ruanyf/weekly/issues/3222)，[6月](https://github.com/ruanyf/weekly/issues/3157)，[5月](https://github.com/ruanyf/weekly/issues/3091)，[4月](https://github.com/ruanyf/weekly/issues/3022)，[3月](https://github.com/ruanyf/weekly/issues/2960)，[1月～2月](https://github.com/ruanyf/weekly/issues/2827)\n- 2022年：[12月](https://github.com/ruanyf/weekly/issues/2771)，[11月](https://github.com/ruanyf/weekly/issues/2715)，[10月](https://github.com/ruanyf/weekly/issues/2666)，[9月](https://github.com/ruanyf/weekly/issues/2599)，[8月](https://github.com/ruanyf/weekly/issues/2542)，[7月](https://github.com/ruanyf/weekly/issues/2483)，[6月](https://github.com/ruanyf/weekly/issues/2426)，[5月](https://github.com/ruanyf/weekly/issues/2356)，[4月](https://github.com/ruanyf/weekly/issues/2309)，[3月](https://github.com/ruanyf/weekly/issues/2234)，[2月](https://github.com/ruanyf/weekly/issues/2188)，[1月](https://github.com/ruanyf/weekly/issues/2139)\n- 2021年：[12月](https://github.com/ruanyf/weekly/issues/2092)，[11月](https://github.com/ruanyf/weekly/issues/2032)，[10月](https://github.com/ruanyf/weekly/issues/1980)，[9月](https://github.com/ruanyf/weekly/issues/1913)，[8月](https://github.com/ruanyf/weekly/issues/1870)，[7月](https://github.com/ruanyf/weekly/issues/1826)，[6月](https://github.com/ruanyf/weekly/issues/1784)，[5月](https://github.com/ruanyf/weekly/issues/1747)，[4月](https://github.com/ruanyf/weekly/issues/1709)，[3月](https://github.com/ruanyf/weekly/issues/1652)，[2月](https://github.com/ruanyf/weekly/issues/1629)，[1月](https://github.com/ruanyf/weekly/issues/1580)\n- 2020年：[12月](https://github.com/ruanyf/weekly/issues/1520)，[11月](https://github.com/ruanyf/weekly/issues/1473)，[9月-10月](https://github.com/ruanyf/weekly/issues/1392)，[7月-8月](https://github.com/ruanyf/weekly/issues/1315)，[5月-6月](https://github.com/ruanyf/weekly/issues/1206)，[4月](https://github.com/ruanyf/weekly/issues/1148)，[3月](https://github.com/ruanyf/weekly/issues/1106)， [1月-2月](https://github.com/ruanyf/weekly/issues/983)\n- 2019年：[12月](https://github.com/ruanyf/weekly/issues/983)，[9月-11月](https://github.com/ruanyf/weekly/issues/798)，[8月](https://github.com/ruanyf/weekly/issues/692)",
    "created_at": "2025-07-30T13:34:25Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7408"
  },
  {
    "id": 7407,
    "title": "【开源自荐】WebSocket DevTools - 专业WS调试插件，提供监控、拦截、模拟等核心功能，目前暂无代餐",
    "content": "<div align=\"center\">\n\n<img width=\"80%\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fb2c5bbe-65c7-4316-976f-2e37f9857025\" />\n\n</div>\n\n## 一、快速介绍\n`WebSocket DevTools` 是用于 WebSocket 调试的 Chrome 插件，提供监控、拦截、模拟、收藏等核心功能。功能强大，操作界面友好\n\n## 二、核心功能\n- 🔍 实时监控 - 实时跟踪WebSocket连接和消息更新\n- 🔄 后台监控 - 即使关闭DevTools面板也能持续监控连接\n- 🎮 消息模拟 - 双向发送自定义消息 (客户端 ↔ 服务器)\n- 🚧 流量控制 - 拦截消息并模拟网络问题进行测试\n- 💾 收藏系统 - 保存和组织常用消息\n- 🌍 多语言支持 - 完整的英文和中文支持\n- 🎨 DevTools集成 - 原生Chrome DevTools面板体验\n- 🖼️ Iframe支持 - 完整的iframe嵌入式连接WebSocket代理支持\n\n## 三、快速演示\n\n快速演示其中一条最佳实践，监听并代理掉页面建立的WS连接，在连接收到一条嵌套的JSON消息后（JSON里面某个值是 String，但是可以被解析为 JSON）将其嵌套解析，在`模拟控制台`中修改其中某个值，比如 `USA` -> `CHINA` 然后在模拟接收。这就像 Proxyman 之类的代理调试软件一样调试 WebSocket，而这个拦截 + 模拟的能力，目前暂时市面上没有。\n\n- 完整版 Demo：[Watch the demo on YouTube](https://www.youtube.com/watch?v=L64x__1xORQ)\n- 文字版介绍：[掘金地址](https://juejin.cn/post/7532332561072144427)\n\n<div align=\"center\">\n\n<img width=\"77%\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/02b57414-a4eb-48e1-9a2b-aef0cceaa754\" />\n\n</div>\n\n\n\n\n## 四、官网与下载\n\n*   官网地址：[websocket-devtools.com](https://websocket-devtools.com)\n*   插件地址：[Chrome 商店](https://chromewebstore.google.com/detail/websocket-devtools/fmnaobbfmjaaaebelkacpmmmpaaefbod)\n*   源码地址：[GitHub](https://github.com/law-chain-hot/websocket-devtools)\n\n（支持中文/英文，可手动切换语言）\n\n\n谢谢峰哥，希望能分享给大家🙏\n\n<div align=\"center\">\n\n<img width=\"80%\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e5c8b15f-492d-48e1-befd-6393c3d2caa1\" />\n\n</div>",
    "created_at": "2025-07-30T12:56:34Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7407"
  },
  {
    "id": 7406,
    "title": "【工具自荐】Graphviz 在线预览，转换格式",
    "content": "[Graphviz Online](https://graphvizonline.net)\n\n主要功能：在线 Graphviz 预览和编辑器。将 DOT 语言转换为 SVG、PNG、JSON 和其他格式。免费的图形可视化工具，支持实时编辑。\n\n场景：可以使用 Kimi/Qwen 等，根据需求把流程图等，先生成graphviz 的 dot 语言描述的图，然后把代码拷贝到 [https://graphvizonline.net](https://graphvizonline.net) 就可以渲染，转换为 png 等。",
    "created_at": "2025-07-30T12:46:40Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7406"
  },
  {
    "id": 7405,
    "title": "【开源自荐】GeminiCLI 转 API服务，Kiro 转 API 服务，免费使用Gemini和Claude大模型，支持Docker部署",
    "content": "## 项目地址\n\n[AIClient-2-API](https://github.com/justlovemaki/AIClient-2-API)\n\n## 项目简介\n一个将 Google **Gemini CLI** 和 **Kiro** 客户端 封装为本地 API 的工具，并提供 OpenAI 兼容接口。\n\n## 核心功能\n1.解决了 Gemini 官方免费 API **额度紧张**的问题。通过本项目，您可以使用 Google的**账号授权**，享受更高的每日请求限额。\n2.逆向了 Kiro 客户端，兼容social和aws登陆方式，可以通过API的形式使用Kiro提供的**免费Claude4**大模型。\n3.提供了与 OpenAI API **完全兼容**的接口，让您现有的工具链和客户端（如 LobeChat, NextChat 等）可以**零成本**接入 Gemini2.5 和 Claude。\n4.通过可配置的日志功能，捕获并记录所有请求的**提示词**，便于审计、调试和构建私有数据集。\n5.支持MCP和**多模态**输入，释放模型全部能力。还可通过**Claude Code**使用Kiro提供的Claude，免费享受付费的体验。\n\n## 命令行截图\n\n<img width=\"1223\" height=\"669\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/56b20c0c-b014-4424-8abe-197d756bd565\" />\n\n## GeminiCLI官方对接口限制的说明\n\n<img width=\"913\" height=\"827\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3aab2b96-9ea0-4d7c-b5ec-853b7f7713f2\" />\n\n## 对接Claude Code的使用示例\n\n<img width=\"924\" height=\"1143\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fa2b89a0-11bf-4984-a453-658fee40ee9f\" />",
    "created_at": "2025-07-30T12:30:47Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7405"
  },
  {
    "id": 7404,
    "title": "【网站自荐】帮助你更方便的使用 AI 进行文本纠错/润色 | TextWell",
    "content": "网站地址：https://www.text-well.com\n\n设计 Text Well 的初衷在与解决 AI 文本处理中的过度修改问题。通过列表化展示修改建议，用户可以选择性采纳，避免 AI 全自动修改带来的语气变化和过度优化问题。让大家更轻松的使用 AI 进行文本优化。Text Well 强调用户的主动参与和决策权。相比 AI 工具的全自动修改，Text Well 让用户保持对文本的完全控制，可以逐项审核每个建议，避免过度修改或误改，强调辅助和增强用户控制。\n\n<img width=\"1920\" height=\"1920\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a2709c9c-ac18-4305-8d99-c80752972ba8\" />\n\n这个工具的设计和交互是我花了很多心思打磨的，我为基础的纠错功能增加了便捷的快捷键操作，文档解析文字，修改文本后的 diff 检查等，希望能给大家带来更好的 AI 文本优化体验。希望能得到阮一峰老师的推荐~\n\n<img width=\"1920\" height=\"1920\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f96cff19-82e4-47dd-a47d-a6a8da890136\" />",
    "created_at": "2025-07-30T12:14:38Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7404"
  },
  {
    "id": 7403,
    "title": "【开源自荐】用AI分析仓库的issue，并支持将issue保存到本地",
    "content": "这个项目的想法来源于之前看的一期文章：[科技爱好者周刊（第 351 期）：GitHub Issues（几乎）是最好的笔记应用](https://github.com/ruanyf/weekly/blob/master/docs/issue-351.md)\n\n其实在这之前我也常会把issue作为笔记使用，而有时候想把自己做的笔记下载到本地以markdown形式保存的时候却比较麻烦，于是我开发了**一个用Go语言编写的GitHub Issue导出工具，可以将指定GitHub仓库的所有Issue以Markdown格式保存到本地，并支持AI分析总结功能。**\n\n#### 开源仓库地址\n\n\nhttps://github.com/ibarryyan/issue2file\n\n\n#### 功能特性\n\n- 支持从当前Git仓库自动获取GitHub仓库信息\n- 支持直接指定GitHub仓库地址\n- 将所有Issue（包括已关闭的）导出为Markdown文件\n- 包含Issue的完整信息：标题、状态、创建者、时间、标签、指派人等\n- 支持GitHub API认证，避免API限制\n- 支持使用AI生成Issues分析总结报告\n\n目前只支持使用DeepSeek将issue进行分析，并生成总结报告，后续会考虑进行扩展。\n\n### 欢迎大家star，或者提出建议！👋👋👋",
    "created_at": "2025-07-30T11:21:30Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7403"
  },
  {
    "id": 7402,
    "title": "【工具自荐】pinpointanswer 用GPT-4o来自动解答linkein 的puzzle游戏 pinpoint",
    "content": "\n\n# 工具名称：\n\n用GPT-4o来自动解答linkein 的puzzle游戏 pinpoint（最新发布）\n\n# 网址链接：\nhttps://pinpointanswer.online/\n\n\n# 工具简介：\n\n通过playwright来获取网页的内容，然后把这个cube的单词发给AI，用AI来解答， 然后输入对应的AI 回答内容。\n\n\n工具页面截图：\n\n<img width=\"1827\" height=\"798\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0cabb163-22f4-4063-981c-2fe304f9b19d\" />",
    "created_at": "2025-07-30T09:31:40Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7402"
  },
  {
    "id": 7401,
    "title": "【工具自荐】投简历的神器--岗位申请自动填充工具",
    "content": "我发现给外企投简历好烦呀！\n\n常规 Cover Letter 就不说了，经常还要回答一堆问题：为什么投递我们的工作，对我们公司的文化如何理解，自己最擅长什么，解决的最有挑战性的问题是什么……\n\n一个岗位投完，半天时间过去了。。。\n\n关键是，投出去的简历，大概率石沉大海。投简历的时间都白费了\n\n有这功夫，还不如好好练练英语，准备准备面试题。\n\n于是，一言不合之下搓了一个插件，一键填充工作申请表格！感兴趣的小伙伴欢迎了解一下：\n\nhttps://easynomad.cn/apply/intro",
    "created_at": "2025-07-30T09:19:32Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7401"
  },
  {
    "id": 7400,
    "title": "【网站自荐】- Veo 3 AI 视频生成提示词库",
    "content": "最近 Google 的 AI 视频模型 Veo 出来后，我一直很关注。跟很多人一样，我大部分时间都在 Twitter 上刷各种惊艳的生成视频和寻找优质的 Prompt 。\n\n但信息太分散了，每次都要在时间线里捞来捞去，效率很低。于是就萌生了做一个聚合网站的想法，把那些高质量的 Prompt 集中起来，方便自己，也希望能方便到大家。\n\n这就是 Veo3 Prompt Hub 的由来。\n\n网址： [https://veo3-prompt.com/](https://veo3-prompt.com/)\n\n<img width=\"2940\" height=\"1756\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/644f5475-4ee4-411e-a7e1-643e82c7935d\" />\n\n\n它主要有几个简单的功能：\n\n高质量 Prompt 聚合：我会定期从 Twitter 上搜集和筛选效果惊艳、有启发性的 Veo 视频及其 Prompt 。\n\n分类浏览：我对收集来的 Prompt 做了简单的分类，比如科幻 (Sci-Fi)、自然与动物 (Nature & Animals)、城市景观 (Urban Scenes) 等，方便大家根据兴趣查找灵感。\n\n直观体验：不用跳转，可以直接在网站上观看视频、复制 Prompt ，所见即所得。\n\n我的开发初衷很简单：\n\n节省时间：不用再在大海捞针，一站式获取优质 Prompt ，由一人梳理，造福那些有优质需求的 prompt 玩家。\n\n激发灵感：看看别人是怎么“念咒语”的，为自己的创作提供新思路。\n\n生成提示词工具：根据当前视频抽象出来的 8 个提示词模版，进行组合优化提示词。（主体、背景环境、动作行为、视觉风格、镜头运动、构图布局、氛围情绪、音频描述\n）\n\n<img width=\"2976\" height=\"1722\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4915b0a8-d8bd-44d4-aee2-4abf74133630\" />\n\n希望可以帮到更多 Veo 3 创作者激发灵感！~\n\n感谢！",
    "created_at": "2025-07-30T07:54:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7400"
  },
  {
    "id": 7399,
    "title": "【工具自荐】AI Hairstyle Changer - 一键换发型的AI智能工具",
    "content": "[AI Hairstyle Changer](https://aihairstylechanger.net/)（AI发型变换器）是一款革命性的在线AI工具，让您能够一键改变照片中的发型和发色。无需任何美发经验或复杂操作，只需上传照\n  片并选择想要的造型，即可通过先进的AI技术实现自然逼真的发型转换。从短发到长发，从直发到卷发，让您在几秒内预览全新造型。\n\n![](http://aihairstylechanger.net/cover.png)\n\n  核心功能与优势\n\n  💇 丰富的发型选择\n\n  - 支持50+种流行发型（短发、长发、卷发、直发、编发等）\n  - 30+种发色选项（自然色系到缤纷彩色）\n  - 特殊造型支持（莫霍克、脏辫、空间髻等）\n  - 一键切换，效果立现\n\n  ⚡ 极速AI处理\n\n  - 采用先进的AI深度学习技术\n  - 5-10秒快速生成结果\n  - 实时进度显示，处理状态透明\n  - 智能脸部识别，确保发型自然贴合\n\n  🎨 自然逼真效果\n\n  - 保持原图人物特征和背景环境\n  - 发型转换自然流畅，如同真实造型\n  - 高分辨率输出，细节清晰\n  - AI智能适配脸型，效果更佳\n\n  📱 零门槛使用\n\n  - 无需注册即可免费试用\n  - 支持拖拽上传，操作简单\n  - 兼容手机、平板、电脑全平台\n  - 中英文界面，全球用户可用\n\n  💎 灵活的使用方式\n\n  - 匿名用户：每日10次免费体验\n  - 免费注册用户：额外赠送积分\n  - 专业用户：无限制使用，高清无水印导出\n\n  使用场景\n\n  💈 理发前预览\n\n  在去理发店之前，先用AI试试新发型，避免理发失败的风险\n\n  📸 社交媒体创作\n\n  为Instagram、小红书、抖音等平台制作吸睛的形象照片\n\n  🎭 角色扮演\n\n  Cosplay爱好者的福音，轻松尝试各种角色发型\n\n  💼 职业形象设计\n\n  求职、商务场合，找到最适合的专业发型\n\n  🎬 影视创作参考\n\n  为电影、电视剧角色设计提供发型参考\n\n  👰 婚礼造型规划\n\n  新娘新郎提前预览婚礼发型，做出最佳选择\n\n  效果示例\n\n  发型转换\n\n  - 🌊 直发 → 大波浪卷发\n  - ✂️ 长发 → 时尚短发波波头\n  - 🎀 散发 → 优雅编发造型\n  - 🌟 普通发型 → 个性莫霍克\n  - 💫 单色 → 渐变染发效果\n\n  发色变换\n\n  - 🖤 黑发 → 金发\n  - 🔴 棕发 → 酒红色\n  - 🔵 自然色 → 蓝紫渐变\n  - 🌈 单色 → 彩虹挑染\n\n  技术优势\n\n  - 采用最新的AI图像生成技术\n  - 智能识别面部特征和头部轮廓\n  - 精准保持人物身份特征不变\n  - 支持各种角度、光线和背景\n  - 持续优化算法，效果不断提升\n\n  使用步骤\n\n  1. 上传照片：选择一张清晰的正面照片\n  2. 选择发型：从50+种发型中挑选心仪款式\n  3. 选择发色：可选择喜欢的发色（可选）\n  4. 点击生成：AI即刻为您生成效果图\n  5. 下载保存：满意即可高清下载\n\n  总结\n\n  AI Hairstyle Changer是一款强大而易用的在线工具，让每个人都能轻松尝试各种发型，找到最适合自己的造型。无论是日常换发型参考、特殊场合造型设\n  计，还是纯粹的娱乐探索，都能满足您的需求。告别理发失败的担忧，让AI成为您的私人发型顾问！\n\n  立即体验：https://www.aihairstylechanger.net",
    "created_at": "2025-07-30T06:12:10Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7399"
  },
  {
    "id": 7398,
    "title": "【开源自荐】  Git 周报生成脚本",
    "content": "# weekly-git-summary\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/yinzhenyu-su/weekly-git-summary/main/scripts/dist/banner.svg\" alt=\"weekly-git-summary Banner\" width=\"100%\">\n</div>\n\n[![npm version](https://img.shields.io/npm/v/weekly-git-summary.svg)](https://www.npmjs.com/package/weekly-git-summary)\n[![Node version](https://img.shields.io/node/v/weekly-git-summary.svg)](https://nodejs.org/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n一个跨平台的 CLI 工具，用于生成 Git 提交记录的周报汇总。支持多种输出格式（文本、JSON、Markdown），自动扫描项目目录并提取指定时间范围内的提交历史。\n\n## 🚀 特性\n\n- **跨平台支持** - 自动检测系统环境，Windows 使用 Node.js，macOS/Linux 使用 Bash 或 Node.js\n- **多种输出格式** - 支持彩色终端输出、JSON 格式、Markdown 格式\n- **智能仓库扫描** - 自动扫描指定目录下的 Git 仓库（最大深度 2 层）\n- **灵活的时间范围** - 支持自定义开始和结束日期\n- **作者过滤** - 可以按特定作者筛选提交记录\n- **可视化展示** - 包含 Web 可视化界面，支持图表展示\n- **零配置使用** - 开箱即用，无需复杂配置\n\n## 📦 安装\n\n### 全局安装\n\n```bash\nnpm install -g weekly-git-summary\n```\n\n### 使用 npx（推荐）\n\n```bash\nnpx weekly-git-summary\n```\n\n## 🎯 使用方法\n\n### 基本用法\n\n```bash\n# 生成当前目录的本周提交汇总\nweekly-git-summary\n\n# 或使用 npx\nnpx weekly-git-summary\n```\n\n### 常用选项\n\n```bash\n# 指定目录和时间范围\nweekly-git-summary --dir ~/projects --since 2023-01-01 --until 2023-01-31\n\n# 过滤特定作者的提交\nweekly-git-summary --author \"张三\" --since 2023-01-01\n\n# 输出 JSON 格式\nweekly-git-summary --json\n\n# 输出 Markdown 格式\nweekly-git-summary --md\n\n# 显示帮助信息\nweekly-git-summary --help\n```\n\n## 📋 命令行参数\n\n| 参数       | 简写 | 描述                  | 默认值   |\n| ---------- | ---- | --------------------- | -------- |\n| `--dir`    | `-d` | 指定要扫描的目录      | 当前目录 |\n| `--since`  | `-s` | 开始日期 (YYYY-MM-DD) | 本周一   |\n| `--until`  | `-u` | 结束日期 (YYYY-MM-DD) | 今天     |\n| `--author` | `-a` | 按作者过滤提交        | 所有作者 |\n| `--json`   | `-j` | 以 JSON 格式输出      | false    |\n| `--md`     | `-m` | 以 Markdown 格式输出  | false    |\n| `--html`   |      | 以 HTML 格式输出      | false    |\n| `--help`   | `-h` | 显示帮助信息          | -        |\n\n## 📊 输出格式\n\n### 1. 彩色终端输出（默认）\n\n```\n工作内容Git提交记录汇总\n\n统计时间范围: 2023-06-26 到 2023-07-02\n搜索目录: .\n\n📦 my-project (github.com/user/my-project)\n\n📅 2023-07-02\n  • feat: 添加用户认证功能 (作者: 张三, hash: abc123)\n  • fix: 修复登录页面样式问题 (作者: 李四, hash: def456)\n\n📅 2023-07-01\n  • docs: 更新 API 文档 (作者: 王五, hash: ghi789)\n```\n\n### 2. JSON 格式\n\n```json\n{\n  \"timeRange\": {\n    \"since\": \"2023-06-26\",\n    \"until\": \"2023-07-02\"\n  },\n  \"searchDir\": \".\",\n  \"repositories\": [\n    {\n      \"name\": \"my-project\",\n      \"url\": \"github.com/user/my-project\",\n      \"commits\": [\n        {\n          \"date\": \"2023-07-02\",\n          \"commits\": [\n            {\n              \"message\": \"feat: 添加用户认证功能\",\n              \"author\": \"张三\",\n              \"hash\": \"abc123\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n### 3. Markdown 格式\n\n```markdown\n# 工作内容 Git 提交记录汇总\n\n- **统计时间范围**: 2023-06-26 到 2023-07-02\n- **搜索目录**: .\n\n## my-project\n\n### 2023-07-02\n\n- feat: 添加用户认证功能 (作者: 张三, hash: abc123)\n- fix: 修复登录页面样式问题 (作者: 李四, hash: def456)\n\n### 2023-07-01\n\n- docs: 更新 API 文档 (作者: 王五, hash: ghi789)\n```\n\n## 🎨 可视化界面\n\n项目包含一个精美的 Web 可视化界面 (`git-log.html`)，提供：\n\n- 🌓 深色/浅色主题切换\n- 📊 提交类型分布雷达图\n- 📈 提交统计卡片\n- 🕒 交互式时间线\n- 📱 响应式设计\n\n![纯文本格式](https://raw.githubusercontent.com/yinzhenyu-su/weekly-git-summary/main/scripts/dist/weekly-git-summary-1.png)\n![JSON 输出](https://raw.githubusercontent.com/yinzhenyu-su/weekly-git-summary/main/scripts/dist/weekly-git-summary-2.png)\n![Web 可视化界面](https://raw.githubusercontent.com/yinzhenyu-su/weekly-git-summary/main/scripts/dist/weekly-git-summary-3.png)\n\n## 🛠️ 开发\n\n### 环境要求\n\n- Node.js ≥ 22.0.0\n- Bun (用于构建)\n- Git 命令行工具\n\n### 本地开发\n\n```bash\n# 克隆项目\ngit clone <repository-url>\ncd weekly-git-summary\n\n# 安装依赖\nbun install\n\n# 构建项目\nbun run build\n\n# 运行测试\nbun test\n\n# 监视模式测试\nbun test --watch\n\n# 本地链接测试\nnpm link\nweekly-git-summary --help\n```\n\n### 项目结构\n\n```bash\nweekly-git-summary/\n├── scripts/\n│   ├── cli.ts                 # CLI 入口点（TypeScript）\n│   ├── weekly-git-summary.ts  # TypeScript 脚本实现\n│   ├── weekly-git-summary.sh  # Shell 脚本实现\n│   ├── weekly-git-summary.ps1 # PowerShell 脚本实现\n│   ├── git-log.html           # Web 可视化界面模板\n│   └── dist/                  # 示例截图\n├── tests/\n│   ├── cli.test.ts            # CLI 功能测试\n│   ├── build.test.ts          # 构建系统测试\n│   ├── integration.test.ts    # 集成测试\n│   └── windows.test.ts        # Windows 兼容性测试\n├── build/                     # 构建输出目录\n├── build.ts                   # Bun 构建配置\n├── package.json              # 项目配置\n├── tsconfig.json             # TypeScript 配置\n├── CLAUDE.md                 # 项目开发指南\n└── README.md                 # 项目文档\n```\n\n### 架构设计\n\n该项目采用智能的跨平台架构：\n\n1. **TypeScript CLI 包装器** (`scripts/cli.ts`)\n\n   - 检测操作系统类型\n   - 自动选择对应的脚本实现\n   - 透明传递命令行参数\n\n2. **平台特定实现**\n\n   - **Windows**: Node.js 脚本 (跨平台兼容)\n   - **macOS/Linux**: Bash 脚本（已集成 URL 转换功能）或 Node.js 脚本 (回退)\n   - **PowerShell**: 支持 Windows PowerShell 环境\n   - 功能完全一致，参数格式统一\n\n3. **构建系统**\n   - 使用 Bun 进行 TypeScript 编译\n   - 输出 ESM 格式的 Node.js 模块\n   - 自动生成可执行的 CLI 工具\n\n## 🧪 测试\n\n项目包含全面的测试套件：\n\n```bash\n# 运行所有测试\nbun test\n\n# 查看测试覆盖率\nbun test --coverage\n```\n\n### 测试内容\n\n- **CLI 功能测试** - 验证命令行参数处理、输出格式等\n- **构建系统测试** - 验证构建过程和输出文件\n- **跨平台兼容性** - 验证不同系统环境下的行为\n- **错误处理** - 验证异常情况的处理\n\n## 📄 许可证\n\nMIT License - 详见 [LICENSE](LICENSE) 文件\n\n## 🤝 贡献\n\n欢迎提交 Issue 和 Pull Request！\n\n### 贡献指南\n\n1. Fork 项目\n2. 创建功能分支 (`git checkout -b feature/AmazingFeature`)\n3. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\n4. 推送到分支 (`git push origin feature/AmazingFeature`)\n5. 打开 Pull Request\n\n### 开发规范\n\n- 使用 TypeScript 进行类型安全的开发\n- 遵循 ESLint 和 Prettier 规范\n- 为新功能添加相应的测试\n- 更新相关文档\n\n## 🔗 相关链接\n\n- [npm 包地址](https://www.npmjs.com/package/weekly-git-summary)\n- [GitHub 仓库](https://github.com/user/weekly-git-summary)\n- [问题反馈](https://github.com/user/weekly-git-summary/issues)\n\n## 📞 支持\n\n如果您遇到任何问题或有功能建议，请：\n\n1. 查看 [常见问题](docs/FAQ.md)\n2. 搜索已有的 [Issues](https://github.com/user/weekly-git-summary/issues)\n3. 创建新的 Issue 描述您的问题\n\n---\n\n**喜欢这个项目？请给它一个 ⭐️**\n",
    "created_at": "2025-07-30T02:00:57Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7398"
  },
  {
    "id": 7397,
    "title": "【开源自荐】LaTeX速成训练器：让数学公式输入变得简单",
    "content": "# 10天精通LaTeX数学公式：让你告别复制粘贴的智能训练平台\n\n## 你是否遇到过这些痛点？\n\n📝 **写技术博客时**：想插入一个积分公式，却要花10分钟查文档\n📄 **撰写学术论文时**：复制粘贴公式，格式总是不对，反复调试\n🤖 **与AI讨论数学时**：想表达一个复杂公式，只能用文字描述，效率极低\n👨‍🏫 **制作教学课件时**：每个公式都要查语法，制作一页PPT耗时半天\n\n**现实是残酷的**：90%的人都在临时抱佛脚，查文档、复制粘贴，效率低下且错误频出。\n\n## 彻底解决方案\n\n我开发了一个**LaTeX公式速成训练器**，通过科学的记忆算法和实战练习，让你在10天内从零基础到熟练掌握LaTeX数学公式输入。\n\n🌐 **在线体验**：https://pipeak.share4y.cn/\n📦 **开源地址**：https://github.com/prehisle/pipeak\n\n## 核心优势：为什么选择这个平台？\n\n### 🎯 学习效果保证\n- **10天速成路径**：科学设计的10个渐进式课程，从零基础到高级应用\n- **38个实战练习**：覆盖技术写作、学术论文、AI对话等真实场景\n- **SM-2智能复习**：基于遗忘曲线的算法，确保长期记忆\n\n### ⚡ 极致用户体验\n- **所见即所得**：基于KaTeX的毫秒级实时预览\n- **智能容错**：支持多种LaTeX等价写法，降低学习门槛\n- **全设备适配**：手机、平板、电脑无缝切换学习\n- **双语支持**：中英文界面自由切换\n\n### 🛠 技术栈（开发者友好）\n```bash\n# 现代化全栈架构\n后端: Flask + MongoDB + JWT认证\n前端: React + Vite + Tailwind CSS\n渲染: KaTeX数学公式引擎\n部署: Vercel/Docker一键部署\n```\n\n## 完整学习路径：从入门到精通\n\n### 🌱 基础篇（第1-3天）\n- 数学环境与基础语法 → 掌握 `$...$` 和 `$$...$$`\n- 分数与根号 → 熟练使用 `\\frac{}{}` 和 `\\sqrt{}`\n- 希腊字母与常用符号 → 记住 `\\alpha, \\beta, \\sum, \\int`\n\n### 🚀 进阶篇（第4-7天）\n- 函数与三角函数 → 掌握 `\\sin, \\cos, \\log, \\lim`\n- 求和、积分与极限 → 熟练使用上下标和边界\n- 矩阵与向量 → 掌握 `\\begin{matrix}` 环境\n\n### 💎 高级篇（第8-10天）\n- 方程组与不等式 → 复杂公式组合技巧\n- 集合论与逻辑符号 → 数学逻辑表达\n- 数论与特殊运算 → 高级数学符号\n- 分析与拓扑 → 专业数学公式\n\n## 实际应用场景\n\n💡 **技术博客**：从此告别\"用文字描述复杂算法\"的尴尬\n📚 **学术论文**：公式输入速度提升5倍，专注内容创作\n🤖 **AI对话**：与ChatGPT讨论数学时，表达精准专业\n🎓 **教学课件**：快速制作包含复杂公式的教学材料\n\n\n## 开源价值：完整的学习平台解决方案\n\n这不仅是一个LaTeX学习工具，更是一个**完整的在线教育平台架构参考**：\n\n✅ **前后端分离**：现代化的开发模式\n✅ **用户系统**：注册、登录、权限管理完整方案\n✅ **实时同步**：学习进度云端保存，多设备同步\n✅ **数据分析**：学习轨迹追踪，效果量化分析\n✅ **国际化**：多语言支持，面向全球用户\n\n---\n\n## 🎯 现在就开始你的LaTeX速成之旅！\n\n**10天后，你将能够：**\n- ⚡ 3秒内输入复杂的积分公式\n- 🎯 不查文档完成矩阵和方程组\n- 💡 在技术博客中自如使用数学表达\n- 🚀 与AI进行高效的数学讨论\n\n**不要再让LaTeX成为你表达数学思想的障碍！**\n\n🔗 **立即体验**：https://pipeak.share4y.cn/\n⭐ **GitHub支持**：https://github.com/prehisle/pipeak\n\n*让LaTeX学习变得简单高效，从今天开始！*\n",
    "created_at": "2025-07-30T01:55:53Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7397"
  },
  {
    "id": 7396,
    "title": "【开源自荐】0-240hz屏幕刷新率体验工具",
    "content": "一个基于 Vue 3 的交互式刷新率体验应用，让你直观感受不同刷新率和网络延迟对操作流畅度的影响。\n\n> 体验网址： https://fps.agitao.me/\n\n> 项目地址：https://github.com/MaskerPRC/refresh-rate-expericence\n\n这个工具模拟了一个桌面环境，包含可拖拽的虚拟窗口。你可以调节刷新率（5Hz-240Hz）和输入延迟（0ms-1000ms），然后拖动窗口来感受差异。\n\n**主要功能：**\n- 🎮 刷新率控制：支持 5Hz 到 240Hz 全范围调节\n- ⏱️ 延迟模拟：模拟 0ms 到 1000ms 的输入响应延迟  \n- 🪟 交互体验：可拖拽移动和调整窗口大小\n- 📊 实时监控：显示当前 FPS 和性能指标\n\n特别适合：\n- 女朋友非要说120hz跟60hz区别不大的情况\n- 游戏玩家了解高刷新率显示器的价值\n- 前端开发者理解性能优化的重要性\n- 普通用户体验不同设备的操作差异\n\n\n<img width=\"2910\" height=\"1520\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bf35a7e6-e4da-4f82-910c-a4427a5bd15b\" />\n\n\n技术栈：Vue 3 + Vite，代码简洁易懂，可以作为 Web 性能优化的学习案例。\n",
    "created_at": "2025-07-29T20:13:03Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7396"
  },
  {
    "id": 7395,
    "title": "【开源自荐】✨用AI找AI商机：一个能分析100+行业、自动生成创业方案的开源工具",
    "content": "一个跨行业创业点子生成器：从视觉到文本，AI帮你发现商业机会\n开源地址：  https://github.com/MaskerPRC/text-vision-plan\n\n推荐一个有趣的开源项目：基于AI大模型的跨行业创业点子生成器。\n这个项目有几个亮点：\n🎯 覆盖面广泛：支持100+个行业领域（从人工智能到传统制造业），每个行业都有详细的数据类型配置\n🧠 双维度分析：同时从视觉和文本两个维度生成创业方案，利用AI在图像生成和文本处理方面的能力差异来寻找商机\n⚡ 智能化流程：自动扫描行业数据 → AI生成创业点子 → 智能评估筛选 → 方案合并 → 可视化输出，全流程自动化\n💡 实用性强：重点分析传统人工成本与AI成本的差异，提供具体的启动资金、人力需求、变现周期等可行性数据\n🎨 可视化输出：不仅生成文本方案，还能自动转换为精美的图片格式，便于展示和分享\n技术上使用Node.js + R1模型，支持断点续传和缓存恢复，代码结构清晰，易于扩展。我觉得这种\"用AI找AI商机\"的思路挺有意思的。\n\n<img width=\"542\" height=\"1146\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/785ec6bd-bb06-4b93-b2fd-6ed9a21db8be\" />\n\n<img width=\"554\" height=\"1103\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/23d8423b-eeba-44cb-b380-811bb24a7eda\" />\n\n<img width=\"775\" height=\"1093\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/345f538f-f76e-4b3f-8e41-003836548ecb\" />\n\n<img width=\"845\" height=\"1108\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/092df02d-8b51-4e84-88fc-dd251f62347a\" />\n",
    "created_at": "2025-07-29T18:23:45Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7395"
  },
  {
    "id": 7394,
    "title": "【工具自荐】一个提升跨语言邮件沟通效率的工具 - Smart Reply",
    "content": "- 工具名称：Smart Reply\n\n- 工具简介\n\t老外喜欢用邮件沟通，在跟老外邮件沟通的时候，过程比较痛苦：**复制邮件内容 -> 翻译软件翻译 -> 理解邮件内容 -> 用中文写回复邮件 -> 用翻译软件翻译 -> 复制，发送邮件**。\n\n    整个过程比较繁琐，比较低效，一次一两封还行，多了就比较难受了，这是我的痛点，所以开发了这个效率工具，简化流程：**复制邮件内容 -> 翻译，对照理解邮件内容 -> 选择回复风格，自定义邮件要求（可选） -> 生成双语回复邮件 -> 复制，发送邮件**。\n\n    有了生成的双语邮件内容，对照着看，就方便很多了，如果邮件内容没有什么问题，那么直接复制发送就可以了。\n\n- 工具地址：https://smartreply.cc/\n\n<img width=\"1248\" height=\"1423\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b4afb927-5f74-4963-bb57-a8c32446578c\" />",
    "created_at": "2025-07-29T11:22:58Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7394"
  },
  {
    "id": 7393,
    "title": "【网站推荐】Magdir电感器件厂家汇总",
    "content": "磁性元件最佳智能目录网站，全球电感厂商汇总，电子硬件工程师首选\n\n磁性元件是现代电子设备中不可或缺的关键组成部分。它们广泛应用于电源、变压器、电感器、滤波器等各种电路中，对设备的性能、效率和可靠性起着至关重要的作用。然而，随着电子技术的飞速发展，磁性元件的种类和规格日益繁多，制造商也层出不穷，使得工程师和采购人员在选择合适的元件时面临着巨大的挑战。传统的元件查找方式，如浏览纸质目录、搜索制造商网站等，效率低下且难以进行精确筛选。\n\n磁性元件选型的未来。它通过整合人工智能、大数据和云计算等先进技术，为用户提供了一个全面、高效、便捷的元件搜索和选择平台。随着 Magdir的不断发展和完善，它将成为磁性元件行业不可或缺的重要工具，推动行业的创新和发展。对于工程师、采购人员和制造商而言，Magdir都是一个值得信赖的合作伙伴。它不仅可以帮助用户节省时间和金钱，还可以提高产品质量和竞争力。\n\n[https://magdir.com](https://magdir.com/)",
    "created_at": "2025-07-29T10:14:29Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7393"
  },
  {
    "id": 7392,
    "title": "【开源自荐】密码管家-管理繁杂的帐号密码",
    "content": "> 项目地址：https://github.com/CatsAndMice/password\n> 插件地址：https://u.tools/plugins/detail/%E5%AF%86%E7%A0%81%E7%AE%A1%E5%AE%B6/?c=eylamc1n2u\n\n## 功能特性\n一个用于帮助用户管理互联网繁杂的帐号密码的utools插件\n\n## 功能介绍\n * 全局搜索与分组筛选\n * 随机密码生成器\n * 本地备份与恢复\n * WebDAV 云备份与恢复\n * 明暗主题切换（亮色/暗色/跟随系统）\n * 数据加密存储（BCrypt + AES-256-CBC）\n * 自动填充帐号密码\n\n## 功能截图\n\n<img width=\"800\" height=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/82ee8264-4fa2-4746-ad9d-f9d4b464d0bb\" />\n\n<img width=\"800\" height=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7eaa597b-d077-4cc6-a8a8-febddd61db12\" />\n\n<img width=\"800\" height=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8a2aa085-c703-4e7f-ace5-97d052989c25\" />\n\n<img width=\"800\" height=\"600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7da4a501-28b1-46c4-aa82-a7450873eef2\" />",
    "created_at": "2025-07-29T08:50:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7392"
  },
  {
    "id": 7391,
    "title": "【开源自荐】raycast 脚本——markdown 自动设置标题序号",
    "content": "项目地址：[markdown-index](https://github.com/gray0128/markdown-index)\n\n# Markdown Index\n\n一个用于为 Markdown 文档自动添加多级标题序号的 Raycast 脚本工具。\n\n## 功能介绍\n\n通过剪贴板操作处理内容：\n- 复制 Markdown 内容 → 触发脚本 → 粘贴结果\n- 兼容性好，适用于所有支持剪贴板的应用\n- 权限要求低，安装简单\n\n## 功能特性\n\n- 🔢 **自动序号生成**：为 Markdown 标题自动添加多级序号（如 1.1.1）\n- 📝 **多级标题支持**：支持 1-6 级标题的层次化编号\n- 🛡️ **代码块保护**：智能识别并跳过代码块中的内容\n- 🔄 **重复运行支持**：可多次运行，自动更新序号\n- ⚡ **快速便捷**：通过 Raycast 快捷键一键处理\n- 🎯 **精确处理**：只处理真正的 Markdown 标题，忽略其他内容\n- 🔇 **静默模式**：后台运行，不显示界面，不干扰工作流程\n\n",
    "created_at": "2025-07-29T07:32:15Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7391"
  },
  {
    "id": 7390,
    "title": "【工具自荐】“国庆旅行路线设计师” MCP server",
    "content": "\n假设我输入的是：\n\n> 10-1到10-5国庆期间，深圳到厦门自驾游，每天游玩一个城市并住宿。请帮我规划酒店安排。\n内容输出到左侧文档。\n\n可以看到，MCP先根据需求，规划途径路线。然后调用 MCP Tool 传入格式化的参数。MCP 服务端会去后端数据库查询匹配的酒店信息，并返回。然后输出，为了方便展示，这里是写入到左侧编辑区的md文件中。\n\n\n\n## MCP的安装\n\n非常简单，在配置文件中输入：\n\n```\n{\n  \"mcpServers\": {\n    \"特惠酒店MCP\": {\n      \"url\": \"https://hotel.gqmg.com/sse/\",\n      \"serverUrl\": \"https://hotel.gqmg.com/sse/\"\n\n    }\n  }\n}\n```\n当你的 AI Agent 识别到意图，就会自动去调用特惠酒店MCP工具。\n\n\n对于不满意的酒店，还可以精准替换。\n\n假设我输入的是：\n\n> 请提升线路1，第二天的酒店品质。\n\n\n![image](https://oray.kainy.cn:38002/https://oray.kainy.cn:38400/_upload/./content/temp/2025/07/md4fggoc.png)\n\n\n接下来，以 cherry studio 为例看看怎么设置 MCP，很简单\n\n先点左下角齿轮，然后“MCP设置”，类型选择“streamableHttp”， URL填写 https://hotel.gqmg.com/mcp/ 即可。\n\n![image](https://oray.kainy.cn:38002/https://oray.kainy.cn:38400/_upload/./content/temp/2025/07/md4flfaa.png)\n\n我用的是免费版 7B 模型，比较吃力，但也可以看到大致效果。\n\n![image](https://oray.kainy.cn:38002/https://oray.kainy.cn:38400/_upload/./content/temp/2025/07/md2uxqen.png)\n\n![image](https://oray.kainy.cn:38002/https://oray.kainy.cn:38400/_upload/./content/temp/2025/07/md2uzjwz.png)\n\n\n## 也支持网页调用\n\n生成旅程： https://hotel.gqmg.com/plan\n浏览旅程： https://hotel.gqmg.com/p/89\n",
    "created_at": "2025-07-29T05:28:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7390"
  },
  {
    "id": 7389,
    "title": "【开源自荐】Office Word MCP Server 开发者轻松快速操作转换Word文档",
    "content": "Spire.Doc MCP Server is a Model Context Protocol (MCP) server that enables you to manipulate Word documents without requiring Microsoft Word. With it, you can [create](https://www.e-iceblue.com/Tutorials/Python/Spire.Doc-for-Python/Program-Guide/Document-Operation/Python-Create-Word-Document.html), [read](https://www.e-iceblue.com/Tutorials/Python/Spire.Doc-for-Python/Program-Guide/Document-Operation/read-word-doc-or-docx-files-in-python.html), and [modify](https://www.e-iceblue.com/Tutorials/Python/Spire.Doc-for-Python/Program-Guide/Document-Operation/Python-Edit-or-Modify-a-Word-Document.html) Word documents directly using your AI agent.\n\nhttps://github.com/eiceblue/spire-doc-mcp-server",
    "created_at": "2025-07-29T03:23:16Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7389"
  },
  {
    "id": 7388,
    "title": "日程小助手",
    "content": "![Image](https://github.com/user-attachments/assets/984a78da-feec-41c7-9a10-b8082cc7a056)\n可以根据文字，图片，文件准备识别出日程，并在手机中创建日程，欢迎试用。\n#小程序://日程小帮手/b8Tz2TQHEI3Dx4i",
    "created_at": "2025-07-29T01:42:51Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7388"
  },
  {
    "id": 7387,
    "title": "【工具自荐】ImageKit 是rust编写的一个强大、快速且灵活的命令行工具，用于批量处理图片",
    "content": "# ImageKit\n\n仓库地址：\nhttps://github.com/hzbd/imagekit\n\n**ImageKit** 是一个强大、快速且灵活的命令行工具，用于批量处理图片。它使用 Rust 编写，通过并行处理来最大化性能，让你能轻松地对整个目录的图片进行尺寸调整、质量控制和添加高度可定制的水印。\n\n\n## 🌟 功能特性\n\n- **批量处理**: 递归地处理指定输入目录下的所有图片 (`.jpg`, `.jpeg`, `.png`, `.gif`, `.bmp`, `.webp`)。\n- **智能缩放**:\n    - 如果只提供宽度，则自动按比例计算高度，保证图片不变形。\n    - 如果只提供高度，则自动按比例计算宽度。\n- **质量控制**: 使用 `-q` 或 `--quality` 参数（1-100）微调输出质量，在文件大小和视觉保真度之间取得平衡。设置为 `100` 可获得最佳质量。\n- **强大的水印功能**:\n    - **多语言支持**: 完美渲染混合文本水印，支持全球主要书写系统，包括拉丁文（用于英语、法语、西班牙语）、西里尔文（用于俄语）、泰文以及中日韩统一表意文字。\n    - **高度可定制**: 在图片的九个标准位置添加文本，并自由设置字体大小。\n    - **自定义颜色**: 通过十六进制色码（如 `RRGGBB` 或 `RRGGBBAA`）精确控制水印颜色和透明度。\n    - **智能缩放**: 如果请求的水印对于图片来说过大，工具会自动缩小水印以确保其完整显示，永不裁切。\n- **⚡ 极速性能**: 利用 [Rayon](https://github.com/rayon-rs/rayon) 库并行处理图片，充分利用多核 CPU 的性能。\n- **跨平台**: 可在 Windows, macOS, 和 Linux 上编译和运行。\n\n![Demo Watermark](https://github.com/hzbd/imagekit/raw/master/example/img-out/markus-winkler.png)\n\n## ⚙️ 安装与构建\n\n你需要先安装 [Rust 和 Cargo](https://www.rust-lang.org/tools/install)。\n\n1.  **克隆仓库**\n    ```bash\n    git clone https://github.com/hzbd/imagekit.git\n    cd imagekit\n    ```\n\n2.  **构建项目**\n    ```bash\n    cargo build --release\n    ```\n\n3.  **找到可执行文件**\n\n    构建完成后，可执行文件位于 `target/release/` 目录下。\n\n## 🚀 使用方法\n\n### 示例\n\n#### 示例 1: 添加包含中英文的水印\n```bash\n./target/release/imagekit \\\n    -i example/img-src \\\n    -o example/img-out \\\n    --watermark-text \"你好, World! - 印记\"\n```\n\n#### 示例 2: 缩放图片并以最高质量保存\n如果你希望调整尺寸但不损失图片质量，请使用 `--quality 100`。\n```bash\n./target/release/imagekit -i example/img-src -o example/img-out --width 1024 --quality 100\n```\n\n#### 示例 3: 添加一个不透明的黑色水印（使用默认质量 85）\n```bash\n./target/release/imagekit \\\n    -i example/img-src \\\n    -o example/img-out \\\n    --watermark-text \"@机密文件\" \\\n    --watermark-color 000000FF\n```\n\n## 📋 命令行选项\n\n| 选项                 | 标志                 | 描述                                                                    | 必需/可选 | 默认值   |\n| -------------------- | -------------------- | ----------------------------------------------------------------------- | --------- | -------- |\n| 输入目录             | `-i`, `--input-dir`  | 包含需要处理的图片的源目录。                                            | **必需**  | -        |\n| 输出目录             | `-o`, `--output-dir` | 用于存放处理后图片的目录。                                              | **必需**  | -        |\n| 宽度                 | `--width`            | （可选）调整图片的宽度。若不提供高度，则按比例缩放。                    | 可选      | 原始宽度 |\n| 高度                 | `--height`           | （可选）调整图片的高度。若不提供宽度，则按比例缩放。                    | 可选      | 原始高度 |\n| 水印文字             | `--watermark-text`   | （可选）要添加的水印文字内容。                                          | 可选      | -        |\n| 水印位置             | `--watermark-position` | （可选）水印在图片上的位置。                                            | 可选      | `se`     |\n| 字体大小             | `--font-size`        | （可选）水印文字的大小（单位：像素）。                                  | 可选      | `24`     |\n| 水印颜色             | `--watermark-color`  | （可选）水印颜色，格式为 RRGGBB 或 RRGGBBAA。                           | 可选      | `FFFFFF80` (半透明白) |\n| 质量                 | `-q`, `--quality`    | （可选）设置输出质量(1-100)。对于JPEG，影响压缩率；对于PNG，影响压缩速度。 | 可选      | `85`     |\n| 输出格式             | `--output-format`    | （可选）指定输出图片的格式。                                              | 可选      | 原始格式 |\n\n#### `watermark-position` 的可用值:\n\n-   `nw`: 左上, `north`: 中上, `ne`: 右上\n-   `west`: 中左, `center`: 居中, `east`: 中右\n-   `sw`: 左下, `south`: 中下, `se`: 右下\n\n## 演示\n\n```\n./target/release/imagekit -i example/img-src \\\n    -o example/img-out/ \\\n    --width 512 \\\n    --watermark-text \"©良辰 | ちよ | 서연 | Stella | Éléonore | แก้ว\" \\\n    --watermark-position se \\\n    --font-size 18 \\\n    --watermark-color ffffffFF \\\n    --output-format png\n```\n\n## 🛠️ 开发与测试\n\n如果你想为此项目贡献代码，可以按以下步骤操作：\n\n1.  克隆仓库并准备字体。\n2.  做出你的修改。\n3.  运行测试以确保所有功能正常：\n    ```bash\n    cargo test\n    ```",
    "created_at": "2025-07-29T01:39:56Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7387"
  },
  {
    "id": 7386,
    "title": "报错",
    "content": "Processing workspace: cursor_opus4\nExport failed: TypeError: Cannot read properties of undefined (reading 'map')\n    at exportComposer (/Users/xander/.npm/_npx/9a72ae740a5e6011/node_modules/cursor-export/exportFiles/fileExporter.js:115:36)\n    at exportWorkspace (/Users/xander/.npm/_npx/9a72ae740a5e6011/node_modules/cursor-export/exportFiles/fileExporter.js:60:13)\n    at async exportAllWorkspaces (/Users/xander/.npm/_npx/9a72ae740a5e6011/node_modules/cursor-export/exportFiles/fileExporter.js:152:27)\n    at async main (/Users/xander/.npm/_npx/9a72ae740a5e6011/node_modules/cursor-export/cli.js:31:5)",
    "created_at": "2025-07-29T00:47:00Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7386"
  },
  {
    "id": 7385,
    "title": "【网站自荐】免费AI背景抠图网站，解放你的创作力",
    "content": "**手动抠图太慢太烦？我们都懂。**\n\nhttps://greenscreenremover.online/\n\n这款免费的AI工具，能为你自动处理掉绝纯色背景，让你把时间花在更重要的事情上, 能帮你节省大量精力。\n\n**核心优势：**\n- ✅ 100% 免费：承诺不变。高清下载，无水印，无限使用。\n- ✅ AI 高效处理：它能快速识别并移除背景，为你提供一个绝佳的起点，省去你大部分的重复劳动。\n- ✅ 你来掌控最终效果：遇到AI处理不好的头发丝或复杂边缘？这正是【橡皮擦】工具的用武之地！你可以轻松擦除多余部分或恢复细节，让作品达到你的专业标准。你才是最终效果的把控者。\n- ✅ 兼容任何纯色：无论是绿幕、蓝幕，还是产品拍摄用的纯色背景，它都能处理。\n\n**简单工作流：**\n\n1. 上传图片\n2. AI自动处理背景\n3. 下载你的完美作品\n\n\n别再浪费时间了！\n让AI成为你的高效助手，立即免费试用，体验这种全新的、更高效的工作方式。\n\n\n<img width=\"1001\" height=\"731\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/79e6addc-ba5a-4900-ad86-7523e01ca99f\" />\n\n**Example:**\n\n<img width=\"704\" height=\"248\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0da613a5-e275-4a2a-8048-a02621a0eb72\" />",
    "created_at": "2025-07-28T14:29:00Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7385"
  },
  {
    "id": 7384,
    "title": "【网站自荐】完全免费的文档翻译站点，操作便捷，高度还原格式，支持PDF/PPTX/EPUB/DOCX等多种格式",
    "content": "### **Belin Doc - 一个真正意义完全免费、无限制、无需注册登录的文档翻译工具**\n\n大家好，很高兴在这里向各位介绍我的新产品 **Belin Doc**。这是一款完全免费、翻译质量优秀、无需注册登录的AI文档翻译器。\n\n**网址：https://belindoc.com**\n\n**先看看效果吧！**\n以下是几份PDF格式文件，可以看到，不仅翻译精准，连图表和排版都几乎完美保留了。\n\n<img width=\"1954\" height=\"908\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/282674d0-04ab-41b5-b394-bde3352060ab\" />\n\n<img width=\"1991\" height=\"878\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f1fa450e-b32d-4952-b8da-ac68ad9c839e\" />\n\n<img width=\"1959\" height=\"903\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6c055c42-86ca-4d6a-a2be-aa7b70dd69b5\" />\n\n**为什么开发 BelinDoc？**\n目前市面上的AI文档翻译工具，要么按页/按字数收费，价格不菲；要么免费版有严格的文件大小或其它限制；还有些工具支持翻译的文档格式比较有限。但对大多数人来说，文档翻译的行为其实是比较低频的需求\n\n因此，我们希望打造一个大家都能随时用上**零门槛、高质量、重隐私**的AI文档翻译工具，让每个人都能轻松跨越语言障碍。\n\n**为什么取名叫 Belin Doc？**\n最重要的原因是“谐音梗”，取天涯若“比邻”的意思\n\n**免费了，能持久么？**\n\n说实话，我还有另外一个付费的文档翻译产品，Belin Doc的免费策略很有“卷”自己的感觉。\n目前文档翻译过程中的主要成本来自于高配CPU服务器的费用和翻译所需大模型消耗的token费用。如上文所说，我们观察到大家有绝大多数对文档翻译的需求其实比较低频，如果在付出目前来说相对可控成本的前提下，为这一类的朋友提供一个有效的应急渠道，何乐而不为。\n\n坦诚的讲，等用户多了，我们可能也还是会考虑推出一些文档辅助或其他增值功能来盈利。也欢迎大家给我们建议！\n\n**核心特点**\n\n* **完全免费**：无需付费，文件大小限制100M\n* **支持各种类型PDF**：无需付费，文件大小限制100M\n* **零门槛**：无需注册登录，打开网页，上传文件即可使用。\n* **高质量翻译**：基于最新的大语言模型，翻译质量有保障。\n* **隐私保护**：我们不存储你的任何文档。所有上传的文件和翻译结果都会在24小时内从服务器彻底删除！\n* **支持多种格式**：完美支持 PDF, DOCX, PPTX, TXT,EPUB 等常用文档格式。\n* **保留原文格式**：自研的排版引擎，能最大程度保留原文的标题、列表、字体、图片位置等格式。\n* **多语言覆盖**：支持中文、英语、日语、西班牙语等超过 50 种主流语言的互译。\n\n**技术亮点**\nBelin Doc采用了 GPT和Gemini 作为主要翻译核心。我们没有简单地调用API，而是自研了一套文档解析与格式还原引擎，它能先精准地提取文本，翻译后再智能地将内容嵌回原有的版式中，这才是“保留格式”的关键，将方便贯彻到底\n\n**翻译限制**\n上文有提到Belin Doc采用了完全免费和超低使用门槛的策略，为了保障目前部署的机器以及控制模型的token输出限制，我们暂时限制了大家每日免费试用额度为200-500页，同时我们对允许同时翻译的文件数做了限制，因此会导致在使用高峰期时可能会有排队的现象。\n\n以上限制均出于在资源有限的情况下，保障更多人能使用到免费服务的初衷，如对大家造成了不便，希望谅解。如果大家有好的优化建议也欢迎反馈给我们，如果BelinDoc确实对您起到了一些微小的帮助，也希望你收藏或者分享给更多有需要的朋友\n\n**应用场景**\n\n* **学生和学者**：快速翻译外语论文、学术文献和参考资料。\n* **职场人士**：轻松处理跨国报告、产品手册、商业合同和邮件。\n* **法律/金融/医疗专业人士**：高效翻译专业领域的文档，同时保障信息安全。\n* **内容创作者**：翻译视频字幕、博客文章，拓展全球读者。\n* **普通用户**：阅读外语电子书、新闻、使用说明书等。\n\n**立即体验：https://belindoc.com**\n\n感谢大家的支持！有任何使用问题或功能建议，欢迎在这里和我们交流！\n",
    "created_at": "2025-07-28T13:42:39Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7384"
  },
  {
    "id": 7383,
    "title": "这个功能是否能满足呢？",
    "content": "一个从第1集到第101集的课程，导入后，想按顺序听课，你会发现，顺序是完全错误的，会是这们的：1,10,100,101,11，12,13...19，2,20,21\n\n类似这样按数字编码的文件名，现在排序混乱，建议增加一种新的排序方法，让功能更健壮。",
    "created_at": "2025-07-28T12:28:52Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7383"
  },
  {
    "id": 7382,
    "title": "MUSIX 一款使用 Rust 构建的极简终端 MP3 音乐播放器",
    "content": "# MUSIX\n\n  一款使用 Rust 构建的极简终端 MP3 音乐播放器。\n\n\n## 功能特性\n\n  - 精美终端界面：简洁的终端界面，采用赛博朋克绿色主题\n  - 高品质播放：支持 MP3 音频格式，提供水晶般清澈的音质\n  - 可视化进度：实时进度条显示，带有时间信息\n  - 智能控制：直观的键盘控制，支持弹出帮助（按 X 键）\n  - 流畅跳转：即时音频跳转，播放无中断\n  - 播放模式：支持顺序播放和随机播放模式\n  - 键盘驱动：闪电般快速的纯键盘操作界面\n\n[![asciicast](https://asciinema.org/a/730123.svg)](https://asciinema.org/a/730123)\n\n<img width=\"562\" height=\"575\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/78617805-5103-455c-84c2-b057729e686e\" />\n\nhttps://github.com/coolcode/musix\n\n",
    "created_at": "2025-07-28T12:01:28Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7382"
  },
  {
    "id": 7381,
    "title": "【工具自荐】AI表情变换器 - 一键改变照片表情的AI创作工具",
    "content": "AI表情变换器（[Facial Expression Changer](https://facialexpressionchanger.com/)）是一个革命性的在线AI工具，让您能够一键改变照片中的面部表情。无需任何设计基础或复杂操作，只需上传照片并选择想要的表情，即可通过先进的AI技术实现自然逼真的表情转换。从微笑到惊讶，从严肃到搞笑，让您的照片瞬间焕发新生。\n\n![](https://www.facialexpressionchanger.com/cover.png)\n\n  核心功能与优势\n\n  🎭 丰富的表情选择\n  - 支持10+种常见表情转换（微笑、大笑、惊讶、严肃、生气等）\n  - 特殊效果变换（夸张表情、动漫风格等）\n  - 一键切换，效果立现\n\n  ⚡ 极速AI处理\n  - 采用先进的AI深度学习技术\n  - 5-10秒快速生成结果\n  - 实时进度显示，处理状态透明\n\n  🎨 自然逼真效果\n  - 保持原图人物特征和背景环境\n  - 表情转换自然流畅\n  - 高分辨率输出，细节清晰\n\n  📱 零门槛使用\n  - 无需注册即可免费试用\n  - 支持拖拽上传，操作简单\n  - 兼容手机、平板、电脑全平台\n\n  💎 灵活的使用方式\n  - 匿名用户：6次免费体验\n  - 免费注册用户：10次免费额度\n  - 专业用户：无限制使用，无水印导出\n\n  使用场景\n\n  📸 社交媒体创作：为朋友圈、微博、小红书等平台制作有趣的表情包\n  🎬 视频制作素材：为视频创作提供丰富的表情素材\n  👨‍👩‍👧‍👦 家庭娱乐：和家人朋友一起玩转表情，制造欢乐时光\n  💼 商业用途：广告创意、产品展示、品牌营销\n  🎓 教育培训：心理学研究、表情识别训练、教学演示\n  🎪 创意设计：角色设计、漫画创作、艺术创作\n\n  效果示例\n\n  😊 严肃证件照 → 灿烂微笑\n  😮 平静表情 → 惊讶表情\n  😂 微笑 → 开怀大笑\n  😎 普通表情 → 酷炫表情\n  🤔 微笑 → 思考表情\n\n  技术优势\n\n  - 智能识别面部特征点\n  - 保持人物身份特征不变\n  - 支持各种角度和光线条件\n\n  总结\n\n  AI表情变换器是一款强大而易用的在线工具，让每个人都能轻松改变照片表情，创造无限可能。无论是制作搞笑表情包、优化社交媒体照片，还是进行创意\n  设计，都能满足您的需求。现在就上传您的照片，体验AI带来的表情魔法！\n\n  立即体验：[Facial Expression Changer](https://facialexpressionchanger.com/)",
    "created_at": "2025-07-28T09:30:50Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7381"
  },
  {
    "id": 7380,
    "title": "【工具推荐】名单列表比对，找出重复与差异项。支持自定义分隔符、XLSX 文件导入、图片 OCR 。",
    "content": "## 🔍 简介\n\n名单比对工具可以帮你快速识别两组数据的重复、差异、缺失项。\n支持文本快速粘贴、导入表格数据、图片文字识别，还可以自定义分隔符，一键清洗、去重相关数据。\n\n## 📌 痛点\n\n无论是工作、学习还是组织管理，我们经常需要比对两份名单，却总是被以下问题困扰：\n\n- **群成员 vs 报名表**：谁没报？谁重复报？谁报了却没进群？\n- **人事对账太繁琐**：人资系统导出的名单 vs 部门手工整理的版本，谁多了？谁漏了？\n- **论文参考文献重复引用？** 作者顺序对不上？遗漏了关键来源？\n- **数据粘在一起**：多个名字/条目挤在一个单元格中，拆分还得自己加分隔符？\n\n这些操作原本需要手动处理、格式整理、Excel 函数辅助……\n\n现在，使用这个工具轻松帮你搞定。\n\n**只要你手头有「两组文本/数据」，想知道它们有哪些重复、有哪些差异，这个工具都能帮上忙！**\n\n\n## ✨ 核心亮点\n\n- 完全免费，打开即用。纯前端实现，数据不会离开用户浏览器，隐私安全。\n- **分隔符灵活配置**：自动识别常见分隔符，也可手动自定义，轻松处理粘连数据。\n- **一键清洗整理**：去重、去空、去无效内容，一键完成。\n- **表格文件导入更方便**：支持上传 .xlsx 文件，按列选择要比对的数据。无需打开沉重的 Excel 艰难缩放与操作。\n- **OCR 图像识别支持**：截图、拍照上传也能识别，内置裁剪工具，识别更精准。\n\n\n## 🌐 相关链接\n\n-  [立即体验](https://list.huyixi.com)  \n-  [GitHub](https://github.com/huyixi/list-comparison)  \n-  [小红书软件介绍](http://xhslink.com/m/5f2suU7IFeE)\n\n## 🖼️ 截图\n\n![p1](https://raw.githubusercontent.com/huyixi/Pics/main/uPic/p1_{yaer}0728.png)\n![p2-3_{yaer}0728](https://raw.githubusercontent.com/huyixi/Pics/main/uPic/p2-3_{yaer}0728.png)\n![p3-2_{yaer}0728](https://raw.githubusercontent.com/huyixi/Pics/main/uPic/p3-2_{yaer}0728.jpg)\n![p4_{yaer}0728](https://raw.githubusercontent.com/huyixi/Pics/main/uPic/p4_{yaer}0728.png)\n\n以上展示的姓名电话等信息均为 AI 生成的模拟数据，仅用于演示目的。",
    "created_at": "2025-07-28T09:22:03Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7380"
  },
  {
    "id": 7379,
    "title": "【开源自荐】深度解剖写简历+面试的本质逻辑（结合多学科）",
    "content": "## 如何写简历\n- https://github.com/MaskerPRC/resume-deepthinking\n- 通过整合心理学、社会学、传播学、哲学、科学方法论、营销学和应用技术学科，构建了一个全面、系统、科学的简历写作理论框架和实践方法论。\n\n## 如何面试\n- https://github.com/MaskerPRC/interview-deepthinking\n- 系统性地从心理学、社会学、哲学、科学、营销学五大学科视角，深度分析和重新定义了面试这一复杂的社会现象。项目将面试重新定位为多维度信息交换与匹配评估的复杂系统，而非传统的简单问答过程。",
    "created_at": "2025-07-28T08:55:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7379"
  },
  {
    "id": 7378,
    "title": "【网站自荐】Aluo AI - 电商图智能生成平台，免费体验、无需设计基础！1分钟搞定主图+场景图！",
    "content": "大家好！\n\n今天向大家介绍一款专为电商卖家和内容创作者打造的 AI 工具 —— [Aluo AI](https://aluo.ai/)。\n我们致力于解决电商图制作繁琐、效率低、设计贵的问题，让人人都能用 AI 快速生成专业商品图。\n\n### Aluo AI 能做什么？\n✅ 去背景、加场景，一键搞定主图\n✅ 根据商品自动匹配合适背景、灯光和构图\n✅ 多平台尺寸适配（淘宝 / 京东 / Amazon / Shopify / 小红书）\n✅ 支持文生图，自然语言生成创意场景\n\n🎉 立即体验 👉 [Aluo AI](https://aluo.ai/)\n无需安装，网页版直接使用。首图免费，无需登录！\n\n![Aluo AI 主视觉](https://aluo.ai/og-image.webp)\n\n---\n\n### Aluo AI 有哪些亮点？\n- ✂️ 上传图片自动去背景 —— 无需抠图经验，AI 秒级识别并清除背景，干净自然，适用于复杂商品轮廓。\n- 🖼️ 自由搭配不同场景图 —— 你可以为任意产品选择合适的背景图，生成风格统一、质感真实的电商主图或场景图。\n- 💬 自然语言修改图片细节 —— 像「把背景调暗一点」「让产品更居中」「加入柔光效果」这类操作，只需一句话描述即可完成，接近 Photoshop 的编辑能力。\n- AI 驱动生成高质量产品图 —— 不只是拼贴场景，而是由 AI 理解图片语义，合成符合你需求的真实、高质感电商图。\n- 📐 多平台尺寸友好 —— 生成图片适用于Amazon、eBay、Shopify等，适合直接用于电商上新、投放或内容分发。\n\n[!在线观看](https://github.com/user-attachments/assets/c604fadc-bb5b-48d6-99b3-c0ea9e8b47f4)\n\n### 示例用法：\n1. 🛍️ 电商卖家：上传白底商品图 → 选择“木纹桌面 + 柔光窗景”场景 → 秒出商品场景图，用于主图或详情页。\n2. 🧠 视觉设计师：输入指令「让产品更靠中间一些，背景模糊一点」→ 系统自动完成图像排布调整。\n3. 📸 自媒体 / 内容创作者：用自然语言描述想要的场景，比如「一台咖啡机放在温暖厨房环境中」→ 自动生成电商可用的成图。\n\n### 适合谁用？\n- 电商运营、品牌卖家、海外独立站\n- 设计师 & 创意团队提升效率\n- 没有美工资源的小商家或个人\n- 需要快速出图的新媒体人、自媒体作者\n\n<img width=\"1657\" height=\"824\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/598fd2d9-24ef-46b5-b0b1-1573702b2900\" />\n\n\n<img width=\"1648\" height=\"816\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/99d47f79-b3e4-4fb6-a839-7e8e6264d47f\" />\n\n\n<img width=\"1644\" height=\"818\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/527d437a-d94b-4dc4-8ba6-71ba68045092\" />\n\n\n<img width=\"1646\" height=\"825\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3c523d50-f96e-4ce6-886e-3e0ffe4432d0\" />",
    "created_at": "2025-07-28T08:09:49Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7378"
  },
  {
    "id": 7377,
    "title": "【开源自荐】一个收集了程序员日常工作和技术面试中最常用的英语表达的repo，配有音频可以练习听力",
    "content": "repo: [https://github.com/yexia553/developer-english-phrases](https://github.com/yexia553/developer-english-phrases)\n\n说明：\n我在合资企业工作，我们组一直因为英语问题招不到人，我自己的英语也不是特别好，就萌生了按照工作和面试两个场景来收集最常用的英语表达，这样可以有针对性地学习。\n\nrepo中有一个网址，里面配有对应的音频，可以用于练习听力，免费的。\n\nrepo中是两个json文件，方便大家自己用代码二次处理。\n\n<img width=\"659\" height=\"520\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/178f2e28-79c7-4215-8536-efa8c6bfefde\" />\n\n<img width=\"634\" height=\"597\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f751e155-685e-4c6f-819f-5dc3339e451b\" />\n",
    "created_at": "2025-07-28T03:41:01Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7377"
  },
  {
    "id": 7376,
    "title": "【工具自荐】推荐一个开发者导航站 https://lesslink.top",
    "content": "lesslink.top 主张少即是多。\n导航汇集了站长常用的优质网站，包括前后端开发、AI咨询获取等内容。\n\n<img width=\"1257\" height=\"892\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bf0acc9f-6614-4604-a5fa-be8224139386\" />",
    "created_at": "2025-07-27T07:29:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7376"
  },
  {
    "id": 7375,
    "title": "【开源自荐】0 成本，最快 1 分钟部署的新闻热点助手，消息直推手机",
    "content": "> **项目地址：[https://github.com/sansan0/TrendRadar](https://github.com/sansan0/TrendRadar)**\n\n<div align=\"center\">\n\n# 🎯TrendRadar\n\n<strong>🚀 最快一分钟部署的热点助手 —— 告别无效刷屏，只看真正关心的新闻资讯</strong>\n\n</div>\n\n\n\n## ✨ 核心功能\n\n### **全网热点聚合**\n\n默认监控 11 个主流平台\n\n- 今日头条\n- 百度热搜\n- 华尔街见闻\n- 澎湃新闻\n- bilibili 热搜\n- 财联社热门\n- 凤凰网\n- 贴吧\n- 微博\n- 抖音\n- 知乎\n\n> _理论上支持 35 个左右，如果想额外增加，可看最下方的**自定义监控平台**_\n\n### **智能推送策略**\n\n提供三种工作模式满足不同需求：\n\n| 模式 | 推送时机 | 显示内容 | 适用场景 |\n|------|----------|----------|----------|\n| **当日汇总模式**<br/>`daily` | 按时推送 | 当日所有匹配新闻<br/>+ 新增新闻区域 | 日报总结<br/>全面了解当日热点趋势 |\n| **当前榜单模式**<br/>`current` | 按时推送 | 当前榜单匹配新闻<br/>+ 新增新闻区域 | 实时热点追踪<br/>了解当前最火的内容 |\n| **增量监控模式**<br/>`incremental` | 有新增才推送 | 新出现的匹配频率词新闻 | 避免重复信息干扰<br/>高频监控场景 |\n\n- **📈 投资者/交易员** → 选择 `incremental`，及时获取新增资讯\n- **📰 自媒体人/内容创作者** → 选择 `current`，掌握实时热点趋势  \n- **📋 企业管理者/普通用户** → 选择 `daily`，定时获取完整日报\n\n### **精准内容筛选**\n\n设置个人关键词（如：AI、比亚迪、教育政策），只推送相关热点，过滤无关信息\n\n> _比如关注\"新能源\"，自动筛选出特斯拉降价、政策补贴等相关新闻_\n\n### **多渠道实时推送**\n\n支持**企业微信**、**飞书**、**钉钉**、**Telegram**，消息直达手机\n\n### **零技术门槛部署**\n\nGitHub 一键 Fork 即可使用，无需编程基础。\n\n> _如果要手机接收通知， 要达到 1 分钟部署完毕的效果，请选择**企业微信**_\n\n### **减少 APP 依赖**\n\n不再需要频繁打开各种资讯 APP，有效控制手机使用时间\n\n> _从\"被算法推荐绑架\"变成\"主动获取自己想要的信息\"_\n\n**适合人群：** 投资者、自媒体人、企业公关、关心时事的普通用户\n\n**典型场景：** 股市投资监控、品牌舆情追踪、行业动态关注、生活资讯获取\n\n**💡 提示：** 想要网页版？进入你的仓库 Settings → Pages，启用 GitHub Pages 即可获得自动更新的新闻页面链接。比如我这里[TrendRadar](https://sansan0.github.io/TrendRadar/)。\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/sansan0/TrendRadar/refs/heads/master/_image/2025-06-14.jpg\" alt=\"最新推送效果\" width=\"400\"/>\n</p>",
    "created_at": "2025-07-27T06:48:36Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7375"
  },
  {
    "id": 7374,
    "title": "【开源自荐】鸿蒙沙箱文件浏览器 - SandboxFinder",
    "content": "# 鸿蒙沙箱浏览器 [SandboxFinder](https://github.com/iHongRen/SandboxFinder)\n\n![Version](https://img.shields.io/badge/version-1.0.0-blue)  ![License](https://img.shields.io/badge/License-Apache%202.0-green.svg)    \n\n一个专为 HarmonyOS 应用开发者设计的**沙箱文件浏览器**，通过内置 HTTP 服务器提供 Web 界面访问应用沙箱目录。  \n\n![view](https://7up.pics/images/2025/07/24/view.png)\n\n\n\n## 核心特性\n\n###  沙箱文件系统\n\n- **内置 HTTP 服务器** - 基于 `TCP Socket` 实现的轻量级 HTTP 服务器\n- **多设备** - 支持模拟器和真机\n- **文件类型识别** - 智能识别文本、图片、视频、音频、SQLite 数据库等文件类型\n- **自定义端口** - 默认端口`7777`\n\n###  Web 界面访问\n\n- **响应式 Web UI** - 使用 Vue 3 + Tailwind CSS 构建的现代化界面\n- **快速访问** - 提供便捷的沙箱目录访问（`filesDir`、`cacheDir`、`tempDir`、`databaseDir` 等）\n- **预览** - 支持文本、图片、视频、音频、SQLite 数据库预览\n- **排序** - 支持按名称、大小、时间排序\n- **搜索** - 实时关键字搜索\n\n###  文件操作功能\n\n- **基础文件操作** - 创建、删除、重命名\n- **文件上传** - 支持大文件分块、批量、拖放上传\n- **下载** - 直链下载\n\n\n\n## 快速开始\n\n#### 集成到项目\n\n1. **安装**\n\n```sh\nohpm install @cxy/sandboxfinder\n```\n\n或 **添加依赖**，然后同步\n\n```json5\n// oh-package.json5\n{\n    \"dependencies\": {\n      \"@cxy/sandboxfinder\": \"^1.0.0\"\n    }\n}\n```\n\n2. **导入并启动**\n\n```typescript\n// EntryAbility.ets\n\n// 导入BuildProfile，编译工程自动生成\nimport BuildProfile from 'BuildProfile'; \n\nonWindowStageCreate(windowStage: window.WindowStage): void {\n  windowStage.loadContent('pages/Index', (err) => {\n    if (err.code) {\n      return;\n    }\n\n    // 推荐在 DEBUG 模式下使用 - 动态加载\n    if (BuildProfile.DEBUG) {\n      import('@cxy/sandboxfinder').then(async (ns: ESObject) => {\n        // 默认绑定到端口 7777\n        ns.SandboxFinder.run()\n      });\n\n      // 避免服务挂起，设置不息屏\n      windowStage.getMainWindowSync().setWindowKeepScreenOn(true)\n    }\n  });\n}\n```\n\n3. 确保鸿蒙设备和电脑在同一网络， 获取访问地址:  查看打印log -> 搜索 '--'。   \n\n   或者直接查看设备IP：设置 -> WLAN -> 已连接的WIFI详情 -> IP地址。\n\n```sh\n   ----------------------------------------------------------\n   \n   沙箱浏览器启动成功\n   请浏览器访问: http://192.168.2.38:7777/\n   \n   ----------------------------------------------------------\n```\n\n4. 浏览器直接访问： http://192.168.2.38:7777  (换成你的IP)\n\n\n\n## 模拟器使用\n\n沙箱浏览器开启后，模拟器需转发端口，才能访问。\n\n```sh\n# 查看模拟器设备\n> hdc list targets   # 输出: 127.0.0.1:5555\n\n# 转发端口 fport tcp:<localPort> tcp:<serverPort>\nhdc -t 127.0.0.1:5555 fport tcp:7777 tcp:7777   \n\n# 输出: Forwardport result:OK 表示成功\n```\n\n转发成功后，访问： http://127.0.0.1:7777/  , 如果无法访问，关闭网络代理工具试试看。\n\n\n\n## SandboxFinder 类说明\n\n1、`SandboxFinder` 提供了两个对外静态方法：\n\n```ts\n/**\n * 运行服务\n * @param port  端口号，默认7777\n * @param context UIAbilityContext, 默认 getContext()\n * @returns ServerInfo =》 { address: string , port: number }\n */\nstatic async run(port: number = 7777,\n  context: common.UIAbilityContext = getContext() as common.UIAbilityContext): Promise<ServerInfo>;\n    \n    \n /**\n * 停止服务\n */\nstatic async stop();\n```\n\n2、查看 ServerInfo\n\n```ts\n// EntryAbility.ets  - onWindowStageCreate()\nimport('@cxy/sandboxfinder').then(async (ns: ESObject) => {\n  // 绑定到端口 6666\n  ns.SandboxFinder.run(6666, this.context).then((serverInfo: ESObject) => {\n    console.log(JSON.stringify(serverInfo))\n  })\n});\n```\n\n\n\n# 作者\n\n [@仙银](https://github.com/iHongRen) 其他鸿蒙相关开源作品，欢迎使用和 🌟star ：\n\n1、[hpack](https://github.com/iHongRen/hpack) - 鸿蒙内部测试分发，一键脚本打包工具\n\n2、[Open-in-DevEco-Studio](https://github.com/iHongRen/Open-in-DevEco-Studio) - macOS 直接在 Finder 工具栏上，使用 DevEco-Studio 打开鸿蒙工程。\n\n3、[cxy-theme](https://github.com/iHongRen/cxy-theme)](https://github.com/iHongRen/cxy-theme) - DevEco-Studio 绿色背景主题",
    "created_at": "2025-07-27T06:33:48Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7374"
  },
  {
    "id": 7373,
    "title": "【工具自荐】Devink 机查查 ：一个只有3MB的免费系统硬件信息查看助手",
    "content": "## 介绍\n- 名称：Devink - 机查查\n- 官网：https://devink.techartlife.com/zh\n- 简介：系统硬件信息查看助手\n  - 一个永久免费的硬件信息查看小工具，仅 3MB ，单文件\n- 系统支持:\n  - 目前仅支持 Windows\n\n## 特性介绍\n\n- ✅ 永久免费\n  - 完全免费，无需注册，无功能限制，永久使用无忧。\n- 📦 迷你小巧\n  - 仅 3MB 体积，无需安装，绿色便携，随时拷贝即用。\n- ⚡ 即用即扔\n  - 无依赖、不写注册表、无广告干扰，用完即可删除，干净利落。\n- 🖥️ 信息全面\n  - 一键获取系统全貌：操作系统、CPU 、GPU 、主板、内存、硬盘、网卡等硬件信息，一目了然。\n\n## 应用场景\n\n- 分享配置\n- 装机总结\n- Hackintosh 机型确认\n\n## 截图展示\n\n![Image](https://github.com/user-attachments/assets/0491f4c3-e13e-4c74-ae47-6d35425ba414)",
    "created_at": "2025-07-27T05:36:30Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7373"
  },
  {
    "id": 7372,
    "title": "【工具自荐】优雅且免费无广告的在线设备检测工具网站 setupcheck.tech",
    "content": "打开浏览器即可对摄像头、麦克风、扬声器、键盘、鼠标、网络质量等做一个详细的诊断。完全免费，无广告。\n\n<img width=\"2860\" height=\"1462\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e4b14229-a4f6-4816-95e8-f0649039c873\" />\n\n<img width=\"2860\" height=\"1462\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/60b42d59-e84f-40fc-9ccb-1791e6c55862\" />\n\nhttps://www.setupcheck.tech/",
    "created_at": "2025-07-27T03:39:49Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7372"
  },
  {
    "id": 7371,
    "title": "[开源自荐] 简历警察, 你的简历在HRBP/面试官眼里是什么样子?",
    "content": "一周内已经帮助修改超过500份简历\n\nRepo地址: https://github.com/itMrBoy/resumePolice\n\n相关帖子: \n[开源介绍](https://linux.do/t/topic/818646)\n[项目来源](https://linux.do/t/topic/801867)",
    "created_at": "2025-07-26T18:33:41Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7371"
  },
  {
    "id": 7370,
    "title": "【工具推荐】API Copilot IDEA插件 - 将API文档深度集成到你的IDE环境",
    "content": "软件目标：将API文档无缝集成到你的开发环境，实现快速预览文档、一键代码生成、路径提示等。\n\n目标用户：不止是前端开发者，任何涉及到API对接的任何编程语言开发人员。\n\n核心功能：\n- 文档预览：目前支持导入OpenAPI文档、Apifox文档、Swagger Hub文档。\n- 代码生成：生成模型代码、请求示例代码、一键生成封装代码（JavaScript/TypeScript/Java-OpenFeign/Kotlin-OpenFeign)\n- 代码洞察：路径提示、路径点击跳转API文档\n\n备注1：目前支持Jetbarins家的所有IDE工具，包括但不限IDEA、WebStorm、PyCharm、GoLand等\n备注2:  目前模型和请求代码支持（C#、Dart、Go、Java、Kotlin、Python、Swift、TypeScript）\n\n链接：\n- 应用商店：https://plugins.jetbrains.com/plugin/27822-api-copilot\n- 项目主页：https://github.com/lkqm/api-copilot\n\n\n截图：\n\n文档预览\n<img width=\"3474\" height=\"1988\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/746982c7-5774-497d-a463-8545bf1601a7\" />\n\n一键生成代码\n\n<img width=\"3200\" height=\"1658\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/adaf6551-d879-4c28-97fb-10f5cd29bacd\" />\n\n生成模型代码\n\n<img width=\"1517\" height=\"742\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2d8a37c9-cbfa-4bea-9ca3-1dc2ffcf16ff\" />",
    "created_at": "2025-07-26T16:21:29Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7370"
  },
  {
    "id": 7369,
    "title": "【网站推荐】Zoom Earth",
    "content": " https://zoom.earth/\n\nZoom Earth 是一款交互式全球天气地图与飓风追踪工具，支持查看实时卫星云图、降水、风速、温度等多种气象要素。它最大的亮点是 逐点天气查询 🌍：用户可以直接点击地图上的任意具体位置，获取该点的当前天气和短期预报，而不是仅限于城市的平均气象数据。\n\n这对个人使用非常实用，尤其适合出游、登山、露营、自驾等场景 🏕🚗。出发前，你可以查看目的地未来几小时的降水、风速、气温等变化，判断是否适合出行，从而避免被突发天气打乱计划 🌦️。对于喜欢临时决定路线或自由行的人来说，特别有帮助。\n\n系统采用高分辨率数值预报（如 ICON、GFS）和高频更新的卫星影像 🔄，让你对天气“看得见”，实时掌握动向 ✅。同时支持网页和移动端使用 📱💻，界面直观、操作便捷，是值得推荐的个人天气工具。",
    "created_at": "2025-07-25T20:57:41Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7369"
  },
  {
    "id": 7368,
    "title": "【网站自荐】Raphael AI - AI Photo Editor，免费免登录的图片编辑器， 只靠文字输入编辑图片，免费，免登录！",
    "content": "大家好！\n\n今天很高兴向大家介绍 Raphael AI 2.0 —— 全球首款100% 免费、无限生成、无需注册登录。我们的使命，就是打破你与创意之间的所有壁垒。\n\n**Raphael AI 曾经的版本，只支持文字生成图片。 今天，我们支持图片编辑了！ 仍然是免费、无限生成、无需注册登录。** \n\n**马上体验：**\n • 免登录免注册，直接使用 Raphael AI  编辑图片：https://raphael.app/flux-kontext\n \n**Raphael AI 2.0 有哪些独特之处？**\n • 🌍 完全免费 —— 没有隐藏费用、没有付费墙、无需信用卡。\n • ♾️ 无限生成 —— 想编辑多少张图片都可以，随时随地不限量。\n • 🔓 无需注册登录 —— 上传即用，无需填写任何个人信息。\n • 🚀 最新 Flux-Kontext AI 驱动 —— **只需一句话，智能理解、上下文感知，自动完成编辑。** 支持中文，不过英文的效果更好！\n • 🔒 零数据留存 —— 你的图片和指令绝不存储，保护隐私。\n • 🖼️ 免费用户也无水印 —— 结果干净无广告。\n\n**你可以用 Raphael AI 2.0 做什么？**\n • 一键调整图片光效（比如：“改成沙漠山脉日落光”）。\n • 轻松更换背景（比如：“换成一片辽阔的草原”）。\n • 多种风格切换：写实、二次元、油画、抽象等。\n • 只需用自然语言描述即可完成专业级编辑 —— 无需设计基础。\n\n**真实用户案例：**\n • 把普通办公室照片变成了充满夕阳氛围的场景。\n • 普通人像一键生成二次元、油画风格。\n • 产品照去除背景，放进创意、品牌感十足的新场景。\n • 旅行照一秒加上戏剧性光效和艺术滤镜。\n\n**适合谁用？**\n • 创作者、设计师、市场营销、内容制作者，或是任何想让图片脱颖而出的人 —— 无需学习成本，无需花钱。\n\n**Raphael AI 官方网站**\n- [Raphael AI](https://raphael.app)  \n\n\n![Raphael AI](https://ph-files.imgix.net/a7365ded-1c9e-491f-9509-a43558984c1f.png?auto=compress&codec=mozjpeg&cs=strip&auto=format)\n\n![Raphael AI](https://ph-files.imgix.net/dab3dcb7-c826-4cbd-853f-840e22f316ec.png?auto=compress&codec=mozjpeg&cs=strip&auto=format)\n\n\n![Raphael AI](https://ph-files.imgix.net/df531b9e-e46f-4c94-bbae-bc1c086ab1e5.png?auto=compress&codec=mozjpeg&cs=strip&auto=format)\n\n\n![Raphael AI](https://ph-files.imgix.net/bf6a0d6f-43d1-4759-aa8c-580fbee8d085.jpeg?auto=compress&codec=mozjpeg&cs=strip&auto=format)\n\n\n\n\n",
    "created_at": "2025-07-25T20:38:12Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7368"
  },
  {
    "id": 7367,
    "title": "【网站自荐】【开源自荐】【工具自荐】一年100个AI产品挑战",
    "content": "## **一年 100 个 AI 产品挑战 · AI 项目看板** \n\nhttps://100.agitao.net\n\n这是一个公开、可追踪的长期挑战：**在 2025 年发布 100 个可被真实用户使用的 AI 产品**。\n\n目前已跑出 **10 个项目，平均进度 75%**，涵盖路径规划、教育、内容分发、游戏战术、自动化营销、照片生成、小程序与桌面端等方向。代表项目包括：**智能多点路径规划系统（95%，已完成）**、**Meta‑Dashboard AI 项目看板（95%，开发中）**、**问道 AGI 技术探索平台（90%，已部署）**、**PUBG 战术辅助工具YOLO视觉识别（80%，测试中）**、**LOL 战略分析工具（70%，测试中）** 等；技术栈覆盖 Node.js / Vue / Python / Flask / Electron / Playwright / PyTorch / YOLO / SQLite / MongoDB / iOS 原生。\n\n我将把**灵感—开发—上线—反馈—复盘**全流程透明化：每个产品的构思、版本迭代、真实数据与踩坑记录都会同步在看板页与博客，确保“可验证的进展、可复用的经验”。如果你愿意参与：试用反馈、想法交流、数据与渠道对接，或只是投递一句“加油”，都能帮助这个挑战走得更远。\n\n***追求一个字： 快！***\n\n进度与详情： https://100.agitao.net  ｜ 邮箱 **[[maskerprc@gamil.com](mailto:maskerprc@gamil.com)](mailto:maskerprc@gamil.com)**。\n\n详细文章介绍（包含个人对AI时代的一些预测）： https://mp.weixin.qq.com/s/m0qnka0wYuUKKEJG09JZdg",
    "created_at": "2025-07-25T20:18:35Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7367"
  },
  {
    "id": 7361,
    "title": "【开源自荐】PongHub：免费易用、0侵入式、无需服务器的服务监控平台",
    "content": "## [仓库地址](https://github.com/WCY-dt/ponghub)\n\nPongHub：免费易用、0侵入式、无需服务器的服务监控平台\n\n<img width=\"1744\" height=\"1125\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f2052ec7-7b87-4b67-8bff-e4972600558d\" />\n\n## 为什么做这个工具？\n\n相信不少人有这样的烦恼：\n\n1. 推特崩了，刷新不出来，还以为是自己那个*神秘网络工具*的问题\n2. 自己搭建的网站崩了，结果过了好几天有用户提醒才发现\n\n现有的解决方案有两类：\n\n1. 以 prometheus 为首的工具，通过在服务器内部安装该工具，可以实现对服务器的监控——但它*必须修改服务器代码*\n2. uptimerobot、OpenStatus 等网站，它们功能繁多，且无需修改服务器——但使用*不是那么方便，而且收费*\n\n于是，我就想到了可以仿照后者，但是白嫖 GitHub Actions 的免费资源，再通过 GitHub Pages 发布，最终得到了 PongHub！\n\n## 为什么推荐自己的这个工具？\n\n目前，PongHub 主要有这么几个优点：\n\n* **🕵️ 零侵入监控** - 无需改动服务器即可实现全功能监控\n* **🚀 一键免费部署** - 通过 Actions 自动构建，一键部署至 Github Pages\n* **🌐 全平台支持** - 兼容 OpenAI 等公共服务及私有服务接口\n* **🔍 多端口探测** - 单服务支持同时监控多个端口状态\n* **🤖 智能响应验证** - 精准匹配状态码及正则表达式校验响应体\n* **🛠️ 自定义请求引擎** - 自由配置请求头/体、超时和重试策略\n\n## 真的好用吗？\n\n使用 PongHub 分为两步：\n\n1. Fork 走这个仓库\n2. 修改下 `config.yaml`\n\n然后网站就建好了，再也不用管它了。\n\n> 最后，再次感谢一下阮一峰老师之前为我推荐 EasyTransfer 项目🌹！",
    "created_at": "2025-07-25T14:10:57Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7361"
  },
  {
    "id": 7360,
    "title": "【开源自荐】一个基于LLM的演示文稿生成平台，能够自动将文档内容转换为专业的PPT演示文稿。",
    "content": "LandPPT 是一个基于大语言模型（LLM）的智能演示文稿生成平台，能够自动将文档内容转换为专业的PPT演示文稿。平台集成了多种AI模型、智能图像处理、深度研究功能和丰富的模板系统，让用户能够轻松创建高质量的演示文稿。\n\n\n项目地址:https://github.com/sligter/LandPPT\n\n\n![image](https://img.pub/p/17ebc2a837fc02827d4a.png)\n\n![image](https://img.pub/p/1f9e79326ddeae3b8716.png)\n\n![image](https://img.pub/p/02bac27fe8097c012d9e.png)\n\n![image](https://img.pub/p/9a38b57c6f5f470ad59b.png)\n\n![image](https://img.pub/p/47090624aec2d337f0df.png)\n\n![image](https://img.pub/p/bebe9fe671d0125ceac6.png)\n\n![image](https://img.pub/p/0d2ffc650792c4a133a4.png)\n\n\n\n\n\n\n\n",
    "created_at": "2025-07-25T13:17:11Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7360"
  },
  {
    "id": 7357,
    "title": "【开源自荐】跟着教员走遍中国，毛主席足迹在线地图",
    "content": "> 读万卷书，行万里路\n\n本项目通过数据可视化的力量，将毛泽东主席自 1893 年至 1976 年波澜壮阔的一生，浓缩于一张可交互的动态地图之上。让那段恢弘的历史\"活\"起来，清晰、生动地展现伟人在中国历史洪流中的每一个关键抉择与地理印记。**\"古为今用\"**，希望这个工具能成为大家学习历史、理解历史的得力助手。\n\n[![PC端访问](https://img.shields.io/badge/PC端-支持-4285F4?style=flat-square&logo=windows&logoColor=white)](#)\n[![移动端访问](https://img.shields.io/badge/移动端-支持-4285F4?style=flat-square&logo=android&logoColor=white)](#)\n\n\n**在线体验：[https://sansan0.github.io/mao-map/](https://sansan0.github.io/mao-map/)**\n\n**详细：[README.md](https://github.com/sansan0/mao-map/blob/master/README.md)**\n\n![地图](https://raw.githubusercontent.com/sansan0/mao-map/refs/heads/master/docs/images/image.png)\n\n\n## 💖 星星之火\n\n无论你是发现了一个错误日期，还是想补充一段被遗漏的足迹，你的每一次贡献，都在让历史画卷更加完整。希望同志们能一起来进行详实的数据补充。\n\n## 🎯 核心功能\n\n### 🎬 动态历史\n\n- **时间轴播放**：点击 ▶️ 播放按钮，按时间顺序观看毛主席 83 年的人生轨迹动画\n- **时间定位**：拖动底部的时间轴，可以快速定位到特定年份，查看当时的活动\n\n### 🗺️ 交互式地图\n\n- **多层级标记**：根据访问次数和事件类型智能显示不同样式的地图标记\n- **详情面板**：点击地图上任意标记，查看该地点的完整历史事件列表\n- **路径高亮**：点击事件列表项可高亮显示对应的移动路径\n\n### 📊 数据统计\n\n- **实时统计**：动态显示移动次数、访问省市、国际移动等数据\n- **进度追踪**：实时显示当前播放进度、年龄、事件序号等信息\n- **可视化图表**：直观展示历史轨迹的统计信息\n\n### PC 端快捷键\n\n- **空格键**：播放 / 暂停\n- **← / →**：前一个 / 后一个事件\n- **Home / End**\n\n\n",
    "created_at": "2025-07-25T12:07:14Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7357"
  },
  {
    "id": 7356,
    "title": "【开源自荐】ThriveX 现代化博客管理系统",
    "content": "阮老师，我想再投稿一下这个博客系统，相比之前的版本，此次更新了：\n\n1. 新增了项目文档，超详细的部署教程\n2. 集成多平台存储（阿里云、腾讯云、百度云、华为云、七牛云等）\n3. 集成 AI 文章优化、总结\n4. 文章批量导入导出\n5. 新增了 2 种文章布局（瀑布流、卡片布局）\n6. 新增照片墙、标签墙、个人简历、我的设备、鱼塘、统计、留言墙等 8 个页面\n\n官网：[https://thrivex.liuyuyang.net/](https://thrivex.liuyuyang.net/)\n\n文档：[https://docs.liuyuyang.net/](https://docs.liuyuyang.net/)\n\n预览：[https://liuyuyang.net/](https://liuyuyang.net/)\n\n\n\n# 🎉 ThriveX 现代化博客管理系统\n\n🎉 `ThriveX` 是一个年轻、高颜值、全开源、永不收费的现代化博客管理系统，它是一个基于 `NextJS` + `Spring Boot` 的产物，所有技术栈都是目前市面上最主流的\n\n🛠️ **技术架构：**\n\n前端：**React 19**、**Next.js 15**、**TailwindCSS 4**、TypeScript、Zustand、Motion React、React Form Hooks、Echarts、Hero UI、Antd UI、Scss、Vercel、Docker、百度统计、高德地图\n\n\n后端：**Spring Boot**、Mybatis Plus、Redis、MySQL、Docker、X File Storage、Swagger\n\n\n❤️ **项目初衷：**\n\n一直对网站开发领域很感兴趣，从小就希望有一个属于自己的网站，因此踏上了 `Web` 全栈开发的旅途，立志有朝一日也能开发一款属于自己的网站。如今历时 `2` 年有余，一个人从 `0` 到 `1` 独立完成整个项目的全栈开发，也算是完成了从小的一个心愿\n\n\n<img width=\"1770\" height=\"1714\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3fd3cc28-939a-4ddf-91bb-c822eae9186c\" />\n",
    "created_at": "2025-07-25T11:37:06Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7356"
  },
  {
    "id": 7355,
    "title": "🎯 FreeDir Hunter - 域名提取工具 免费食用",
    "content": "\n一款快速帮你过滤并检查外链有无提交地址的工具\n\n夸克高速链接：https://pan.quark.cn/s/9ea65b9a99d1\n\nGitHub：https://github.com/hardusernames-team/FreeDir-Hunter\n\n欢迎提交issue，有用的功能必添加。\n\n<img width=\"511\" height=\"553\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/38d58715-4a1f-4476-9250-001ad56cfd3a\" />",
    "created_at": "2025-07-25T11:23:29Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7355"
  },
  {
    "id": 7354,
    "title": "[工具推荐] Go Tools - 免费在线工具集合站",
    "content": "url: 项目地址：https://go-tools.org\n\n🧰 Go Tools 是什么？\nGo Tools 是一个集合了几十款常用开发、生活和数据处理小工具的开源项目，旨在提供极致简洁、极速响应、零广告的在线工具体验。\n\n✅ 所有工具纯前端实现，可离线部署\n✅ 零依赖后端，可部署至 Cloudflare / GitHub Pages / Vercel 等任意静态托管平台\n✅ 支持多语言本地化，开箱即用\n✅ 精心打磨的 SEO 结构，适合构建面向搜索流量的工具型站点\n\n\n📦 已上线工具示例\n✅ Base64 编解码器\n✅ JSON 格式化与校验工具\n✅ UUID 生成器（支持 v1 ~ v7）\n✅ 时间戳转换器\n✅ 长度/重量/体积/温度转换器\n✅ 随机密码生成器\n\n",
    "created_at": "2025-07-25T06:57:43Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7354"
  },
  {
    "id": 7353,
    "title": "typo: Update issue-358.md",
    "content": null,
    "created_at": "2025-07-25T01:02:34Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/pull/7353"
  },
  {
    "id": 7352,
    "title": "【开源自荐】：轻量美观，简单易用的Ansible Web管理面板，运维福音",
    "content": "# Ansible Web管理面板\n\n轻量级，简单易用的Ansible Web管理面板，提供批量主机管理、运行剧本任务、命令执行、文件传输和Web终端等功能。适合小白用户。\n\n## 项目地址：https://github.com/sky22333/ansible-ui\n\n## 功能特性\n\n- 主机管理：方便快捷的批量添加主机\n- 主机认证方式：支持密码认证，或者统一的密钥认证\n- 主机密码加密存储，提高安全性\n- 命令执行：向选中主机发送命令并查看结果\n- 文件上传：上传文件到选中主机\n- 自定义Playbook执行：编写和执行Ansible Playbook任务剧本\n- Web终端：通过浏览器直接连接到远程主机\n- 访问日志：记录和查看系统访问情况\n\n\n## 预览截图\n\n![1](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/1.jpg)\n\n---\n\n![2](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/2.jpg)\n\n---\n\n![3](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/3.jpg)\n\n---\n\n![4](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/4.jpg)\n\n---\n\n![5](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/5.jpg)\n\n---\n\n![6](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/6.jpg)\n\n---\n\n![7](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/7.jpg)\n\n---\n\n![8](https://raw.githubusercontent.com/sky22333/ansible-ui/main/.github/workflows/8.jpg)",
    "created_at": "2025-07-24T18:27:21Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7352"
  },
  {
    "id": 7350,
    "title": "【工具自荐】免费实用的在线图片处理工具",
    "content": "产品：[AI Image Maker](https://aiimagemaker.net)\n网址：https://aiimagemaker.net\n介绍：一款免费实用的在线图片处理工具\n详情：强大的在线图片处理工具，支持设计海报、Logo，图片压缩、图片大小调整、图片格式转换、图片去背景、图片裁剪等功能，完全免费，没有广告。\n",
    "created_at": "2025-07-24T16:07:32Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7350"
  },
  {
    "id": 7349,
    "title": "【工具推荐】文件编码检测、编码转换器，纯浏览器端实现txt乱码修复、转编码",
    "content": "很惊讶，纯浏览器端，就能实现文件编码的检测、编码转换！\n\nhttps://txt-convert.janqi.com/zh.html\n\n工具的功能\n\n1. **转换文件编码** 解决文件打开乱码\n2. **检测文件编码**\n3. 批量转换txt、csv文件的编码\n\n在手机看电子书，遇到乱码也不怕了，因为这个不依赖服务器，手机打开网页就处理编码转换。\n",
    "created_at": "2025-07-24T12:40:10Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7349"
  },
  {
    "id": 7348,
    "title": "【工具自荐】CelerGPT- AI智能图像创作平台，一键换风格、换背景、换服装，支持自定义创作",
    "content": "大家好，介绍下最近开发的新产品CelerGPT，地址：https://celergpt.com/\n\n底层基于 Flux.1 Kontext pro/max 模型（专业图像编辑，角色一致性强）和 GPT-4o （支持文生图/图生图双模式）。\n\n目前暂时专注于创意图像编辑，支持一键换风格、换背景、换衣服场景，也支持自定义创作。欢迎大家免费体验（注册新用户会送3次体验），现在内测期间还能送一些积分。\n\n\n## 网站的首页部分截图\n\n<img width=\"1856\" height=\"686\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/93212009-a464-4b97-891d-b54af18eaaf3\" />\n\n## 效果展示：\n\n<img width=\"1075\" height=\"572\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7ce6c18f-1974-4c79-84fa-f76c5c5a444c\" />\n\n<img width=\"1168\" height=\"538\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3c645095-d3ce-4b6c-84db-c82236dceb41\" />\n\n<img width=\"1132\" height=\"532\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0ba68564-90a8-496c-b553-a6fdfc96a184\" />\n\n\n\n\n## 适合人群\n设计师、自媒体内容创作者、电商卖家、个人爱好者等。\n\n## 未来走向\n\n后续会从场景和视频方向拓展。\n\n## 核心功能速览\n\n### 1、一键创作\n\n用户一键操作，无需提示词。\n\n基于基于 Flux.1 Kontext pro 做了几个场景尝试：\n\n* AI 一键换风格：支持多种风格转换，内置水彩画、日式动漫、Q 版、吉卜力风格等。 \n* AI 一键换背景：上传人物图+预设背景库（或上传自定义背景图），一键融合新场景，背景过渡自然。 \n* AI 一键换服装：上传人物图+预设服装（或者上传自定义服装图），智能换装，保持角色一致性（ Flux.1 的强项）。 \n\n### 2、自定义创作：\n\n* 支持 Flux.1 Kontext pro/max 自定义创作 , 图生图（上传 1-4 张图片参考图）,速度快，一致性高。\n* 支持 GPT-4o 自定义创作，支持文生图（文本描述生成图像）和 图生图（上传 1 张或多张图片参考图），速度比 Flux 慢，但是综合质量高。\n\n### Flux.1 Kontext pro/max创作截图：\n\n<img width=\"1287\" height=\"740\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f05cdc84-e10e-4fd3-93df-70d3ffb49a28\" />\n\n\n### GPT-4o自定义创作截图：\n\n<img width=\"1273\" height=\"679\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/75d1f2a6-1e8e-472d-a2c4-9c01c4c95cc6\" />\n\n\n",
    "created_at": "2025-07-24T08:21:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7348"
  },
  {
    "id": 7347,
    "title": "网站自荐：极简表格，用于筛选硬盘、显卡和充电宝",
    "content": "1.硬盘比价:https://disk-costs.wzypbh.cn/\n\t\n2.显卡比价:https://gpu.wzypbh.cn/\n\t\n3.充电宝比价:http://powerbank.wzypbh.cn/\n\t\n这三个网站都是查询京东平台对应品类的数据，\n以极简表格的形式，对商品核心数据进行展示。\n\t\n均支持品牌、参数、价格等的筛选，并支持排序。\n\n每件商品均提供了直达链接，点击每一行最右侧的“查看/购买”按钮即可直达下单。\n\t\n\n另外，这三个网站也都支持移动端访问。",
    "created_at": "2025-07-24T07:05:45Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7347"
  },
  {
    "id": 7346,
    "title": "【开源自荐】通过对比学习更快地掌握新编程语言",
    "content": "\n# 一个专门为开发者设计的编程语言转换学习平台\n通过对比不同编程语言的语法特性和概念映射，帮助你快速理解新语言的核心概念，并能够将其应用到实际项目中。\n\n在线网站：[langshift.dev](langshift.dev)\n开源地址：[https://github.com/erweixin/langshift.dev](https://github.com/erweixin/langshift.dev)\n\n帮助您利用现有编程知识，直观地学习新语法和范式，告别从零开始。\n\n# 平台特色，以 js  => python 为例\n## 代码对比学习\n并排对比语法差异，直观理解语言特性\n\n<img width=\"837\" height=\"814\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6119fc16-2893-4c5c-9b0d-6cec4ee49276\" />\n\n## 代码在线编辑和运行\n支持多种语言在线编辑和运行，最直观感受代码运行结果。\n\n<img width=\"818\" height=\"447\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/409cdca2-e6bb-437b-853f-4c067f47ddbf\" />\n\n## 渐进式掌握\n从基础到高级，每种新语言 10+个模块系统学习，从变量声明到项目实战。\n\n<img width=\"274\" height=\"538\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9660f569-cc9a-4ab8-9f98-9979dc0d57f9\" />\n\n## 支持多种语言\n\n现已支持\njs => python\njs => rust\njs => C\njs => C++\njs => swift\njs => go",
    "created_at": "2025-07-24T06:45:45Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7346"
  },
  {
    "id": 7345,
    "title": "开源自荐：跨境ERP系统",
    "content": "开源时间：2022年\n项目链接：https://github.com/wimoor-erp\n官网链接：https://wimoor.com/\n\nWIMOOR ERP是专业的跨境电商一站式管理系统，功能齐全，系统集成了跨境电商所需的全部功能，可以实现从商品管理、订单处理、物流运输到财务结算等全流程的管理。主要模块有经营分析、广告管理、进销存管理、FBA货件管理、智能利润计算、财务核算等。还有物流跟踪、跟卖监控，广告分时调价等特色功能，拥有库存报表、发货报表、销售周报等各类统计报表。同时对角色和权限进行了细致全面的控制，精确到每个按钮和菜单。\n\n**开源协议**\n本系统100%开源，支持商用，遵守[MIT协议](https://zhida.zhihu.com/search?content_id=738446024&content_type=Answer&match_order=1&q=MIT%E5%8D%8F%E8%AE%AE&zhida_source=entity)，采用微服务+前后端分离+中央登录的模式，可支持新旧系统无缝对接。\n\n**技术栈**\n核心框架：SpringBoot\n\n持久层框架：Mybatis1.3.2,Mybatis plus\n\n日志管理：Log4j 2.10.0\n\nJS框架：Es6,vue3, nodejs\n\nUI框架: element plus, uni-app\n\n后台框架: spring cloud, alibaba colud, nacos, quartz,oss\n\n项目管理框架: Maven 3.2.3\n\n**开发环境**\n建议开发者使用以下环境，可以避免版本带来的问题\n\nIDE: eclipse\n\nDB: Mysql5.7+\n\nJDK: JDK1.8\n\nMaven: Maven3.2.3+\n\n**部署系统需要**\nmysql 数据库\n\nredis 数据库\n\nnacos 微服务中心\n\nseata 微服务事务（用于分库之后）\n\ncas-server 中央登录模块（非必要）\n\n建议使用开发工具：eclipse\n\n建议使用Java语言的软件开发工具包：JDK1.8\n\n每次启动需要提前开启：nacos 和seata\n\n**系统支持**\nquartz任务，使用微服务调用。 自动记录日志@SystemControllerLog(\"将我放在controller上面\")，@SystemControllerLog(\"将我放在方法上面\") 自动序列化日期 自动抓取亚马逊数据（所有支持的类容已加入在任务表：t_sys_quartz_task ） 广告数据抓取，需要自行修改 t_amz_region 中的授权 系统使用shiro管理登录，用redis记录登录的session。",
    "created_at": "2025-07-24T03:32:05Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7345"
  },
  {
    "id": 7344,
    "title": "【网站推荐】手机博物馆https://chaz.fun",
    "content": "在B站看到的，将一些诺基亚经典机型进行了建模，不仅可以全方位查看、与硬币对比尺寸，还可以进行互动、开机、操作界面、播放音乐、拍照等。\nhttps://chaz.fun/phone/3250/\n",
    "created_at": "2025-07-24T01:44:51Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7344"
  },
  {
    "id": 7343,
    "title": "【开源自荐】 AI原生的日记App-Lumma",
    "content": "详细见[Lumma-AI原生的问答式日记应用](https://github.com/geosmart/lumma/blob/master/README.zh.md)\n\n> 日有所记，问有所思；心有所感，自得其解。\n\n   \n   \n<img width=\"1220\" height=\"2700\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/76b4c0a8-8fd9-4f4a-be58-7b668661fdc1\" />\n\n   \n<img width=\"1220\" height=\"2700\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/477374bd-26e4-4936-bf31-05a3b257a8ce\" />\n\n<img width=\"1220\" height=\"2700\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a58fc1ac-cfe5-4bad-933b-a4d6143dff36\" />\n\n<img width=\"1220\" height=\"2700\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/28b7d9b3-4234-4fa6-9862-8c13894e4399\" />\n\n   \n📝 智能日记模式\n问答模式（Q&A）：通过预设问题引导记录，快速聚焦每日观察、情绪、挑战与反思\n聊天模式（Chat）：像朋友一样对话，与 AI 自由交流内心感受\n\n🤖 强大的 AI 能力\n支持多种主流大语言模型（LLM）接入\n自动生成问答式日记与摘要\n智能提取标题与分类标签\n支持自定义提示词和对话风格\n\n💾 数据安全与同步\n所有日记本地持久化为 Markdown 格式\n支持 WebDAV 云端同步\n支持通过 Advanced URI 触发 Obsidian 自动同步\n🛠 使用方式\n\n我目前的使用方式如下：\n\n- 手机端在Lumma通过微信语音输入记录日记内容，AI自动结构化（分类打标）生成日总结；\n- 基于Obsidian客户端或者Webdav插件同步到Obsidian电脑端；\n- 在Obsidian电脑端使用QuickAdd的template将日总结提取到对应的日记内（手机端只作为临时输入）；\n- 周总结按标签汇总统计日记内容\n   ",
    "created_at": "2025-07-24T01:08:21Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7343"
  },
  {
    "id": 7342,
    "title": "【工具自荐】imagetoexcel.app 从图片中提取表格数据",
    "content": "[imagetoexcel.app](https://imagetoexcel.app/) 一款自动从图片中提取表格数据的在线工具\n\n-  每天5份免费额度\n- 支持批量导入图片,可以导入到一个excel或多个excel中\n- 支持识别手写的表格和内容",
    "created_at": "2025-07-23T13:54:34Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7342"
  },
  {
    "id": 7341,
    "title": "【工具推荐】imagetoexcel.app 从图片中提取表格数据",
    "content": "[imagetoexcel.app](https://imagetoexcel.app/) 一款自动从图片中提取表格数据的在线工具\n\n-  每天5份免费额度\n- 支持批量导入图片,可以导入到一个excel或多个excel中\n- 支持识别手写的表格和内容",
    "created_at": "2025-07-23T13:52:03Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7341"
  },
  {
    "id": 7340,
    "title": "【开源自荐】在线的个人订阅管理系统",
    "content": "演示地址：https://sub.mwwlzz.top\n项目地址：https://github.com/huhusmang/Subscription-Management\n\n---\n\n一个在线的个人订阅管理系统，提供了一款现代化的订阅管理工具，帮助用户轻松管理和追踪各种订阅服务的费用及续订情况。\n\n**项目特性**：\n- 智能订阅管理：支持订阅服务的完整生命周期管理，包括添加、编辑、状态管理和批量导入。\n- 多币种支持：支持7种主要货币，实时更新汇率。\n- 费用分析报告：提供强大的数据分析与可视化功能。\n- 响应式设计：支持桌面和移动设备。\n- 本地优先：基于SQLite的本地数据存储保护隐私。\n- Docker部署：一键部署开箱即用。\n\n**核心功能**：\n- 订阅管理：增删改查服务。\n- 智能仪表盘：费用概览和到期提醒。\n- 分类统计：按类别和支付方式进行统计。\n- 搜索过滤：多维度搜索与状态过滤。\n- 自定义配置：支持自定义类别和支付方式。\n\n**高级功能**：\n- 自动续订处理：智能检测到期订阅并自动更新。\n- 数据导入导出：支持CSV和JSON格式。\n- 主题切换：支持浅色、深色及系统主题。\n- 支付记录追踪：完整的支付历史记录。",
    "created_at": "2025-07-23T12:40:53Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7340"
  },
  {
    "id": 7339,
    "title": "【开源自荐】开发者小工具集 DevUtils",
    "content": "DevUtils 借助AI开发的基于 Web 的开发者工具集，目前已包含20+常用小工具，旨在简化常见的开发任务。所有工具都在浏览器中本地运行，无任何后端数据传输，确保隐私数据不会泄露。  \n\n体验地址：[https://devutils.xindoo.xyz/](https://devutils.xindoo.xyz/)\n项目主页：[https://github.com/xindoo/devutils](https://github.com/xindoo/devutils)  \n\n![](https://xindoo-1254046096.cos.ap-beijing.myqcloud.com/img/uPic/iShot_2025-07-24_09.53.27YFuNVr.jpg) \n",
    "created_at": "2025-07-23T08:17:34Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7339"
  },
  {
    "id": 7338,
    "title": "【工具自荐】How To Say - 助您对话中都能游刃有余，既不失风度，又能精准回应。温和时如春风化雨，机智时如妙语连珠，反击时如四两拨千斤",
    "content": "**工具名称：** [How To Say](https://howtosay.cc/)\n\n**工具地址：** https://howtosay.cc/\n\n**工具简介：**\n\n [How To Say](https://howtosay.cc/) 是一款基于 LLM 智能理解语意、语境，生成更多风格表述和优雅回复的工具。\n\n不同于传统翻译软件，How To Say 提供三种专业模式，让我们一次性看到同一句话在同一语言不同场景下的表达/回复（回怼）方式，以及不同语言文化中的表达/回复（回怼）方式。\n\n**[How To Say](https://howtosay.cc/) 主要特点：**\n\n1、无需注册登录，即来即用\n2、AI 智能理解，理解翻译地道不生硬，适应当地语言环境\n3、支持 500 字符+20 种语言，最多可选 6 种语言同时处理\n4、可收藏常用语言组合，快速切换使用\n5、隐私保障，不收集保存用户内容，本地存储可随时删除\n\n**三种模式：**\n\n1、表达模式：提供 9 种不同风格的地道表达，包含友好、正式、幽默、讽刺、暴躁等风格，优化自己的回复表达。\n2、翻译模式：准确的标准翻译，适合正式场合，可以当做随身多语言翻译助手。\n3、理解模式：分析语境（可以自定义语境），提供 3 种场景下的地道回复，友好->更友好，讽刺->高级反讽，谩骂->高级回怼。\n\n正所谓\"以柔克刚，以智胜力，以文化人\"。让你在任何对话中都能游刃有余，既不失风度，又能精准回应。温和时如春风化雨，机智时如妙语连珠，反击时如四两拨千斤。\n\n【理解模式】\n\n<img width=\"794\" height=\"1682\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2282a5f8-2317-4270-97a8-c6de3728d122\" />\n\n【表达模式】\n![Image](https://github.com/user-attachments/assets/28bbe2d5-c34c-4b77-b696-b7b8cc5f541b)\n\n【翻译模式】\n\n<img width=\"928\" height=\"1235\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3c373bfc-0d56-4ea4-b612-99a79a9265ab\" />",
    "created_at": "2025-07-23T07:28:05Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7338"
  },
  {
    "id": 7337,
    "title": "【工具推荐】 个人自用的Linux单文件脚本：防火墙-systemctl服务模版-端口转发-用户管理-screen命令简化",
    "content": "# 【工具推荐】 个人自用的Linux单文件脚本：防火墙-systemctl服务模版-端口转发-用户管理-screen命令简化\n\n## 防火墙\n通过修改iptables input链规则来放行传入端口与网段\n\n### CUI菜单界面\n```\n\"==================================================\"\n\"           iptables 防火墙管理 (黑名单模式)\"\n\"==================================================\"\n\" 1. 放行TCP/UDP端口\"\n\" 2. 取消放行端口\"\n\" 3. 放行IP网段\"\n\" 4. 取消放行IP网段\"\n\" 5. 查看当前规则\"\n\" 6. 保存规则并持久化\"\n\" 0. 退出\"\n\"==================================================\"\n```\n\n## systemctl服务模版\n只需要修改模版文件的内容并重命名，之后执行脚本，即可完成systemctl自启服务的创建\n\n## 端口转发\n快速创建socat端口转发服务，需要安装好socat\n\n### 运行方式\n`./port-forward.sh <本地端口> <远程地址> <远程端口>`\n\n## 用户管理\n快速创建，删除Linux用户\n\n### CUI菜单界面\n\n```\n\"=======================================\"\n\"      Linux 用户管理系统\"\n\"=======================================\"\n\"  1. 创建普通用户\"\n\"  2. 创建管理员用户\"\n\"  3. 修改用户密码\"\n\"  4. 列出所有用户\"\n\"  5. 删除用户\"\n\"  6. 退出\"\n=======================================\"\n```\n\n## screen命令简化\n用于简化screen会话操作\n```\n用法:\n  screen-tool.sh write <name> <command>  向名称为name的screen会话写入命令（不存在则创建）（自动添加换行符\\n）\n  screen-tool.sh read <name>             读取名称为name的screen会话当前所有输出\n  screen-tool.sh del <name>              关闭名称为name的screen会话\n  screen-tool.sh ls                      列出所有screen会话\n  screen-tool.sh [-h|--help]             显示此帮助信息\n\n示例:\n  screen-tool.sh write myterm \"ls -l\"\n  screen-tool.sh read myterm\n  screen-tool.sh del myterm\n```\n\n访问连接: https://github.com/hvhghv/se-script\n[点击此快速跳转](https://github.com/hvhghv/se-script)",
    "created_at": "2025-07-23T07:09:52Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7337"
  },
  {
    "id": 7336,
    "title": "【开源自荐】基于Rust构建的自托管电子邮件API",
    "content": "产品网址：https://rustmailer.com/\n\n开源项目地址： https://github.com/rustmailer/rustmailer\n\n文档地址： https://rustmailer.com/docs\n\n## 🎯 应用场景\nRustMailer可轻松集成到您的应用程序中，通过提供强大的自托管电子邮件同步和发送后端，帮助您节省开发时间并提升效率。\n\n典型应用场景和行业包括：\n\n- 需要多账户邮件同步的SaaS平台  \n- 带有自动化事务邮件发送功能的CRM系统  \n- 支持动态邮件模板的营销自动化工具  \n- 集成实时邮件通知的客户支持软件  \n- 需要可靠IMAP和SMTP处理的企业应用  \n- 管理订单确认和促销邮件的电商平台  \n- 通过Webhook跟踪邮件打开和点击的数据分析解决方案  \n- 需要安全可审计邮件工作流的金融科技和医疗系统  \n\nRustMailer让开发者无需从零构建复杂邮件基础设施，专注于核心业务逻辑。\n\n## ✨ 功能特性\n- 🌐 **现代化API** - 提供gRPC和OpenAPI接口，支持多版本API文档\n- 🚀 **高性能&低成本** - 采用Rust编写，内存占用低，无需Redis或外部依赖，极简生产部署成本\n- 📬 **多账户IMAP支持** - 基于UID的增量同步，支持文件夹选择、窗口化或日期范围同步\n- 📤 **SMTP发送** - 通过连接池管理外发邮件\n- 🧾 **邮件模板支持** - 支持事务性和营销邮件的动态模板\n- 📡 **灵活MTA集成** - 可通过账户专属SMTP服务器、自托管MTA服务或第三方提供商发送\n- 📈 **打开与点击追踪** - 内置邮件打开和链接点击追踪功能\n- 🔄 **Webhook与VRL** - 向外部系统发送Webhook载荷，并通过VRL脚本进行过滤转换\n- 🔌 **NATS集成** - 将实时事件推送至NATS，实现下游系统无缝对接\n- 🖥️ **Web界面&客户端** - 内置基于网页的邮件客户端和管理面板\n- 🔐 **OAuth2支持** - 内置带网页授权界面的OAuth2流程，自动管理访问令牌和刷新令牌\n- 🌍 **代理支持** - 在受限环境中为IMAP/SMTP/OAuth2连接提供代理支持\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/81f39485-5688-41ad-8ee7-70752f18ee31\" />\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05a1664a-6a39-4a38-af27-35cba1c32cfb\" />\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fd0a29df-b99b-43e1-a15f-91b3e41e7f19\" />\n\n<img width=\"1920\" height=\"1080\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/64511e18-c4c2-4de5-83cd-a2f8df8ef0b7\" />",
    "created_at": "2025-07-23T06:50:57Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7336"
  },
  {
    "id": 7335,
    "title": "【开源自荐】在微信群里做任务",
    "content": "使用微信小程序 Skyline 引擎 + 聊天工具 API 实现的微信任务管理，好友或群友无需另外注册登录，即可将任务分派给他们！\n\n介绍: https://docs.liubai.cc/article/2025/weixin-task.html\n\n开源地址: https://github.com/yenche123/liubai/tree/cool/liubai-frontends/liubai-weixin",
    "created_at": "2025-07-23T06:31:51Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7335"
  },
  {
    "id": 7334,
    "title": "【文章推荐】【深入浅出 React 19：AI 视角下的源码解析与进阶】开源电子书",
    "content": "自荐一本开源电子书: 【深入浅出 React 19：AI 视角下的源码解析与进阶】。\n\n它是一整套“React 19 源码解析指南”，不仅把 **Fiber、调度器、Hooks、事件系统、并发特性**等核心模块拆成了 5 章循序渐进地讲透，还结合了 AI 辅助阅读源码的新玩法，门槛比啃官方仓库低得多。读完能帮你：\n\n* 面试聊到 React 原理不再只会背 API，能直接讲到源码层实现。\n* 遇到性能或“玄学” Bug，能迅速定位到 Fiber 树、Lanes 优先级或 Commit 阶段哪一步出问题。\n* 真正理解 React 19 的编译器、服务端组件等新特性，提前布局技术选型。\n\n电子书链接: [【深入浅出 React 19：AI 视角下的源码解析与进阶】](https://blog.xiguadev.com/react-code/overview/interview)",
    "created_at": "2025-07-23T03:22:21Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7334"
  },
  {
    "id": 7333,
    "title": "【开源自荐】开源的临时邮箱(Temp Mail)服务",
    "content": "名称：开源的临时邮箱(Temp Mail)服务\n\n网站地址：https://tempmailto.online/\n\n开源代码：https://github.com/zhugezifang/Temporary-Email\n\n<img width=\"3406\" height=\"1796\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/203e5b12-62b2-4f3d-851f-284716cbc639\" />",
    "created_at": "2025-07-23T02:40:33Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7333"
  },
  {
    "id": 7332,
    "title": "【开源自荐】Dish AI Commit Message Gen — AI 驱动的 VSCode 扩展，自动生成标准化 Git/SVN 提交信息 & PR 摘要 & 周报",
    "content": "⸻\n\n📌 项目概览\n\nDish AI Commit Message Gen 是一个由 AI 驱动的 VSCode 扩展，旨在帮助开发者快速生成标准化、符合规范的 Git/SVN 提交信息，并支持分支命名、PR 摘要、代码审查、周报生成等功能。\n\n支持多平台 AI 服务（OpenAI、Ollama、智谱、DashScope、豆包 AI、Gemini、Deepseek、SiliconFlow、OpenRouter 等）与 19 种语言输出，使协作更高效、规范更一致  ￼。\n\n⸻\n\n🌐 链接资源\n\n- \tGitHub 仓库: [https://github.com/littleCareless/dish-ai-commit](https://github.com/littleCareless/dish-ai-commit)\n- \tVSCode 市场：“[Dish AI Commit Message Gen](https://marketplace.visualstudio.com/items?itemName=littleCareless.dish-ai-commit)” 扩展，已获得八百多名用户下载使用  ￼\n- \t快速开始指南 提供安装、AI 服务配置等完整流程  [文档](https://554659.me/dish-commit-docs/)\n\n⸻\n\n✨ 核心功能亮点\n\n- \t🤖 多平台 AI 支持\n    - 支持 OpenAI (GPT‑3.5/4)、Ollama 本地部署、GitHub Copilot、智谱 GLM‑4、DashScope 通义系列、Gemini AI、Deepseek、SiliconFlow、OpenRouter 等  ￼\n- \t📋 提交/分支/PR/周报全能覆盖\n    - \t自动生成 Conventional Commits 消息，支持 emoji、作用域自动推断、重大变更标记等  ￼ ￼\n    - \t分支名称智能命名，符合团队规范\n    - \tPR 摘要自动生成（标题+描述）\n    - \t周报生成，支持定制模板并选择 AI 提供商\n- \t🧠 智能代码理解\n    - 代码差异分析、语义索引（通过 tree‑sitter + Qdrant）、函数调用模式生成结构化信息，提升生成质量  ￼\n- \t⚙ 可选高级功能\n    - 流式生成提交、仅标题或正文选项、合并提交支持、实验性结构化函数调用、动态配置界面等  ￼ ￼\n\n⸻\n\n🛠 安装使用指南\n\t1.\t在 VSCode 插件市场或通过命令面板搜索 “Dish AI Commit” 安装  ￼\n\t2.\t打开设置，配置 AI 服务信息，例如 provider、model、API key 等  ￼\n\t3.\t在 SCM 面板点击 “Dish AI Commit” 图标，即可生成提交信息\n\t4.\t可使用命令面板调用：选择 AI 模型、生成提交消息、生成分支名、生成PR摘要、进行代码审查、生成周报等  ￼\n\n⸻\n\n💻 技术细节 & 版本支持\n\t•\t当前版本：v0.32.0\n\t•\t支持 Node ≥18.20.8、pnpm ≥10.x、VSCode ≥1.90\n\t•\t使用 TypeScript + npm scripts + CI/CD (GitHub Actions) 管理构建、测试、发布流程\n\n⸻\n\n💡 为什么值得尝试？\n\t•\t✍️ 提升效率与一致性：自动生成高质量提交信息，节省时间，提高团队协作效率\n\t•\t🌍 多语言 & 多 AI 支持：轻松满足国际化团队及隐私/本地部署需求\n\t•\t⚙️ 功能全面：从分支、提交、PR、代码审查到周报，覆盖整个开发流程\n\t•\t🧩 高度可定制：支持 emoji、模板、函数模式、语义索引等高级特性\n\n⸻\n\n🧭 使用步骤\n\n安装扩展\nVSCode 内搜索 \"Dish AI Commit Message Gen\" 并安装\n\n配置 AI 服务\n打开设置（Ctrl+,），搜索 dish-ai-commit：\n- dish-ai-commit.base.provider: 选择 AI 提供商，如 OpenAI\n- dish-ai-commit.base.model: 例如 gpt-3.5-turbo\n- dish-ai-commit.providers.openai.apiKey: 填写 OpenAI Key\n\n生成提交\n打开 Git/SVN 仓库，在 SCM 面板点击图标，AI 将生成规范提交消息\n\n\n⸻\n\n🤝 贡献指南\n\n欢迎通过以下方式参与项目发展：\n\t•\t⭐ Star & Fork\n\t•\t🐞 提交 Issues 和 PR\n\t•\t📚 改进文档或配置模板\n\t•\t🛠 提供功能建议或 Bug 修复\n（详见 README 中贡献章节） ￼ ￼ ￼ ￼\n\n⸻\n\n📦 致谢 & 持续更新\n\t•\t受 ai‑commit, svn‑scm, vscode-gitlens 等项目启发\n\t•\t采用 MIT 许可证开源\n\t•\t持续集成 CI/CD、持续发布到 VSCode Marketplace\n\n⸻\n\n🚀 立即尝试 Dish AI Commit Message Gen，让你的提交更规范、更高效！",
    "created_at": "2025-07-23T00:45:16Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7332"
  },
  {
    "id": 7331,
    "title": "[工具自荐] 一句话生成任务清单的 AI 工具 —— AI Todo",
    "content": "#### ✍️ 背景与痛点\n\n像很多程序员一样，我日常要兼顾工作任务、生活琐事、项目计划，时常感到事情多但漏掉的也不少。想用智能方式管理这些待办，但市面上的工具要么设计臃肿，要么 AI 能力很弱。\n于是我花了几周开发了 **AI Todo** [https://www.aitodo.art/](https://www.aitodo.art/)\n\n\n目标是: \n\n* 只关注待办本身，不捆绑笔记、文档、时间轴等多余功能\n* 使用 AI 把“随手输入”自动转换为结构化任务（包含分类、优先级、预期时间等）\n* 实时排序，帮你优先处理最关键的事\n\n#### 🧪 实操展示\n\n![aitodo.art](https://i.v2ex.co/6164d9afl.png)\n\n\n1. **粘贴/输入自由文本**\n\n   > “安排周六带家人去看烟花；月度报告梳理；组织团建。”\n\n2. **AI 识别并拆解成任务卡片**\n\n![aitodo.art](https://i.v2ex.co/kQ980N6fl.png)\n\n\n3. **智能排序 & 优先级调整**\n\n![aitodo.art](https://i.v2ex.co/25Z9z71ml.png)\n\n\n4. 可直接点击“完成”，同时自动更新统计\n\n#### 💡 为什么这样做\n\n* 我尽量剥离功能，只聚焦“AI 智能待办处理”，轻量简洁 ✅\n* 聚焦“文字输入 → 智能识别 → 排序输出”，形成闭环操作流\n\n\n### 🛠 技术栈 \n\n* 前后端：next.js 技术栈\n* 部署在 Vercel，HTTPS 免费托管，支持自定义输入语言（中英皆可）\n\n\n### 📌 附：功能截图 & 链接\n\n> 👉 网站体验入口 [https://www.aitodo.art/](https://www.aitodo.art/)\n\n[![AI Todo: Instantly Turn a Phrase into a Step-by-Step Task List - YouTube](https://i.ytimg.com/vi/3sedmp0gm0o/maxresdefault.jpg)](https://www.youtube.com/watch?v=3sedmp0gm0o&list=PLzqjNPUy6dgkt60h-GoS_yihx-MnCg8rW&index=2 \"AI Todo: Instantly Turn a Phrase into a Step-by-Step Task List - YouTube\")",
    "created_at": "2025-07-22T12:04:55Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7331"
  },
  {
    "id": 7330,
    "title": "【工具自荐】Short AI - 自动创作爆款AI短视频生成器",
    "content": "想要制作精彩内容却不想露脸？那就试试 [Short AI](https://www.short.ai) ——你的视频创作秘密武器！\n\n这款颠覆性的 AI 视频剪辑工具，让制作专业级的无脸视频（Faceless Videos）变得前所未有的轻松。\n无需再花费数小时剪辑，现在就开始创作更吸睛的内容吧！\n\n你会爱上 Short AI 的理由：\n✨ 再也不用折腾复杂的视频剪辑软件\n✨ 几分钟内就能生成高质量视频片段\n✨ 紧跟“无脸内容”潮流，轻松吸引更多粉丝\n\nShort AI 非常适合内容创作者、创业者以及希望提升效率、规模化视频制作的社交媒体运营者！\n赶紧来试试:https://www.short.ai\n",
    "created_at": "2025-07-22T08:13:27Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7330"
  },
  {
    "id": 7328,
    "title": "【开源自荐】hpack - 鸿蒙 HarmonyOS 内测签名打包分发工具",
    "content": "当前鸿蒙开发周边的开发工具还很少，鸿蒙目前的安装包分发比 iOS 还繁琐。希望这个工具能帮助到各位鸿蒙开发者，简化内测打包流程。\nGithub: https://github.com/iHongRen/hpack\n\n# 🚀 hpack - 鸿蒙 HarmonyOS 内测签名打包分发工具\n\n\n<div align=\"center\">  \n\n![Version](https://img.shields.io/badge/version-1.0.8-blue) ![License](https://img.shields.io/badge/License-Apache%202.0-green.svg)    \n\n[🌐 **官网**](https://ihongren.github.io/hpack.html)   •   [📋 **更新日志**](https://github.com/iHongRen/hpack/blob/main/CHANGELOG.md)   •   [📚 **deepwiki**](https://deepwiki.com/iHongRen/hpack)  \n\n</div>\n\n## 简介\n\n**[hpack](https://github.com/iHongRen/hpack)** `[h-pack]` 是一个专为鸿蒙 HarmonyOS 打造的内测分发工具，完成配置后，你只需一行命令，就能轻松完成鸿蒙应用的构建、签名，上传、分发、安装。\n\n\n\n## 功能特性\n\n- 📦 **打包签名**：自动打出所有的 `hap` 和 `hsp` 包，并对它们进行签名\n- 🎯**多 Product 支持**：如果配置了多目标产物，支持选择指定的 `product` 打包\n- 📝 **签名 manifest.json5**：读取应用打包数据，自动生成已签名 `manifest.json5` 文件\n- 🌐 **分发 index 页**：自动生成分发页，提供多种 HTML 模板，支持自定义模板\n- 📱 **二维码生成**：自动生成应用的二维码，方便内测人员快速下载和安装\n- ☁️ **OSS 上传**：支持将打包文件上传到阿里云 OSS，以及自定义上传\n- 📱 **显示设备**：显示正在连接的设备 `hpack targets`\n- 🆔 **查看UDID**：显示正在连接设备的 UDID `hpack -u`\n- ✍️ **签名工具**：支持对未签名的 `.app`、`.hap`、`.hsp` 和包目录签名\n- 💾 **命令安装**：支持通过命令安装已签名的 `.app`、`.hap` 和包目录\n\n\n\n## 安装使用\n\n### 快速安装\n\n```bash\npip install harmony-hpack\n```\n\n<details>\n<summary>🔥 国内镜像源安装（推荐）</summary>\n\n```bash\n# 清华源\npip install -i https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple harmony-hpack\n\n# 阿里源\npip install -i https://mirrors.aliyun.com/pypi/simple harmony-hpack\n\n# 腾讯源\npip install -i https://mirrors.cloud.tencent.com/pypi/simple harmony-hpack\n\n# 官方源\npip install -i https://pypi.org/simple harmony-hpack\n```\n\n</details>\n\n<details>\n<summary>🔨 其他操作</summary>\n\n```bash\n# 验证安装\nhpack -h\n\n# 升级\npip install --upgrade harmony-hpack\n\n# 卸载\npip uninstall harmony-hpack\n\n# 配置镜像源\npip config set global.index-url https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple\n```\n\n</details>\n\n### 准备工作\n\n> 💡 **重要提示**：在开始之前，建议先阅读鸿蒙官方文档 [HarmonyOS 应用内部测试](https://developer.huawei.com/consumer/cn/doc/app/agc-help-harmonyos-internaltest-0000001937800101#section042515172197)\n\n你需要准备以下三个证书文件：\n\n| 文件类型 | 格式 | 说明 |\n|---------|------|------|\n| 发布证书 | `.cer` | 由AGC颁发的数字证书，用于验证应用的身份和签名            |\n| 内部测试 Profile | `.p7b` | 包含了包名、数字证书信息、申请的权限列表、设备列表等信息 |\n| 公私钥文件 | `.p12` | 包含非对称加密中使用的公钥和私钥 |\n\n**官方内部测试流程：**\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/3.jpeg\" alt=\"HarmonyOS 内部测试流程\" style=\"max-width: 100%; height: auto;\">\n</div> \n\n\n\n### 环境要求\n\n| 工具 | 版本要求 | 说明 |\n|------|----------|------|\n| **hvigorw**、**hdc** (可选) | 最新版 | DevEco Studio 自带集成，可单独安装 |\n| **JDK** | 17+ | 签名工具依赖 |\n| **Python** | 3.10+ | hpack 运行环境 |\n\n**环境检查命令：**\n\n```bash\n# 检查各工具是否正确安装\njava --version          # 检查 JDK 版本\npython --version       # 检查 Python 版本\nhvigorw -v              # 检查 hvigorw（需配置环境变量）\nhdc -v                  # 检查 hdc（需配置环境变量）\n```\n\n> ⚠️ **注意**：`hvigorw` 和 `hdc` 是 DevEco-Studio 自带工具，在其他终端工具下使用，需要设置环境变量，详见下方 Tips 部分。\n\n\n\n## 快速开始\n\n### 1、初始化项目\n\n在**项目根目录**下执行初始化命令：\n\n```bash\nhpack init\n```\n\n初始化完成后，会生成 `hpack` 目录结构：\n\n```\nhpack/\n├── config.py      # 配置文件：服务器、应用信息和打包签名等\n├── Packfile.py    # 回调文件：打包完成后的自定义处理逻辑\n└── sign/          # 证书目录：存放签名证书文件\n```\n\n### 2、修改配置\n\n打开 `hpack/config.py` 文件，根据实际情况：\n<details>\n<summary>📝 修改配置信息</summary> \n\n```python\nclass Config: \n    # 安装包存放的服务器的域名 \n    DeployDomain = 'static.hpack.com'\n\n    # 安装包存放的服务器地址，必须是 https\n    BaseURL = f\"https://{DeployDomain}/hpack\"\n    \n    # 应用信息 \n    AppIcon = f\"{BaseURL}/AppIcon.png\"\n    AppName = 'hpack'\n    Badge = '鸿蒙版'\n    \n    # index模板选择, 可选值为 [default, simple, tech, cartoon, tradition, custom]\n    # 如果是 custom，则表示自定义模板，需要自己在 hpack 目录写一个 index.html，\n    # 打包完成后进行内容填充，再写入 hpack/build/{product} 目录\n    IndexTemplate = \"default\" \n    \n    # 打包签名配置 \n    Alias = 'your key alias'\n    KeyPwd = 'your key password'\n    KeystorePwd = 'your store password'\n    # 替换 hapck/sign 目录下的证书文件\n    SignDir = 'sign'\n    Cert = os.path.join(SignDir, 'release.cer') \n    Profile = os.path.join(SignDir, 'test_release.p7b')  \n    Keystore =  os.path.join(SignDir, 'harmony.p12')\n  \n    # 以下是 v1.0.1 新增自定义构建配置 ===================\n    # 从v1.0.0升级上来的，可自行加上\n    \n    # 设置默认打包 product\n    # 优先使用这个指定的 product。\n    # 不设置，则通过读 build-prodile.json5 获取，存在多个时，打包前会提示选择\n    Product = \"\"  \n    \n    # 编译模式，默认是 debug 模式，release 模式需要设置为False\n    Debug = True  \n    \n    # 用于完全自定义 hvigorw 构建命令，配置后 Product、Debug 无效\n    # hvigorw 使用 https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/ide-hvigor-commandline\n    # 使用示例：\n    # [\n    #    'hvigorw', 'assembleHap', 'assembleHsp', \n    #    '--mode', 'module', \n    #    '-p', 'product=default', \n    #    '-p', 'debuggable=true',\n    #    '--no-daemon'\n    # ]\n    HvigorwCommand = []\n```\n</details>\n\n\n\n**替换证书文件**\n\n将你的证书文件放入 `hpack/sign/` 目录：\n\n```\nsign/\n├── harmony.p12        # 公私钥文件\n├── release.cer        # 发布证书  \n└── test_release.p7b   # 内部测试Profile\n```\n\n\n\n### 3、开始打包\n\n执行打包命令，可选择性地添加更新说明：\n\n```bash\n# 完整命令\nhpack pack \"修复了一些已知问题，优化了性能\"\n\n# 简写形式\nhpack p \"更新说明\"\n```\n\n✅ **打包完成后**，所有文件将保存在 `hpack/build/{product}/` 目录下。  \n\n\n\n### 4、配置上传（可选）\n\n<details>\n<summary>☁️ 阿里云 OSS 上传配置</summary>\n\n**安装依赖：**\n​```bash\npip3 install oss2\n```\n\n**配置 OSS：**\n打开 `Packfile.py` 完成配置：\n\n​```python\nclass OSSConfig: \n    # OSS 配置信息\n    Access_key_id = 'your_access_key_id'\n    Access_key_secret = 'your_access_key_secret'\n    Endpoint = 'your_endpoint'\n    Bucket_name = 'your_bucket_name'\n    Bucket_dir = 'hpack'\n```\n\n</details>\n\n<details>\n<summary>⚒️ 自定义服务器上传</summary>\n\n如果使用其他服务器，需要在`didPack`中编写上传代码：\n\n```python\ndef didPack(packInfo):\n    \"\"\"打包后回调，通常在这里上传打包结果到服务器\"\"\"\n    # 打包结果在 hpack/build/{product}，编写你的上传逻辑\n    pass\n```\n\n</details>\n\n\n\n## 运行示例\n\n### 🚀 开始打包\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/0.png\" alt=\"开始打包\" style=\"max-width: 100%; height: auto;\">\n\n### 🎯 选择 Product (多目标产物情况)\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/2.png\" alt=\"选择Product\" style=\"max-width: 100%; height: auto;\">\n\n### ✅ 打包完成\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/1.png\" alt=\"打包完成\" style=\"max-width: 100%; height: auto;\">\n\n\n### 📱 扫码安装\n<img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/install.png\" alt=\"扫码安装\" width=\"300\" style=\"max-width: 100%; height: auto;\">\n\n\n## 命令参考\n\n<details>\n<summary>📖 查看帮助</summary>\n\n```bash\nhpack -h  # 或 hpack help\n```\n\n**命令分类：**\n\n### 查看命令\n| 命令 | 说明 |\n|------|------|\n| `hpack -v, --version` | 显示版本信息 |\n| `hpack -h, --help` | 显示帮助信息 |\n| `hpack -u, --udid` | 显示设备的 UDID |\n| `hpack targets` | 显示连接的设备列表 |\n\n### 执行命令\n| 命令 | 说明 |\n|------|------|\n| `hpack init` | 初始化 hpack 目录并创建配置文件 |\n| `hpack pack, p [desc]` | 执行打包签名和上传，desc 为打包描述（可选） |\n| `hpack template, t [tname]` | 生成 index.html 模板文件 |\n\n</details>\n\n<details>\n<summary>📱 安装命令</summary>\n\n### 安装打包产物\n```bash\n# 安装指定 product 的产物\nhpack i -myproduct  # 注意加上横杠(-)\n```\n\n### 安装已签名包\n```bash\n# 安装 .app 文件\nhpack i ./xx.app\n\n# 安装 .hap 文件  \nhpack i ./xx.hap\n\n# 安装目录下所有包\nhpack i ./build/default\n```\n\n</details>\n\n<details>\n<summary>✍️ 签名命令</summary>\n\n### 基本语法\n```bash\nhpack sign,s <unsignedPath> <certPath>\n```\n\n### 使用示例\n```bash\n# 签名 .app 文件\nhpack s ./xx.app ./sign/cert.py\n\n# 签名 .hap 文件\nhpack s ./xx.hap ./sign/cert.py\n\n# 签名目录\nhpack s ./build/default ./sign/cert.py\n```\n\n### 证书目录结构\n```\nsign/\n├── cert.py          # 签名配置文件\n├── certFile.cer     # 证书文件\n├── keystore.p12     # 公私钥文件\n└── profile.p7b      # Profile 文件\n```\n\n### cert.py 配置示例\n```python\n# -*- coding: utf-8 -*-\nAlias = 'key alias' \nKeyPwd = 'key password' \nKeystorePwd = 'store password' \nCert = './certFile.cer'      # 相对于cert.py的路径\nProfile = './profile.p7b'    # 相对于cert.py的路径\nKeystore = './keystore.p12'  # 相对于cert.py的路径\n```\n\n</details>\n\n<br>\n\n## 模板预览\n\nhpack 提供多种内置分发页模板，满足不同风格的需求：\n\n```python\n# config.py 中配置模板\nIndexTemplate = \"default\"  # 可选值：[default, simple, tech, cartoon, tradition, custom]\n```\n\n| <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/default.png\" width=\"300\"> | <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/simple.png\" width=\"300\"> | <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/tech.png\" width=\"300\"> |\n| :----------------------------------------------------------: | :----------------------------------------------------------: | :----------------------------------------------------------: |\n|                       default 默认风格                       |                         simple 简单                          |                          tech 科技                           |\n\n| <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/cartoon.png\" width=\"300\"> | <img src=\"https://raw.githubusercontent.com/iHongRen/hpack/main/screenshots/tradition.png\" width=\"300\"> |\n| :----------------------------------------------------------: | :----------------------------------------------------------: |\n|                         cartoon 卡通                         |                        tradition 传统                        |\n\n\n\n## 自定义分发页\n\n#### 1、启用自定义模板\n修改 `config.py` 文件：\n```python\nIndexTemplate = 'custom'  # 启用自定义模板\n```\n\n#### 2、生成模板文件\n使用内置模板作为基础：\n```bash\n# 生成指定模板\nhpack template [tname]  # 简写：hpack t tech\n\n# 可选模板：default, simple, tech, cartoon, tradition\n# 不指定则默认使用 default 模板\n```\n\n> 💡 **提示**：命令会在 `hpack/` 目录下生成对应的 `index.html` 模板文件\n\n#### 3、配置模板处理\n在 `Packfile.py` 中启用自定义模板处理：\n\n```python\ndef customTemplateHtml(templateInfo):\n    packInfo = templateInfo[\"packInfo\"]\n    html = templateInfo[\"html\"]\n    date = datetime.now().strftime(\"%Y-%m-%d %H:%M\")\n    \n    # 填充模板变量\n    template = Template(html)\n    html_template = template.safe_substitute(\n        app_icon=Config.AppIcon,\n        title=Config.AppName,\n        badge=Config.Badge,\n        date=date,\n        version_name=packInfo[\"version_name\"],\n        version_code=packInfo[\"version_code\"],\n        size=packInfo[\"size\"],\n        desc=packInfo[\"desc\"],\n        manifest_url=packInfo[\"manifest_url\"],\n        qrcode=packInfo[\"qrcode\"]\n    )\n    print(html_template)  # ⚠️ 不可删除，用于传参\n\n# 调用处理函数\nif __name__ == \"__main__\":    \n    # ...省略的代码\n    elif args.t:\n        templateInfo = json.loads(sys.stdin.read())  \n        customTemplateHtml(templateInfo) \n```\n\n#### 4、执行打包\n```bash\nhpack p '自定义index.html'\n```\n\n\n\n## 📊 打包信息说明\n\n打包完成后，`PackFile.py` 中的 `didPack` 方法会接收到详细的打包信息：\n\n```python\ndef didPack(packInfo):\n    \"\"\"打包完成回调，通常在这里上传打包结果到服务器\"\"\"\n    print(json.dumps(packInfo, indent=4, ensure_ascii=False))\n```\n\n### 示例输出\n```json\n{\n    \"bundle_name\": \"com.cxy.hpack\",\n    \"version_code\": 1000000,\n    \"version_name\": \"1.0.0\",\n    \"size\": \"281KB\",\n    \"desc\": \"打包说明\",\n    \"build_dir\": \"hpack/build/default\",\n    \"remote_dir\": \"20250605200049\",\n    \"manifest_url\": \"https://服务器域名/hpack/20250605200049/manifest.json5\",\n    \"qrcode\": \"data:image/svg+xml;charset=utf-8,xxx...\",\n    \"index_url\": \"https://服务器域名/hpack/20250605200049/index.html\",\n    \"product\": \"default\",\n    \"willPack_output\": \"willPack中打包前传入的参数\"\n}\n```\n\n\n### 信息字段说明\n\n| 字段 | 类型 | 说明 |\n|------|------|------|\n| `bundle_name` | String | 应用包名 |\n| `version_code` | Number | 版本号 |\n| `version_name` | String | 版本名称 |\n| `size` | String | 包大小 |\n| `desc` | String | 打包说明 |\n| `build_dir` | String | 本地构建目录 |\n| `remote_dir` | String | 远程目录名（时间戳） |\n| `manifest_url` | String | manifest.json5 文件 URL |\n| `qrcode` | String | 二维码 base64 数据 |\n| `index_url` | String | 分发页面 URL |\n| `product` | String | 选择的 product |\n| `willPack_output` | String | 打包前传入的参数 |\n\n\n\n\n## 💡 Tips\n\n<details>\n<summary>🔧 环境配置</summary>\n\n### 配置环境变量\n在**非 DevEco-Studio** 终端中使用时需要配置：\n\n```bash\n# macOS\n# .zshrc 文件\nexport DEVECO_SDK_HOME=/Applications/DevEco-Studio.app/Contents/sdk\n\n# 验证配置\nhvigorw -v\n\n\n# Windows\n# 参考官方文档：https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/ide-hvigor-commandline\n```\n\n### Git 忽略配置\n在 `.gitignore` 文件中添加：\n```gitignore\n# 忽略 Python 临时文件\n__pycache__/\n```\n\n</details>\n\n<details>\n<summary>⚠️ 常见问题</summary>\n\n### 证书相关\n- **证书不一致**：如果已安装的 App 和准备安装的 App 打包证书不一致，需先卸载已安装的 App\n- **Profile 类型**：\n  - 使用**调试.p7b**：只能本地命令安装\n  - 使用**内部测试 Profile.p7b**：才能通过 **DeepLink** (链接) 形式安装\n\n### 网络相关\n- **联网校验**：安装时鸿蒙会进行联网校验，如果验证失败，尝试关闭代理\n- **错误码**：安装出错时会有提示，可根据 [错误码说明](https://developer.huawei.com/consumer/cn/doc/app/agc-help-internal-test-errorcode-0000002295325157) 查找原因\n\n</details>\n\n\n\n## 支持项目\n\n如果 hpack 对你有帮助，请考虑：\n- ⭐ 给项目点个 Star\n- 🔄 分享给更多开发者\n- 💬 在社区中推荐使用\n",
    "created_at": "2025-07-22T07:13:47Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7328"
  },
  {
    "id": 7324,
    "title": "【工具推荐】【开源】 TrackWeight  - 把 MacBook Pro 的 触摸板变成电子秤",
    "content": "https://github.com/KrishKrosh/TrackWeight\n\n和电子秤对比视频：\nhttps://x.com/KrishRShah/status/1947186835811193330?t=nVBgskvR8om71sBpSTTXIA&s=19",
    "created_at": "2025-07-22T02:33:26Z",
    "labels": [
      "weekly"
    ],
    "url": "https://github.com/ruanyf/weekly/issues/7324"
  },
  {
    "id": 7323,
    "title": "【工具自荐】英语情景说，小程序，真实场景英语口语练习通过真实生活场景对话，让英语口语练习更有趣、更实用！",
    "content": "\n<img width=\"3266\" height=\"1202\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/74e259a7-5cd4-4f90-8d0b-e8d135a723c4\" />\n\n<img width=\"828\" height=\"1600\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/70a8cdc2-2477-47b4-af69-30b2f9f7f0fa\" />\n",
    "created_at": "2025-07-21T14:58:40Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7323"
  },
  {
    "id": 7322,
    "title": "【工具推荐】RealAddress - 在线生成全球真实地址，支持 24 个国家！",
    "content": "注册国外网站、填表、测试跨境电商平台，苦于没有真实地址可用？可以用 RealAddress ，即可一键生成全球多个国家的真实格式地址！\n\n✅ 支持国家包括：美国、加拿大、德国、法国、英国、澳大利亚等 24 个热门国家与地区\n✅ 地址格式真实，包含街道、城市、邮编、省份，适用于账号注册、系统测试、模拟下单等用途\n✅ 完全免费、无需登录、网页即用\n\n是开发者、测试人员、跨境卖家、海外电商用户的高效工具。所有地址生成基于真实地址模型，并严格遵循各国地址标准，让你无需担心格式不符或验证失败。\n\n访问： https://realaddress.remit.ee/\n\n",
    "created_at": "2025-07-21T10:14:48Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7322"
  },
  {
    "id": 7321,
    "title": "【工具推荐】whois 查询，基于开源项目搭建",
    "content": "用开源项目搭了个简洁的 WHOIS 查询站，支持常见域名，响应速度尚可，界面干净，无广告、无统计、不套娃。\n\n适合查域名归属、注册时间、到期信息等，查完就走，隐私友好，部署在欧洲小鸡上，纯粹自用顺手，也顺便分享出来。\n\n欢迎随便用。\n\n👉 https://whois.remit.ee",
    "created_at": "2025-07-21T10:13:35Z",
    "labels": [],
    "url": "https://github.com/ruanyf/weekly/issues/7321"
  }
]